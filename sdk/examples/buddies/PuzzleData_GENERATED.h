////////////////////////////////////////////////////////////////////////////////////////////////////
// Generated by ConvertPuzzles.py - Do not edit by hand!
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
// Puzzle 0
////////////////////////////////////////////////////////////////////////////////////////////////////

const BuddyId kCutsceneBuddiesStart0[] = { BUDDY_GLUV, BUDDY_SULI };
const CutsceneLine kCutsceneLinesStart0[] =
{
    CutsceneLine(0, CutsceneLine::VIEW_RIGHT, "Gimme a kiss!"),
    CutsceneLine(1, CutsceneLine::VIEW_LEFT, "Can I use your\nmouth?"),
    CutsceneLine(0, CutsceneLine::VIEW_FRONT, "..."),
    CutsceneLine(0, CutsceneLine::VIEW_RIGHT, "OK!"),
};
const BuddyId kCutsceneBuddiesEnd0[] = { BUDDY_GLUV, BUDDY_SULI };
const CutsceneLine kCutsceneLinesEnd0[] =
{
    CutsceneLine(0, CutsceneLine::VIEW_RIGHT, "Muuuahhh!"),
    CutsceneLine(1, CutsceneLine::VIEW_LEFT, "Hot n' heavy!"),
};
const BuddyId kBuddies0[] = { BUDDY_GLUV, BUDDY_SULI };
const Piece kPiecesStart0[][NUM_SIDES] =
{
    {
        Piece(BUDDY_GLUV, Piece::PART_HAIR),
        Piece(BUDDY_GLUV, Piece::PART_EYE_LEFT),
        Piece(BUDDY_GLUV, Piece::PART_MOUTH),
        Piece(BUDDY_GLUV, Piece::PART_EYE_RIGHT),
    },
    {
        Piece(BUDDY_SULI, Piece::PART_HAIR),
        Piece(BUDDY_SULI, Piece::PART_EYE_LEFT),
        Piece(BUDDY_SULI, Piece::PART_MOUTH),
        Piece(BUDDY_SULI, Piece::PART_EYE_RIGHT),
    },
};
const Piece kPiecesEnd0[][NUM_SIDES] =
{
    {
        Piece(BUDDY_GLUV, Piece::PART_HAIR, false),
        Piece(BUDDY_GLUV, Piece::PART_EYE_LEFT, false),
        Piece(BUDDY_SULI, Piece::PART_MOUTH, true),
        Piece(BUDDY_GLUV, Piece::PART_EYE_RIGHT, false),
    },
    {
        Piece(BUDDY_SULI, Piece::PART_HAIR, false),
        Piece(BUDDY_SULI, Piece::PART_EYE_LEFT, false),
        Piece(BUDDY_GLUV, Piece::PART_MOUTH, true),
        Piece(BUDDY_SULI, Piece::PART_EYE_RIGHT, false),
    },
};

////////////////////////////////////////////////////////////////////////////////////////////////////
// Puzzle 1
////////////////////////////////////////////////////////////////////////////////////////////////////

const BuddyId kCutsceneBuddiesStart1[] = { BUDDY_SULI, BUDDY_RIKE };
const CutsceneLine kCutsceneLinesStart1[] =
{
    CutsceneLine(0, CutsceneLine::VIEW_RIGHT, "Let's get\nCRAZY!"),
};
const BuddyId kCutsceneBuddiesEnd1[] = { BUDDY_RIKE, BUDDY_SULI };
const CutsceneLine kCutsceneLinesEnd1[] =
{
    CutsceneLine(1, CutsceneLine::VIEW_LEFT, "My head hurts."),
};
const BuddyId kBuddies1[] = { BUDDY_RIKE, BUDDY_SULI };
const Piece kPiecesStart1[][NUM_SIDES] =
{
    {
        Piece(BUDDY_RIKE, Piece::PART_HAIR),
        Piece(BUDDY_RIKE, Piece::PART_EYE_LEFT),
        Piece(BUDDY_RIKE, Piece::PART_MOUTH),
        Piece(BUDDY_RIKE, Piece::PART_EYE_RIGHT),
    },
    {
        Piece(BUDDY_SULI, Piece::PART_HAIR),
        Piece(BUDDY_SULI, Piece::PART_EYE_LEFT),
        Piece(BUDDY_SULI, Piece::PART_MOUTH),
        Piece(BUDDY_SULI, Piece::PART_EYE_RIGHT),
    },
};
const Piece kPiecesEnd1[][NUM_SIDES] =
{
    {
        Piece(BUDDY_RIKE, Piece::PART_HAIR, true),
        Piece(BUDDY_RIKE, Piece::PART_EYE_LEFT, true),
        Piece(BUDDY_RIKE, Piece::PART_MOUTH, true),
        Piece(BUDDY_RIKE, Piece::PART_EYE_RIGHT, true),
    },
    {
        Piece(BUDDY_SULI, Piece::PART_HAIR, true),
        Piece(BUDDY_SULI, Piece::PART_EYE_LEFT, true),
        Piece(BUDDY_SULI, Piece::PART_MOUTH, true),
        Piece(BUDDY_SULI, Piece::PART_EYE_RIGHT, true),
    },
};

////////////////////////////////////////////////////////////////////////////////////////////////////
// Puzzle 2
////////////////////////////////////////////////////////////////////////////////////////////////////

const BuddyId kCutsceneBuddiesStart2[] = { BUDDY_BOFF, BUDDY_ZORG };
const CutsceneLine kCutsceneLinesStart2[] =
{
    CutsceneLine(0, CutsceneLine::VIEW_RIGHT, "How do I get\ncool hair\nlike you?"),
};
const BuddyId kCutsceneBuddiesEnd2[] = { BUDDY_BOFF, BUDDY_ZORG };
const CutsceneLine kCutsceneLinesEnd2[] =
{
    CutsceneLine(0, CutsceneLine::VIEW_RIGHT, "Now I look\nlike Kelly!"),
};
const BuddyId kBuddies2[] = { BUDDY_ZORG, BUDDY_BOFF };
const Piece kPiecesStart2[][NUM_SIDES] =
{
    {
        Piece(BUDDY_ZORG, Piece::PART_HAIR),
        Piece(BUDDY_ZORG, Piece::PART_EYE_LEFT),
        Piece(BUDDY_ZORG, Piece::PART_MOUTH),
        Piece(BUDDY_ZORG, Piece::PART_EYE_RIGHT),
    },
    {
        Piece(BUDDY_BOFF, Piece::PART_HAIR),
        Piece(BUDDY_BOFF, Piece::PART_EYE_LEFT),
        Piece(BUDDY_BOFF, Piece::PART_MOUTH),
        Piece(BUDDY_BOFF, Piece::PART_EYE_RIGHT),
    },
};
const Piece kPiecesEnd2[][NUM_SIDES] =
{
    {
        Piece(BUDDY_BOFF, Piece::PART_HAIR, true),
        Piece(BUDDY_ZORG, Piece::PART_EYE_LEFT, false),
        Piece(BUDDY_ZORG, Piece::PART_MOUTH, false),
        Piece(BUDDY_ZORG, Piece::PART_EYE_RIGHT, false),
    },
    {
        Piece(BUDDY_ZORG, Piece::PART_HAIR, true),
        Piece(BUDDY_BOFF, Piece::PART_EYE_LEFT, false),
        Piece(BUDDY_BOFF, Piece::PART_MOUTH, false),
        Piece(BUDDY_BOFF, Piece::PART_EYE_RIGHT, false),
    },
};

////////////////////////////////////////////////////////////////////////////////////////////////////
// Puzzle 3
////////////////////////////////////////////////////////////////////////////////////////////////////

const BuddyId kCutsceneBuddiesStart3[] = { BUDDY_MARO, BUDDY_GLUV };
const CutsceneLine kCutsceneLinesStart3[] =
{
    CutsceneLine(0, CutsceneLine::VIEW_RIGHT, "See the world\nfrom my eyes!"),
};
const BuddyId kCutsceneBuddiesEnd3[] = { BUDDY_MARO, BUDDY_GLUV };
const CutsceneLine kCutsceneLinesEnd3[] =
{
    CutsceneLine(0, CutsceneLine::VIEW_RIGHT, "That's much\nbetter."),
};
const BuddyId kBuddies3[] = { BUDDY_GLUV, BUDDY_MARO };
const Piece kPiecesStart3[][NUM_SIDES] =
{
    {
        Piece(BUDDY_GLUV, Piece::PART_HAIR),
        Piece(BUDDY_GLUV, Piece::PART_EYE_LEFT),
        Piece(BUDDY_GLUV, Piece::PART_MOUTH),
        Piece(BUDDY_GLUV, Piece::PART_EYE_RIGHT),
    },
    {
        Piece(BUDDY_MARO, Piece::PART_HAIR),
        Piece(BUDDY_MARO, Piece::PART_EYE_LEFT),
        Piece(BUDDY_MARO, Piece::PART_MOUTH),
        Piece(BUDDY_MARO, Piece::PART_EYE_RIGHT),
    },
};
const Piece kPiecesEnd3[][NUM_SIDES] =
{
    {
        Piece(BUDDY_GLUV, Piece::PART_HAIR, false),
        Piece(BUDDY_MARO, Piece::PART_EYE_LEFT, true),
        Piece(BUDDY_GLUV, Piece::PART_MOUTH, false),
        Piece(BUDDY_MARO, Piece::PART_EYE_RIGHT, true),
    },
    {
        Piece(BUDDY_MARO, Piece::PART_HAIR, false),
        Piece(BUDDY_GLUV, Piece::PART_EYE_LEFT, true),
        Piece(BUDDY_MARO, Piece::PART_MOUTH, false),
        Piece(BUDDY_GLUV, Piece::PART_EYE_RIGHT, true),
    },
};

////////////////////////////////////////////////////////////////////////////////////////////////////
// Puzzles Array
////////////////////////////////////////////////////////////////////////////////////////////////////

const Puzzle kPuzzles[] =
{
    Puzzle(
        0,
        "Big Mouth",
        "Swap Mouths",
        kCutsceneBuddiesStart0, arraysize(kCutsceneBuddiesStart0),
        kCutsceneLinesStart0, arraysize(kCutsceneLinesStart0),
        kCutsceneBuddiesEnd0, arraysize(kCutsceneBuddiesEnd0),
        kCutsceneLinesEnd0, arraysize(kCutsceneLinesEnd0),
        0,
        kBuddies0, arraysize(kBuddies0),
        0,
        kPiecesStart0, kPiecesEnd0),
    Puzzle(
        0,
        "All Mixed Up",
        "Unscramble",
        kCutsceneBuddiesStart1, arraysize(kCutsceneBuddiesStart1),
        kCutsceneLinesStart1, arraysize(kCutsceneLinesStart1),
        kCutsceneBuddiesEnd1, arraysize(kCutsceneBuddiesEnd1),
        kCutsceneLinesEnd1, arraysize(kCutsceneLinesEnd1),
        0,
        kBuddies1, arraysize(kBuddies1),
        3,
        kPiecesStart1, kPiecesEnd1),
    Puzzle(
        1,
        "Bad Hair Day",
        "Swap Hair",
        kCutsceneBuddiesStart2, arraysize(kCutsceneBuddiesStart2),
        kCutsceneLinesStart2, arraysize(kCutsceneLinesStart2),
        kCutsceneBuddiesEnd2, arraysize(kCutsceneBuddiesEnd2),
        kCutsceneLinesEnd2, arraysize(kCutsceneLinesEnd2),
        0,
        kBuddies2, arraysize(kBuddies2),
        0,
        kPiecesStart2, kPiecesEnd2),
    Puzzle(
        2,
        "Private Eyes",
        "Swap Eyes",
        kCutsceneBuddiesStart3, arraysize(kCutsceneBuddiesStart3),
        kCutsceneLinesStart3, arraysize(kCutsceneLinesStart3),
        kCutsceneBuddiesEnd3, arraysize(kCutsceneBuddiesEnd3),
        kCutsceneLinesEnd3, arraysize(kCutsceneLinesEnd3),
        0,
        kBuddies3, arraysize(kBuddies3),
        0,
        kPiecesStart3, kPiecesEnd3),
};
