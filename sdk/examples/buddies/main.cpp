/* -*- mode: C; c-basic-offset: 4; intent-tabs-mode: nil -*-
 *
 * Copyright <c> 2012 Sifteo, Inc. All rights reserved.
 */

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

#include <sifteo.h>
#include "assets.gen.h"
#include "App.h"
#include "Config.h"

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

using namespace Sifteo;

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

namespace {

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

Buddies::App sApp;

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

bool AllDoneLoading()
{
    for (unsigned i = 0; i < Buddies::kNumCubes; ++i)
    {
        if ( sApp.GetWrapper(i).IsEnabled() &&
            !sApp.GetWrapper(i).IsDoneLoading())
        {
           return false;
        }
    }
    
    return true;
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void OnNeighborAdd(_SYSCubeID c0, _SYSSideID s0, _SYSCubeID c1, _SYSSideID s1)
{
    if (sApp.GetWrapper(c0).IsEnabled() && sApp.GetWrapper(c1).IsEnabled())
    {
        sApp.OnNeighborAdd(c0, s0, c1, s1);
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void OnShake(_SYSCubeID cid)
{
    if (sApp.GetWrapper(cid).IsEnabled())
    {
        sApp.OnShake(cid);
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void LoadAssets()
{
    for (unsigned int i = 0; i < Buddies::kNumCubes; ++i)
    {
        if (sApp.GetWrapper(i).IsEnabled())
        {
            sApp.GetWrapper(i).InitVideoRom();
        }
    }
    
    // TODO: kLoadAssets=false results in some graphical glitches
    while (Buddies::kLoadAssets && !AllDoneLoading())
    {
        for (unsigned int i = 0; i < Buddies::kNumCubes; ++i)
        {
            if (sApp.GetWrapper(i).IsEnabled())
            {
                sApp.GetWrapper(i).PaintProgressBar();
            }
        }
        
        System::paint();
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void SetupEvents()
{
    _SYS_vectors.neighborEvents.add = OnNeighborAdd;
    _SYS_vectors.cubeEvents.shake = OnShake;
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void MainLoop()
{
    float time = System::clock();
    while (true)
    {
        float dt = System::clock() - time;
        time += dt;
        
        sApp.Tick(dt);
        sApp.Paint();
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void siftmain()
{
    sApp.Setup();
    LoadAssets();
    SetupEvents();
    MainLoop();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
