#include <sifteo.h>

// This file is autogenerated from dict/generate_dict.py

const unsigned PROTO_WORD_LIST_LENGTH = 90;

const static uint64_t protoWordList[] =
{
    0x8000000000001461L,		// ACE, length: 3, freq. cat.: 0
    0x8000000000005061L,		// ACT, length: 3, freq. cat.: 0
    0x800000000009d061L,		// ACTS, length: 4, freq. cat.: 1
    0x80000000000001a1L,		// AM, length: 2, freq. cat.: 0
    0x8000000000000e41L,		// ARC, length: 3, freq. cat.: 2
    0x800000000ad78ca2L,		// BECOME, length: 6, freq. cat.: 0
    0x1e2,		// BO, (bonus), length: 2, freq. cat.: 5
    0x80000000000061e2L,		// BOX, length: 3, freq. cat.: 0
    0x8000000000004823L,		// CAR, length: 3, freq. cat.: 0
    0x80000000000a4c23L,		// CAST, length: 4, freq. cat.: 0
    0x8000000000005023L,		// CAT, length: 3, freq. cat.: 0
    0x800000000009d023L,		// CATS, length: 4, freq. cat.: 2
    0x40a3,		// CEP, (bonus), length: 3, freq. cat.: 8
    0x800000000002d583L,		// CLUE, length: 4, freq. cat.: 1
    0x800000000132d583L,		// CLUES, length: 5, freq. cat.: 2
    0x800000000002b5e3L,		// COME, length: 4, freq. cat.: 0
    0x80000000019d0643L,		// CRAZY, length: 5, freq. cat.: 1
    0x800000000002c824L,		// DARE, length: 4, freq. cat.: 1
    0x3a45,		// ERN, (bonus), length: 3, freq. cat.: 8
    0x8000000001418705L,		// EXACT, length: 5, freq. cat.: 1
    0x80000000000010a6L,		// FED, length: 3, freq. cat.: 1
    0x8000000000006126L,		// FIX, length: 3, freq. cat.: 0
    0x800000000042e126L,		// FIXED, length: 5, freq. cat.: 1
    0x8000000000068647L,		// GRAM, length: 4, freq. cat.: 3
    0x800000000009b6a7L,		// GUMS, length: 4, freq. cat.: 3
    0x800000000003b828L,		// HANG, length: 4, freq. cat.: 1
    0x800000000ee4d828L,		// HAVING, length: 6, freq. cat.: 1
    0x800000000009ccacL,		// LESS, length: 4, freq. cat.: 0
    0x800000000009912cL,		// LIDS, length: 4, freq. cat.: 3
    0x8000000000058decL,		// LOCK, length: 4, freq. cat.: 1
    0x8000000000058eacL,		// LUCK, length: 4, freq. cat.: 1
    0x8000000001958eacL,		// LUCKY, length: 5, freq. cat.: 1
    0x800000000000002dL,		// MA, length: 2, freq. cat.: 3
    0x800000000006302dL,		// MALL, length: 4, freq. cat.: 3
    0x800000000136302dL,		// MALLS, length: 5, freq. cat.: 3
    0x8000000000004c2dL,		// MAS, length: 3, freq. cat.: 3
    0x800000000000642dL,		// MAY, length: 3, freq. cat.: 0
    0x80000000000a4d2dL,		// MIST, length: 4, freq. cat.: 2
    0x80000000019a4d2dL,		// MISTY, length: 5, freq. cat.: 3
    0x80000006645a4f2dL,		// MYSTERY, length: 7, freq. cat.: 2
    0x800000000004532dL,		// MYTH, length: 4, freq. cat.: 2
    0x800000000134532dL,		// MYTHS, length: 5, freq. cat.: 2
    0x80000000000051eeL,		// NOT, length: 3, freq. cat.: 0
    0x800000000000482fL,		// OAR, length: 3, freq. cat.: 2
    0x80000000000216efL,		// OWED, length: 4, freq. cat.: 1
    0xcb0,		// PEC, (bonus), length: 3, freq. cat.: 7
    0x80000000000048b0L,		// PER, length: 3, freq. cat.: 0
    0x8000000000001530L,		// PIE, length: 3, freq. cat.: 2
    0x8000000000519530L,		// PIECE, length: 5, freq. cat.: 0
    0x5df0,		// POW, (bonus), length: 3, freq. cat.: 4
    0x800000000122ddf0L,		// POWER, length: 5, freq. cat.: 0
    0x80000000005d2650L,		// PRIZE, length: 5, freq. cat.: 2
    0x2b2b0,		// PULE, (bonus), length: 4, freq. cat.: 6
    0x800000000acd6ab0L,		// PUZZLE, length: 6, freq. cat.: 2
    0x80000000000204b2L,		// READ, length: 4, freq. cat.: 0
    0x800000000009a4b2L,		// REIS, length: 4, freq. cat.: 3
    0x80000000000040b2L,		// REP, length: 3, freq. cat.: 0
    0x8000000000e4ccb2L,		// RESIN, length: 5, freq. cat.: 3
    0x800000000003b932L,		// RING, length: 4, freq. cat.: 0
    0x8000000000004132L,		// RIP, length: 3, freq. cat.: 2
    0x80000000013205f2L,		// ROADS, length: 5, freq. cat.: 2
    0x8000000000005df2L,		// ROW, length: 3, freq. cat.: 0
    0x8000000028590cb3L,		// SECRET, length: 6, freq. cat.: 1
    0x8000000000003933L,		// SIN, length: 3, freq. cat.: 2
    0x800000000002c933L,		// SIRE, length: 4, freq. cat.: 3
    0x8000000000e2c933L,		// SIREN, length: 5, freq. cat.: 3
    0x8000000000c605b3L,		// SMALL, length: 5, freq. cat.: 0
    0x800000000003d5b3L,		// SMUG, length: 4, freq. cat.: 2
    0x80000000000991f3L,		// SODS, length: 4, freq. cat.: 3
    0x80000000000625f3L,		// SOIL, length: 4, freq. cat.: 0
    0x800000000004b1f3L,		// SOLI, length: 4, freq. cat.: 3
    0x800000002644b1f3L,		// SOLIDS, length: 6, freq. cat.: 3
    0x196a693,		// STIMY, (bonus), length: 5, freq. cat.: 8
    0x6693,		// STY, (bonus), length: 3, freq. cat.: 5
    0x80000000000016b3L,		// SUE, length: 3, freq. cat.: 0
    0x80000000000994b4L,		// TEES, length: 4, freq. cat.: 3
    0x2651c8b4,		// TERCES, (bonus), length: 6, freq. cat.: 7
    0x800000000003b934L,		// TING, length: 4, freq. cat.: 3
    0x800000000ee4c934L,		// TIRING, length: 6, freq. cat.: 2
    0x80000000000039f4L,		// TON, length: 3, freq. cat.: 0
    0x800000002732b1d5L,		// UNLESS, length: 6, freq. cat.: 0
    0x800000001637b1d5L,		// UNLOCK, length: 6, freq. cat.: 2
    0x8000000000023937L,		// WIND, length: 4, freq. cat.: 0
    0x800000002ef23937L,		// WINDOW, length: 6, freq. cat.: 0
    0x41f7,		// WOP, (bonus), length: 3, freq. cat.: 6
    0x800000000002c9f7L,		// WORE, length: 4, freq. cat.: 1
    0x800000000005c9f7L,		// WORK, length: 4, freq. cat.: 0
    0x800000000855c9f7L,		// WORKED, length: 6, freq. cat.: 1
    0x8000000000773e57L,		// WRONG, length: 5, freq. cat.: 0
    0x8000000000003439L,		// YAM, length: 3, freq. cat.: 3
};
