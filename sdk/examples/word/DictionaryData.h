// This file is autogenerated from dict/generate_dict.py

const unsigned NUM_PUZZLES = 34;

const static char* puzzles[] =
{
    "ACT ",    // pieces: ['AC', 'T '], solutions: ['CAT', 'ACT']
    "CATS",    // pieces: ['CA', 'TS'], solutions: ['CAST', 'CATS', 'ACTS']
    "EXACT ",    // pieces: ['EX', 'AC', 'T '], solutions: ['CAT', 'EXACT', 'ACT']
    "ACE",    // pieces: ['AC', 'E '], solutions: ['ACE']
    "NOT ",    // pieces: ['NO', 'T '], solutions: ['NOT', 'TON']
    "BECOME",    // pieces: ['BE', 'CO', 'ME'], solutions: ['BECOME', 'COME']
    " FIXED",    // pieces: [' F', 'IX', 'ED'], solutions: ['FIX', 'FIXED', 'FED']
    "BOX",    // pieces: ['BO', 'X '], solutions: ['BOX', 'BO']
    "HAVING",    // pieces: ['HA', 'VI', 'NG'], solutions: ['HANG', 'HAVING']
    " WRONG",    // pieces: [' W', 'RO', 'NG'], solutions: ['WRONG', 'ROW']
    " SMALL",    // pieces: [' S', 'MA', 'LL'], solutions: ['SMALL', 'MALL', 'MALLS', 'MAS']
    "YAM ",    // pieces: ['YA', 'M '], solutions: ['YAM', 'MAY']
    "GRAM",    // pieces: ['GR', 'AM'], solutions: ['MA', 'AM', 'GRAM']
    "READ",    // pieces: ['RE', 'AD'], solutions: ['READ', 'DARE']
    "UNLOCK",    // pieces: ['UN', 'LO', 'CK'], solutions: ['LOCK', 'UNLOCK']
    " PRIZE",    // pieces: [' P', 'RI', 'ZE'], solutions: ['PRIZE', 'RIP']
    "CLUES ",    // pieces: ['CL', 'UE', 'S '], solutions: ['SUE', 'CLUES', 'CLUE']
    " PIECE",    // pieces: [' P', 'IE', 'CE'], solutions: ['PIECE', 'PEC', 'PIE', 'CEP']
    " CRAZY",    // pieces: [' C', 'RA', 'ZY'], solutions: ['CAR', 'CRAZY', 'ARC']
    "PUZZLE",    // pieces: ['PU', 'ZZ', 'LE'], solutions: ['PULE', 'PUZZLE']
    "LUCKY ",    // pieces: ['LU', 'CK', 'Y '], solutions: ['LUCKY', 'LUCK']
    "MISTY ",    // pieces: ['MI', 'ST', 'Y '], solutions: ['MISTY', 'MIST', 'STY', 'STIMY']
    " POWER",    // pieces: [' P', 'OW', 'ER'], solutions: ['WORE', 'POWER', 'POW', 'REP', 'WOP', 'PER']
    "MYTHS ",    // pieces: ['MY', 'TH', 'S '], solutions: ['MYTHS', 'MYTH']
    "WORKED",    // pieces: ['WO', 'RK', 'ED'], solutions: ['OWED', 'WORKED', 'WORK']
    "SECRET",    // pieces: ['SE', 'CR', 'ET'], solutions: ['SECRET', 'TERCES', 'TEES']
    " ROADS",    // pieces: [' R', 'OA', 'DS'], solutions: ['ROADS', 'OAR']
    "MYSTERY",    // pieces: ['MYS', 'TER', 'Y  '], solutions: ['MYSTERY']
    "TIRING",    // pieces: ['TI', 'RI', 'NG'], solutions: ['TING', 'RING', 'TIRING']
    "GUMS",    // pieces: ['GU', 'MS'], solutions: ['GUMS', 'SMUG']
    "UNLESS",    // pieces: ['UN', 'LE', 'SS'], solutions: ['UNLESS', 'LESS']
    "SOLIDS",    // pieces: ['SO', 'LI', 'DS'], solutions: ['SOIL', 'SOLIDS', 'SODS', 'LIDS', 'SOLI']
    "WINDOW",    // pieces: ['WI', 'ND', 'OW'], solutions: ['WINDOW', 'WIND']
    "RESIN",    // pieces: ['RE', 'SI', 'N '], solutions: ['SIREN', 'REIS', 'SIRE', 'RESIN', 'ERN', 'SIN']
};

const static unsigned char puzzlesNumGoalAnagrams[] =
{
    2,	// "ACT ", all anagrams: ['CAT', 'ACT']
    3,	// "CATS", all anagrams: ['CAST', 'CATS', 'ACTS']
    3,	// "EXACT ", all anagrams: ['CAT', 'EXACT', 'ACT']
    1,	// "ACE", all anagrams: ['ACE']
    2,	// "NOT ", all anagrams: ['NOT', 'TON']
    2,	// "BECOME", all anagrams: ['BECOME', 'COME']
    3,	// " FIXED", all anagrams: ['FIX', 'FIXED', 'FED']
    1,	// "BOX", all anagrams: ['BOX', 'BO']
    2,	// "HAVING", all anagrams: ['HANG', 'HAVING']
    2,	// " WRONG", all anagrams: ['WRONG', 'ROW']
    2,	// " SMALL", all anagrams: ['SMALL', 'MALL', 'MALLS', 'MAS']
    2,	// "YAM ", all anagrams: ['YAM', 'MAY']
    1,	// "GRAM", all anagrams: ['MA', 'AM', 'GRAM']
    2,	// "READ", all anagrams: ['READ', 'DARE']
    2,	// "UNLOCK", all anagrams: ['LOCK', 'UNLOCK']
    2,	// " PRIZE", all anagrams: ['PRIZE', 'RIP']
    2,	// "CLUES ", all anagrams: ['SUE', 'CLUES', 'CLUE']
    2,	// " PIECE", all anagrams: ['PIECE', 'PEC', 'PIE', 'CEP']
    2,	// " CRAZY", all anagrams: ['CAR', 'CRAZY', 'ARC']
    1,	// "PUZZLE", all anagrams: ['PULE', 'PUZZLE']
    2,	// "LUCKY ", all anagrams: ['LUCKY', 'LUCK']
    2,	// "MISTY ", all anagrams: ['MISTY', 'MIST', 'STY', 'STIMY']
    2,	// " POWER", all anagrams: ['WORE', 'POWER', 'POW', 'REP', 'WOP', 'PER']
    2,	// "MYTHS ", all anagrams: ['MYTHS', 'MYTH']
    2,	// "WORKED", all anagrams: ['OWED', 'WORKED', 'WORK']
    1,	// "SECRET", all anagrams: ['SECRET', 'TERCES', 'TEES']
    2,	// " ROADS", all anagrams: ['ROADS', 'OAR']
    1,	// "MYSTERY", all anagrams: ['MYSTERY']
    3,	// "TIRING", all anagrams: ['TING', 'RING', 'TIRING']
    2,	// "GUMS", all anagrams: ['GUMS', 'SMUG']
    2,	// "UNLESS", all anagrams: ['UNLESS', 'LESS']
    3,	// "SOLIDS", all anagrams: ['SOIL', 'SOLIDS', 'SODS', 'LIDS', 'SOLI']
    2,	// "WINDOW", all anagrams: ['WINDOW', 'WIND']
    1,	// "RESIN", all anagrams: ['SIREN', 'REIS', 'SIRE', 'RESIN', 'ERN', 'SIN']
};

const static unsigned char puzzlesNumPossibleAnagrams[] =
{
    2,	// ACT , all anagrams: ['CAT', 'ACT']
    3,	// CATS, all anagrams: ['CAST', 'CATS', 'ACTS']
    3,	// EXACT , all anagrams: ['CAT', 'EXACT', 'ACT']
    1,	// ACE, all anagrams: ['ACE']
    2,	// NOT , all anagrams: ['NOT', 'TON']
    2,	// BECOME, all anagrams: ['BECOME', 'COME']
    3,	//  FIXED, all anagrams: ['FIX', 'FIXED', 'FED']
    2,	// BOX, all anagrams: ['BOX', 'BO']
    2,	// HAVING, all anagrams: ['HANG', 'HAVING']
    2,	//  WRONG, all anagrams: ['WRONG', 'ROW']
    4,	//  SMALL, all anagrams: ['SMALL', 'MALL', 'MALLS', 'MAS']
    2,	// YAM , all anagrams: ['YAM', 'MAY']
    3,	// GRAM, all anagrams: ['MA', 'AM', 'GRAM']
    2,	// READ, all anagrams: ['READ', 'DARE']
    2,	// UNLOCK, all anagrams: ['LOCK', 'UNLOCK']
    2,	//  PRIZE, all anagrams: ['PRIZE', 'RIP']
    3,	// CLUES , all anagrams: ['SUE', 'CLUES', 'CLUE']
    4,	//  PIECE, all anagrams: ['PIECE', 'PEC', 'PIE', 'CEP']
    3,	//  CRAZY, all anagrams: ['CAR', 'CRAZY', 'ARC']
    2,	// PUZZLE, all anagrams: ['PULE', 'PUZZLE']
    2,	// LUCKY , all anagrams: ['LUCKY', 'LUCK']
    4,	// MISTY , all anagrams: ['MISTY', 'MIST', 'STY', 'STIMY']
    6,	//  POWER, all anagrams: ['WORE', 'POWER', 'POW', 'REP', 'WOP', 'PER']
    2,	// MYTHS , all anagrams: ['MYTHS', 'MYTH']
    3,	// WORKED, all anagrams: ['OWED', 'WORKED', 'WORK']
    3,	// SECRET, all anagrams: ['SECRET', 'TERCES', 'TEES']
    2,	//  ROADS, all anagrams: ['ROADS', 'OAR']
    1,	// MYSTERY, all anagrams: ['MYSTERY']
    3,	// TIRING, all anagrams: ['TING', 'RING', 'TIRING']
    2,	// GUMS, all anagrams: ['GUMS', 'SMUG']
    2,	// UNLESS, all anagrams: ['UNLESS', 'LESS']
    5,	// SOLIDS, all anagrams: ['SOIL', 'SOLIDS', 'SODS', 'LIDS', 'SOLI']
    2,	// WINDOW, all anagrams: ['WINDOW', 'WIND']
    6,	// RESIN, all anagrams: ['SIREN', 'REIS', 'SIRE', 'RESIN', 'ERN', 'SIN']
};

const static unsigned char _puzzlesPossibleWordIndexes_ACT_[] =
{
    10,	// CAT,
    1,	// ACT,
};

const static unsigned char _puzzlesPossibleWordIndexes_CATS[] =
{
    9,	// CAST,
    11,	// CATS,
    2,	// ACTS,
};

const static unsigned char _puzzlesPossibleWordIndexes_EXACT_[] =
{
    10,	// CAT,
    19,	// EXACT,
    1,	// ACT,
};

const static unsigned char _puzzlesPossibleWordIndexes_ACE[] =
{
    0,	// ACE,
};

const static unsigned char _puzzlesPossibleWordIndexes_NOT_[] =
{
    42,	// NOT,
    79,	// TON,
};

const static unsigned char _puzzlesPossibleWordIndexes_BECOME[] =
{
    5,	// BECOME,
    15,	// COME,
};

const static unsigned char _puzzlesPossibleWordIndexes__FIXED[] =
{
    21,	// FIX,
    22,	// FIXED,
    20,	// FED,
};

const static unsigned char _puzzlesPossibleWordIndexes_BOX[] =
{
    7,	// BOX,
    6,	// BO,
};

const static unsigned char _puzzlesPossibleWordIndexes_HAVING[] =
{
    25,	// HANG,
    26,	// HAVING,
};

const static unsigned char _puzzlesPossibleWordIndexes__WRONG[] =
{
    88,	// WRONG,
    61,	// ROW,
};

const static unsigned char _puzzlesPossibleWordIndexes__SMALL[] =
{
    66,	// SMALL,
    33,	// MALL,
    34,	// MALLS,
    35,	// MAS,
};

const static unsigned char _puzzlesPossibleWordIndexes_YAM_[] =
{
    89,	// YAM,
    36,	// MAY,
};

const static unsigned char _puzzlesPossibleWordIndexes_GRAM[] =
{
    32,	// MA,
    3,	// AM,
    23,	// GRAM,
};

const static unsigned char _puzzlesPossibleWordIndexes_READ[] =
{
    54,	// READ,
    17,	// DARE,
};

const static unsigned char _puzzlesPossibleWordIndexes_UNLOCK[] =
{
    29,	// LOCK,
    81,	// UNLOCK,
};

const static unsigned char _puzzlesPossibleWordIndexes__PRIZE[] =
{
    51,	// PRIZE,
    59,	// RIP,
};

const static unsigned char _puzzlesPossibleWordIndexes_CLUES_[] =
{
    74,	// SUE,
    14,	// CLUES,
    13,	// CLUE,
};

const static unsigned char _puzzlesPossibleWordIndexes__PIECE[] =
{
    48,	// PIECE,
    45,	// PEC,
    47,	// PIE,
    12,	// CEP,
};

const static unsigned char _puzzlesPossibleWordIndexes__CRAZY[] =
{
    8,	// CAR,
    16,	// CRAZY,
    4,	// ARC,
};

const static unsigned char _puzzlesPossibleWordIndexes_PUZZLE[] =
{
    52,	// PULE,
    53,	// PUZZLE,
};

const static unsigned char _puzzlesPossibleWordIndexes_LUCKY_[] =
{
    31,	// LUCKY,
    30,	// LUCK,
};

const static unsigned char _puzzlesPossibleWordIndexes_MISTY_[] =
{
    38,	// MISTY,
    37,	// MIST,
    73,	// STY,
    72,	// STIMY,
};

const static unsigned char _puzzlesPossibleWordIndexes__POWER[] =
{
    85,	// WORE,
    50,	// POWER,
    49,	// POW,
    56,	// REP,
    84,	// WOP,
    46,	// PER,
};

const static unsigned char _puzzlesPossibleWordIndexes_MYTHS_[] =
{
    41,	// MYTHS,
    40,	// MYTH,
};

const static unsigned char _puzzlesPossibleWordIndexes_WORKED[] =
{
    44,	// OWED,
    87,	// WORKED,
    86,	// WORK,
};

const static unsigned char _puzzlesPossibleWordIndexes_SECRET[] =
{
    62,	// SECRET,
    76,	// TERCES,
    75,	// TEES,
};

const static unsigned char _puzzlesPossibleWordIndexes__ROADS[] =
{
    60,	// ROADS,
    43,	// OAR,
};

const static unsigned char _puzzlesPossibleWordIndexes_MYSTERY[] =
{
    39,	// MYSTERY,
};

const static unsigned char _puzzlesPossibleWordIndexes_TIRING[] =
{
    77,	// TING,
    58,	// RING,
    78,	// TIRING,
};

const static unsigned char _puzzlesPossibleWordIndexes_GUMS[] =
{
    24,	// GUMS,
    67,	// SMUG,
};

const static unsigned char _puzzlesPossibleWordIndexes_UNLESS[] =
{
    80,	// UNLESS,
    27,	// LESS,
};

const static unsigned char _puzzlesPossibleWordIndexes_SOLIDS[] =
{
    69,	// SOIL,
    71,	// SOLIDS,
    68,	// SODS,
    28,	// LIDS,
    70,	// SOLI,
};

const static unsigned char _puzzlesPossibleWordIndexes_WINDOW[] =
{
    83,	// WINDOW,
    82,	// WIND,
};

const static unsigned char _puzzlesPossibleWordIndexes_RESIN[] =
{
    65,	// SIREN,
    55,	// REIS,
    64,	// SIRE,
    57,	// RESIN,
    18,	// ERN,
    63,	// SIN,
};

const static unsigned char *puzzlesPossibleWordIndexes[] =
{
    _puzzlesPossibleWordIndexes_ACT_,	// "ACT ",
    _puzzlesPossibleWordIndexes_CATS,	// "CATS",
    _puzzlesPossibleWordIndexes_EXACT_,	// "EXACT ",
    _puzzlesPossibleWordIndexes_ACE,	// "ACE",
    _puzzlesPossibleWordIndexes_NOT_,	// "NOT ",
    _puzzlesPossibleWordIndexes_BECOME,	// "BECOME",
    _puzzlesPossibleWordIndexes__FIXED,	// " FIXED",
    _puzzlesPossibleWordIndexes_BOX,	// "BOX",
    _puzzlesPossibleWordIndexes_HAVING,	// "HAVING",
    _puzzlesPossibleWordIndexes__WRONG,	// " WRONG",
    _puzzlesPossibleWordIndexes__SMALL,	// " SMALL",
    _puzzlesPossibleWordIndexes_YAM_,	// "YAM ",
    _puzzlesPossibleWordIndexes_GRAM,	// "GRAM",
    _puzzlesPossibleWordIndexes_READ,	// "READ",
    _puzzlesPossibleWordIndexes_UNLOCK,	// "UNLOCK",
    _puzzlesPossibleWordIndexes__PRIZE,	// " PRIZE",
    _puzzlesPossibleWordIndexes_CLUES_,	// "CLUES ",
    _puzzlesPossibleWordIndexes__PIECE,	// " PIECE",
    _puzzlesPossibleWordIndexes__CRAZY,	// " CRAZY",
    _puzzlesPossibleWordIndexes_PUZZLE,	// "PUZZLE",
    _puzzlesPossibleWordIndexes_LUCKY_,	// "LUCKY ",
    _puzzlesPossibleWordIndexes_MISTY_,	// "MISTY ",
    _puzzlesPossibleWordIndexes__POWER,	// " POWER",
    _puzzlesPossibleWordIndexes_MYTHS_,	// "MYTHS ",
    _puzzlesPossibleWordIndexes_WORKED,	// "WORKED",
    _puzzlesPossibleWordIndexes_SECRET,	// "SECRET",
    _puzzlesPossibleWordIndexes__ROADS,	// " ROADS",
    _puzzlesPossibleWordIndexes_MYSTERY,	// "MYSTERY",
    _puzzlesPossibleWordIndexes_TIRING,	// "TIRING",
    _puzzlesPossibleWordIndexes_GUMS,	// "GUMS",
    _puzzlesPossibleWordIndexes_UNLESS,	// "UNLESS",
    _puzzlesPossibleWordIndexes_SOLIDS,	// "SOLIDS",
    _puzzlesPossibleWordIndexes_WINDOW,	// "WINDOW",
    _puzzlesPossibleWordIndexes_RESIN,	// "RESIN",
};

const static unsigned char puzzlesNumLeadingSpaces[] =
{
    0,	// ACT 
    0,	// CATS
    0,	// EXACT 
    0,	// ACE
    0,	// NOT 
    0,	// BECOME
    0,	//  FIXED
    0,	// BOX
    0,	// HAVING
    0,	//  WRONG
    1,	//  SMALL
    0,	// YAM 
    0,	// GRAM
    0,	// READ
    0,	// UNLOCK
    0,	//  PRIZE
    0,	// CLUES 
    0,	//  PIECE
    0,	//  CRAZY
    0,	// PUZZLE
    0,	// LUCKY 
    0,	// MISTY 
    1,	//  POWER
    0,	// MYTHS 
    0,	// WORKED
    0,	// SECRET
    1,	//  ROADS
    0,	// MYSTERY
    0,	// TIRING
    0,	// GUMS
    0,	// UNLESS
    0,	// SOLIDS
    0,	// WINDOW
    0,	// RESIN
};

const static bool puzzlesScramble[] =
{
    true,	// ACT 
    true,	// CATS
    false,	// EXACT 
    true,	// ACE
    true,	// NOT 
    true,	// BECOME
    true,	//  FIXED
    true,	// BOX
    false,	// HAVING
    true,	//  WRONG
    false,	//  SMALL
    false,	// YAM 
    true,	// GRAM
    true,	// READ
    true,	// UNLOCK
    true,	//  PRIZE
    true,	// CLUES 
    true,	//  PIECE
    true,	//  CRAZY
    true,	// PUZZLE
    true,	// LUCKY 
    true,	// MISTY 
    true,	//  POWER
    false,	// MYTHS 
    true,	// WORKED
    true,	// SECRET
    true,	//  ROADS
    true,	// MYSTERY
    true,	// TIRING
    true,	// GUMS
    true,	// UNLESS
    true,	// SOLIDS
    true,	// WINDOW
    true,	// RESIN
};

const static unsigned char puzzlesMetaLetterIndex[] =
{
    0,	// "ACT "[A]
    0,	// "CATS"[C]
    0,	// "EXACT "[E]
    255,	// "ACE"[255 (metapuzzle)]
    1,	// "NOT "[O]
    0,	// "BECOME"[B]
    3,	// " FIXED"[X]
    255,	// "BOX"[255 (metapuzzle)]
    5,	// "HAVING"[G]
    2,	// " WRONG"[R]
    2,	// " SMALL"[M]
    1,	// "YAM "[A]
    255,	// "GRAM"[255 (metapuzzle)]
    1,	// "READ"[E]
    2,	// "UNLOCK"[L]
    4,	// " PRIZE"[Z]
    2,	// "CLUES "[U]
    1,	// " PIECE"[P]
    4,	// " CRAZY"[Z]
    255,	// "PUZZLE"[255 (metapuzzle)]
    4,	// "LUCKY "[Y]
    4,	// "MISTY "[Y]
    5,	// " POWER"[R]
    0,	// "MYTHS "[M]
    4,	// "WORKED"[E]
    5,	// "SECRET"[T]
    5,	// " ROADS"[S]
    255,	// "MYSTERY"[255 (metapuzzle)]
    2,	// "TIRING"[R]
    3,	// "GUMS"[S]
    3,	// "UNLESS"[E]
    3,	// "SOLIDS"[I]
    2,	// "WINDOW"[N]
    255,	// "RESIN"[255 (metapuzzle)]
};

const static unsigned char puzzlesMetaPuzzlesPerWorld[] =
{
    6,	// world 1
};

