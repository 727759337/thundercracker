# we expect $(SDK_DIR)/Makefile.defs has already been included

######## Normal target rules

all: $(BIN)

# On Win32, it's necessary to munge the paths in our dependency file.
# This makefile, being unixy in nature, likes forward slashes. But
# the Win32 build of clang, quite understandably, likes backslashes.
# We use a quick perl script to normalize the slashes on windows.
# (We could use sed for this, but perl comes with MSYS too, and its
# in-place editing is more reliable.)
#
# Note that this needs to avoid backslashes that are escaping things
# like newlines or spaces. The (\w) below tries to do this.

%.o: %.cpp $(CDEPS)
	$(CC) -c -o $@ $< $(CCFLAGS)
ifeq ($(NO_PATH_MUNGE),)
	@perl -pi.bak -e 's/\\(\w)/\/\1/g' $(subst .o,.d,$@)
endif

$(BIN): $(OBJS) $(LD)
	$(LD) -o $@ $(OBJS) $(LDFLAGS)

ASSET_GEN_FILES := -o $(ASSETS).gen.cpp -o $(ASSETS).gen.h
ifneq ($(ASSETS_BUILD_PROOF),)
    ASSET_GEN_FILES += -o $(ASSETS).html
endif

$(ASSETS).gen.cpp: $(STIR) $(ASSETDEPS)
	$(STIR) $(ASSETS).lua $(ASSET_GEN_FILES) -v

clean:
	rm -f $(BIN) *.o *.d $(GENERATED_FILES)

.PHONY: clean all

-include $(OBJS:%.o=%.d)

######## Development utility rules

llvm-dis: $(OBJS)
	$(LLVM_BIN)/llvm-link $(OBJS) -S -o - | arm-none-eabi-c++filt | less

objdump: $(BIN)
	arm-none-eabi-objdump -d $(BIN) | arm-none-eabi-c++filt | less

asm: program.s
	less $^

program.s: $(OBJS) $(LD)
	$(LD) -asm -o $@ $(OBJS) $(LDFLAGS)

readelf: $(BIN)
	arm-none-eabi-readelf -a $(BIN) | arm-none-eabi-c++filt | less

.PHONY: llvm-dis objdump asm readelf
