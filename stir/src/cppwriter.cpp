/* -*- mode: C; c-basic-offset: 4; intent-tabs-mode: nil -*-
 *
 * STIR -- Sifteo Tiled Image Reducer
 * M. Elizabeth Scott <beth@sifteo.com>
 *
 * Copyright <c> 2011 Sifteo, Inc. All rights reserved.
 */

#include "cppwriter.h"

namespace Stir {

const char *CPPWriter::indent = "    ";

CPPWriter::CPPWriter(Logger &log, const char *filename)
    : mLog(log)
{
    if (filename) {
	mStream.open(filename);
	if (!mStream.is_open())
	    log.error("Error opening output file '%s'", filename);
    }
    
    if (mStream.is_open())
	head();
}

void CPPWriter::head()
{
    mStream <<
	"/*\n"
	" * Generated by STIR. Do not edit by hand.\n"
	" */\n"
	"\n"
	"#include <sifteo/asset.h>\n";
}

void CPPWriter::foot()
{}
 
void CPPWriter::close()
{
    if (mStream.is_open()) {
	foot();
	mStream.close();
    }
}

void CPPWriter::writeArray(const std::vector<uint8_t> &array)
{
    mStream <<
	indent << "// " << array.size() << " bytes\n" <<
	indent;

    for (unsigned i = 0; i < array.size(); i++) {
	if (i && !(i % 16))
	    mStream << "\n" << indent;

	unsigned byte = array[i];
	mStream << "0x" << std::hex << (byte >> 4) << (byte & 0xF) << std::dec << ",";
    }
    mStream << "\n";
}


CPPSourceWriter::CPPSourceWriter(Logger &log, const char *filename)
    : CPPWriter(log, filename)
    {}

void CPPSourceWriter::writeGroup(const Group &group)
{
    mStream <<
	"\n"
	"static const uint8_t " << group.getName() << "_stream[] = {\n";

    writeArray(group.getLoadstream());

    mStream <<
	"};\n"
	"\n"
	"const Sifteo::AssetGroup " << group.getName() << " = {\n" <<
	indent << group.getName() << "_stream, sizeof " << group.getName() << "_stream,\n"
	"};\n";
}


CPPHeaderWriter::CPPHeaderWriter(Logger &log, const char *filename)
    : CPPWriter(log, filename)
{
    if (filename)
	createGuardName(filename);

    if (mStream.is_open())
	head();
}

void CPPHeaderWriter::createGuardName(const char *filename)
{
    /*
     * Make a name for the include guard, based on the filename
     */

    char c;
    char prev = '_';
    guardName = prev;

    while ((c = *filename)) {
	c = toupper(c);

	if (isalpha(c)) {
	    prev = c;
	    guardName += prev;
	} else if (prev != '_') {
	    prev = '_';
	    guardName += prev;
	}

	filename++;
    }
}

void CPPHeaderWriter::head()
{
    mStream <<
	"\n"
	"#ifndef " << guardName << "\n"
	"#define " << guardName << "\n";
}

void CPPHeaderWriter::foot()
{
    mStream <<
	"\n"
	"#endif  // " << guardName << "\n";

    CPPWriter::foot();
}

void CPPHeaderWriter::writeGroup(const Group &group)
{
    mStream << 
	"\n"
	"extern const Sifteo::AssetGroup " << group.getName() << ";\n";
}


};  // namespace Stir
