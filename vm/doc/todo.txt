Optimization opportunities:

- More thorough (bidirectional) align-slot filling in SVMAlignPass
- Optimize out redundant base pointer validations
- More work on identifying opportunities to use imm12 addressing
- Equal optimization weight for all 16-bit instructions? LDRpc alone is
  better than LDRpc plus MOVs, for example.
- Use MOVWi16 instead of LDRpc for RAM symbols (we know they fit in 16 bits)
- More efficient comparison generation (See ARMTargetLowering::getARMCmp)

SDK optimization:

- Optimize out double-precision math in System::clock() in most cases, by
  having that function return a class with binop overloads. It can do integer
  math in most cases, and return a float only when explicitly requested.

Debugging support:

- What's left to implement in order to get working Dwarf symbols?
- gdb stub! (Would this work with stock ARM gdb, or would we need a
  special build?)
