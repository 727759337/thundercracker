/* -*- mode: C; c-basic-offset: 4; intent-tabs-mode: nil -*-
 *
 * Thundercracker firmware
 *
 * Copyright <c> 2012 Sifteo, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*
 * Table-driven trigonometry routines.
 *
 * These are faster than doing the equivalent work in userspace, since
 * we can store the lookup tables in fast internal flash memory.
 */

#include <sifteo/abi.h>
#include <stdlib.h>
#include "macros.h"

extern "C" {

int32_t _SYS_tsini(uint32_t a)
{
    /*
     * This is the main sine/cosine lookup entry point. As such, it has a
     * fast syscall number, so that higher-level trig routines in userspace
     * can build on it efficiently.
     *
     * Our input is treated as an angle in integer units of 360/8192 degrees.
     * The input parameter is truncated to 13 bits, causing negative values
     * or values greater than 360 degrees to wrap around.
     *
     * The result is a signed fixed point number with 16 bits to the right
     * of the binary point.
     *
     * This means most of our values fit in 16 bits, but 1.0 is represented
     * by the integer 0x10000. Our table stores only the values that fit in
     * 16 bits. We assume anything past the end of the table is 1.0.
     */

    static const uint16_t sineTable[] = {
        0x0000,0x0032,0x0065,0x0097,0x00c9,0x00fb,0x012e,0x0160,
        0x0192,0x01c4,0x01f7,0x0229,0x025b,0x028d,0x02c0,0x02f2,
        0x0324,0x0356,0x0389,0x03bb,0x03ed,0x0420,0x0452,0x0484,
        0x04b6,0x04e9,0x051b,0x054d,0x057f,0x05b2,0x05e4,0x0616,
        0x0648,0x067b,0x06ad,0x06df,0x0711,0x0744,0x0776,0x07a8,
        0x07da,0x080d,0x083f,0x0871,0x08a3,0x08d5,0x0908,0x093a,
        0x096c,0x099e,0x09d1,0x0a03,0x0a35,0x0a67,0x0a9a,0x0acc,
        0x0afe,0x0b30,0x0b62,0x0b95,0x0bc7,0x0bf9,0x0c2b,0x0c5d,
        0x0c90,0x0cc2,0x0cf4,0x0d26,0x0d59,0x0d8b,0x0dbd,0x0def,
        0x0e21,0x0e53,0x0e86,0x0eb8,0x0eea,0x0f1c,0x0f4e,0x0f81,
        0x0fb3,0x0fe5,0x1017,0x1049,0x107b,0x10ae,0x10e0,0x1112,
        0x1144,0x1176,0x11a8,0x11da,0x120d,0x123f,0x1271,0x12a3,
        0x12d5,0x1307,0x1339,0x136c,0x139e,0x13d0,0x1402,0x1434,
        0x1466,0x1498,0x14ca,0x14fc,0x152e,0x1561,0x1593,0x15c5,
        0x15f7,0x1629,0x165b,0x168d,0x16bf,0x16f1,0x1723,0x1755,
        0x1787,0x17b9,0x17eb,0x181d,0x1850,0x1882,0x18b4,0x18e6,
        0x1918,0x194a,0x197c,0x19ae,0x19e0,0x1a12,0x1a44,0x1a76,
        0x1aa8,0x1ada,0x1b0c,0x1b3e,0x1b70,0x1ba2,0x1bd4,0x1c06,
        0x1c38,0x1c69,0x1c9b,0x1ccd,0x1cff,0x1d31,0x1d63,0x1d95,
        0x1dc7,0x1df9,0x1e2b,0x1e5d,0x1e8f,0x1ec1,0x1ef3,0x1f24,
        0x1f56,0x1f88,0x1fba,0x1fec,0x201e,0x2050,0x2082,0x20b3,
        0x20e5,0x2117,0x2149,0x217b,0x21ad,0x21de,0x2210,0x2242,
        0x2274,0x22a6,0x22d7,0x2309,0x233b,0x236d,0x239f,0x23d0,
        0x2402,0x2434,0x2466,0x2497,0x24c9,0x24fb,0x252d,0x255e,
        0x2590,0x25c2,0x25f4,0x2625,0x2657,0x2689,0x26ba,0x26ec,
        0x271e,0x274f,0x2781,0x27b3,0x27e4,0x2816,0x2848,0x2879,
        0x28ab,0x28dd,0x290e,0x2940,0x2971,0x29a3,0x29d5,0x2a06,
        0x2a38,0x2a69,0x2a9b,0x2acc,0x2afe,0x2b30,0x2b61,0x2b93,
        0x2bc4,0x2bf6,0x2c27,0x2c59,0x2c8a,0x2cbc,0x2ced,0x2d1f,
        0x2d50,0x2d82,0x2db3,0x2de5,0x2e16,0x2e47,0x2e79,0x2eaa,
        0x2edc,0x2f0d,0x2f3f,0x2f70,0x2fa1,0x2fd3,0x3004,0x3035,
        0x3067,0x3098,0x30ca,0x30fb,0x312c,0x315e,0x318f,0x31c0,
        0x31f1,0x3223,0x3254,0x3285,0x32b7,0x32e8,0x3319,0x334a,
        0x337c,0x33ad,0x33de,0x340f,0x3440,0x3472,0x34a3,0x34d4,
        0x3505,0x3536,0x3568,0x3599,0x35ca,0x35fb,0x362c,0x365d,
        0x368e,0x36c0,0x36f1,0x3722,0x3753,0x3784,0x37b5,0x37e6,
        0x3817,0x3848,0x3879,0x38aa,0x38db,0x390c,0x393d,0x396e,
        0x399f,0x39d0,0x3a01,0x3a32,0x3a63,0x3a94,0x3ac5,0x3af6,
        0x3b27,0x3b58,0x3b88,0x3bb9,0x3bea,0x3c1b,0x3c4c,0x3c7d,
        0x3cae,0x3cde,0x3d0f,0x3d40,0x3d71,0x3da2,0x3dd2,0x3e03,
        0x3e34,0x3e65,0x3e95,0x3ec6,0x3ef7,0x3f28,0x3f58,0x3f89,
        0x3fba,0x3fea,0x401b,0x404c,0x407c,0x40ad,0x40de,0x410e,
        0x413f,0x416f,0x41a0,0x41d1,0x4201,0x4232,0x4262,0x4293,
        0x42c3,0x42f4,0x4324,0x4355,0x4385,0x43b6,0x43e6,0x4417,
        0x4447,0x4478,0x44a8,0x44d9,0x4509,0x4539,0x456a,0x459a,
        0x45cb,0x45fb,0x462b,0x465c,0x468c,0x46bc,0x46ec,0x471d,
        0x474d,0x477d,0x47ae,0x47de,0x480e,0x483e,0x486f,0x489f,
        0x48cf,0x48ff,0x492f,0x495f,0x4990,0x49c0,0x49f0,0x4a20,
        0x4a50,0x4a80,0x4ab0,0x4ae0,0x4b10,0x4b40,0x4b71,0x4ba1,
        0x4bd1,0x4c01,0x4c31,0x4c61,0x4c90,0x4cc0,0x4cf0,0x4d20,
        0x4d50,0x4d80,0x4db0,0x4de0,0x4e10,0x4e40,0x4e70,0x4e9f,
        0x4ecf,0x4eff,0x4f2f,0x4f5f,0x4f8e,0x4fbe,0x4fee,0x501e,
        0x504d,0x507d,0x50ad,0x50dd,0x510c,0x513c,0x516c,0x519b,
        0x51cb,0x51fb,0x522a,0x525a,0x5289,0x52b9,0x52e8,0x5318,
        0x5348,0x5377,0x53a7,0x53d6,0x5406,0x5435,0x5464,0x5494,
        0x54c3,0x54f3,0x5522,0x5552,0x5581,0x55b0,0x55e0,0x560f,
        0x563e,0x566e,0x569d,0x56cc,0x56fc,0x572b,0x575a,0x5789,
        0x57b9,0x57e8,0x5817,0x5846,0x5875,0x58a5,0x58d4,0x5903,
        0x5932,0x5961,0x5990,0x59bf,0x59ee,0x5a1d,0x5a4c,0x5a7b,
        0x5aaa,0x5ad9,0x5b08,0x5b37,0x5b66,0x5b95,0x5bc4,0x5bf3,
        0x5c22,0x5c51,0x5c80,0x5caf,0x5cde,0x5d0c,0x5d3b,0x5d6a,
        0x5d99,0x5dc8,0x5df6,0x5e25,0x5e54,0x5e83,0x5eb1,0x5ee0,
        0x5f0f,0x5f3d,0x5f6c,0x5f9b,0x5fc9,0x5ff8,0x6026,0x6055,
        0x6084,0x60b2,0x60e1,0x610f,0x613e,0x616c,0x619b,0x61c9,
        0x61f8,0x6226,0x6254,0x6283,0x62b1,0x62e0,0x630e,0x633c,
        0x636b,0x6399,0x63c7,0x63f5,0x6424,0x6452,0x6480,0x64ae,
        0x64dd,0x650b,0x6539,0x6567,0x6595,0x65c3,0x65f2,0x6620,
        0x664e,0x667c,0x66aa,0x66d8,0x6706,0x6734,0x6762,0x6790,
        0x67be,0x67ec,0x681a,0x6848,0x6876,0x68a3,0x68d1,0x68ff,
        0x692d,0x695b,0x6989,0x69b6,0x69e4,0x6a12,0x6a40,0x6a6d,
        0x6a9b,0x6ac9,0x6af6,0x6b24,0x6b52,0x6b7f,0x6bad,0x6bdb,
        0x6c08,0x6c36,0x6c63,0x6c91,0x6cbe,0x6cec,0x6d19,0x6d47,
        0x6d74,0x6da2,0x6dcf,0x6dfc,0x6e2a,0x6e57,0x6e85,0x6eb2,
        0x6edf,0x6f0d,0x6f3a,0x6f67,0x6f94,0x6fc2,0x6fef,0x701c,
        0x7049,0x7076,0x70a3,0x70d1,0x70fe,0x712b,0x7158,0x7185,
        0x71b2,0x71df,0x720c,0x7239,0x7266,0x7293,0x72c0,0x72ed,
        0x731a,0x7347,0x7373,0x73a0,0x73cd,0x73fa,0x7427,0x7454,
        0x7480,0x74ad,0x74da,0x7507,0x7533,0x7560,0x758d,0x75b9,
        0x75e6,0x7612,0x763f,0x766c,0x7698,0x76c5,0x76f1,0x771e,
        0x774a,0x7777,0x77a3,0x77d0,0x77fc,0x7828,0x7855,0x7881,
        0x78ad,0x78da,0x7906,0x7932,0x795f,0x798b,0x79b7,0x79e3,
        0x7a10,0x7a3c,0x7a68,0x7a94,0x7ac0,0x7aec,0x7b18,0x7b44,
        0x7b70,0x7b9c,0x7bc8,0x7bf4,0x7c20,0x7c4c,0x7c78,0x7ca4,
        0x7cd0,0x7cfc,0x7d28,0x7d54,0x7d7f,0x7dab,0x7dd7,0x7e03,
        0x7e2f,0x7e5a,0x7e86,0x7eb2,0x7edd,0x7f09,0x7f35,0x7f60,
        0x7f8c,0x7fb7,0x7fe3,0x800f,0x803a,0x8066,0x8091,0x80bc,
        0x80e8,0x8113,0x813f,0x816a,0x8195,0x81c1,0x81ec,0x8217,
        0x8243,0x826e,0x8299,0x82c4,0x82f0,0x831b,0x8346,0x8371,
        0x839c,0x83c7,0x83f2,0x841d,0x8449,0x8474,0x849f,0x84ca,
        0x84f5,0x851f,0x854a,0x8575,0x85a0,0x85cb,0x85f6,0x8621,
        0x864c,0x8676,0x86a1,0x86cc,0x86f7,0x8721,0x874c,0x8777,
        0x87a1,0x87cc,0x87f6,0x8821,0x884c,0x8876,0x88a1,0x88cb,
        0x88f6,0x8920,0x894a,0x8975,0x899f,0x89ca,0x89f4,0x8a1e,
        0x8a49,0x8a73,0x8a9d,0x8ac7,0x8af2,0x8b1c,0x8b46,0x8b70,
        0x8b9a,0x8bc5,0x8bef,0x8c19,0x8c43,0x8c6d,0x8c97,0x8cc1,
        0x8ceb,0x8d15,0x8d3f,0x8d69,0x8d93,0x8dbc,0x8de6,0x8e10,
        0x8e3a,0x8e64,0x8e8d,0x8eb7,0x8ee1,0x8f0b,0x8f34,0x8f5e,
        0x8f88,0x8fb1,0x8fdb,0x9004,0x902e,0x9057,0x9081,0x90aa,
        0x90d4,0x90fd,0x9127,0x9150,0x9179,0x91a3,0x91cc,0x91f5,
        0x921f,0x9248,0x9271,0x929a,0x92c4,0x92ed,0x9316,0x933f,
        0x9368,0x9391,0x93ba,0x93e3,0x940c,0x9435,0x945e,0x9487,
        0x94b0,0x94d9,0x9502,0x952b,0x9554,0x957d,0x95a5,0x95ce,
        0x95f7,0x9620,0x9648,0x9671,0x969a,0x96c2,0x96eb,0x9713,
        0x973c,0x9765,0x978d,0x97b6,0x97de,0x9807,0x982f,0x9857,
        0x9880,0x98a8,0x98d0,0x98f9,0x9921,0x9949,0x9972,0x999a,
        0x99c2,0x99ea,0x9a12,0x9a3a,0x9a63,0x9a8b,0x9ab3,0x9adb,
        0x9b03,0x9b2b,0x9b53,0x9b7b,0x9ba3,0x9bca,0x9bf2,0x9c1a,
        0x9c42,0x9c6a,0x9c92,0x9cb9,0x9ce1,0x9d09,0x9d31,0x9d58,
        0x9d80,0x9da7,0x9dcf,0x9df7,0x9e1e,0x9e46,0x9e6d,0x9e95,
        0x9ebc,0x9ee3,0x9f0b,0x9f32,0x9f5a,0x9f81,0x9fa8,0x9fd0,
        0x9ff7,0xa01e,0xa045,0xa06c,0xa094,0xa0bb,0xa0e2,0xa109,
        0xa130,0xa157,0xa17e,0xa1a5,0xa1cc,0xa1f3,0xa21a,0xa241,
        0xa268,0xa28e,0xa2b5,0xa2dc,0xa303,0xa32a,0xa350,0xa377,
        0xa39e,0xa3c4,0xa3eb,0xa412,0xa438,0xa45f,0xa485,0xa4ac,
        0xa4d2,0xa4f9,0xa51f,0xa545,0xa56c,0xa592,0xa5b8,0xa5df,
        0xa605,0xa62b,0xa652,0xa678,0xa69e,0xa6c4,0xa6ea,0xa710,
        0xa736,0xa75c,0xa782,0xa7a8,0xa7ce,0xa7f4,0xa81a,0xa840,
        0xa866,0xa88c,0xa8b2,0xa8d7,0xa8fd,0xa923,0xa949,0xa96e,
        0xa994,0xa9ba,0xa9df,0xaa05,0xaa2a,0xaa50,0xaa76,0xaa9b,
        0xaac1,0xaae6,0xab0b,0xab31,0xab56,0xab7b,0xaba1,0xabc6,
        0xabeb,0xac11,0xac36,0xac5b,0xac80,0xaca5,0xacca,0xacef,
        0xad14,0xad39,0xad5e,0xad83,0xada8,0xadcd,0xadf2,0xae17,
        0xae3c,0xae61,0xae85,0xaeaa,0xaecf,0xaef4,0xaf18,0xaf3d,
        0xaf62,0xaf86,0xafab,0xafcf,0xaff4,0xb018,0xb03d,0xb061,
        0xb086,0xb0aa,0xb0ce,0xb0f3,0xb117,0xb13b,0xb160,0xb184,
        0xb1a8,0xb1cc,0xb1f0,0xb215,0xb239,0xb25d,0xb281,0xb2a5,
        0xb2c9,0xb2ed,0xb311,0xb335,0xb358,0xb37c,0xb3a0,0xb3c4,
        0xb3e8,0xb40b,0xb42f,0xb453,0xb477,0xb49a,0xb4be,0xb4e1,
        0xb505,0xb528,0xb54c,0xb56f,0xb593,0xb5b6,0xb5da,0xb5fd,
        0xb620,0xb644,0xb667,0xb68a,0xb6ad,0xb6d1,0xb6f4,0xb717,
        0xb73a,0xb75d,0xb780,0xb7a3,0xb7c6,0xb7e9,0xb80c,0xb82f,
        0xb852,0xb875,0xb898,0xb8bb,0xb8dd,0xb900,0xb923,0xb946,
        0xb968,0xb98b,0xb9ae,0xb9d0,0xb9f3,0xba15,0xba38,0xba5a,
        0xba7d,0xba9f,0xbac1,0xbae4,0xbb06,0xbb28,0xbb4b,0xbb6d,
        0xbb8f,0xbbb1,0xbbd4,0xbbf6,0xbc18,0xbc3a,0xbc5c,0xbc7e,
        0xbca0,0xbcc2,0xbce4,0xbd06,0xbd28,0xbd4a,0xbd6b,0xbd8d,
        0xbdaf,0xbdd1,0xbdf2,0xbe14,0xbe36,0xbe57,0xbe79,0xbe9b,
        0xbebc,0xbede,0xbeff,0xbf21,0xbf42,0xbf63,0xbf85,0xbfa6,
        0xbfc7,0xbfe9,0xc00a,0xc02b,0xc04c,0xc06e,0xc08f,0xc0b0,
        0xc0d1,0xc0f2,0xc113,0xc134,0xc155,0xc176,0xc197,0xc1b8,
        0xc1d8,0xc1f9,0xc21a,0xc23b,0xc25c,0xc27c,0xc29d,0xc2be,
        0xc2de,0xc2ff,0xc31f,0xc340,0xc360,0xc381,0xc3a1,0xc3c2,
        0xc3e2,0xc402,0xc423,0xc443,0xc463,0xc483,0xc4a4,0xc4c4,
        0xc4e4,0xc504,0xc524,0xc544,0xc564,0xc584,0xc5a4,0xc5c4,
        0xc5e4,0xc604,0xc624,0xc644,0xc663,0xc683,0xc6a3,0xc6c2,
        0xc6e2,0xc702,0xc721,0xc741,0xc761,0xc780,0xc7a0,0xc7bf,
        0xc7de,0xc7fe,0xc81d,0xc83c,0xc85c,0xc87b,0xc89a,0xc8ba,
        0xc8d9,0xc8f8,0xc917,0xc936,0xc955,0xc974,0xc993,0xc9b2,
        0xc9d1,0xc9f0,0xca0f,0xca2e,0xca4d,0xca6b,0xca8a,0xcaa9,
        0xcac7,0xcae6,0xcb05,0xcb23,0xcb42,0xcb61,0xcb7f,0xcb9e,
        0xcbbc,0xcbda,0xcbf9,0xcc17,0xcc35,0xcc54,0xcc72,0xcc90,
        0xccae,0xcccd,0xcceb,0xcd09,0xcd27,0xcd45,0xcd63,0xcd81,
        0xcd9f,0xcdbd,0xcddb,0xcdf9,0xce17,0xce34,0xce52,0xce70,
        0xce8e,0xceab,0xcec9,0xcee7,0xcf04,0xcf22,0xcf3f,0xcf5d,
        0xcf7a,0xcf98,0xcfb5,0xcfd2,0xcff0,0xd00d,0xd02a,0xd047,
        0xd065,0xd082,0xd09f,0xd0bc,0xd0d9,0xd0f6,0xd113,0xd130,
        0xd14d,0xd16a,0xd187,0xd1a4,0xd1c1,0xd1de,0xd1fa,0xd217,
        0xd234,0xd250,0xd26d,0xd28a,0xd2a6,0xd2c3,0xd2df,0xd2fc,
        0xd318,0xd335,0xd351,0xd36d,0xd38a,0xd3a6,0xd3c2,0xd3df,
        0xd3fb,0xd417,0xd433,0xd44f,0xd46b,0xd487,0xd4a3,0xd4bf,
        0xd4db,0xd4f7,0xd513,0xd52f,0xd54b,0xd566,0xd582,0xd59e,
        0xd5ba,0xd5d5,0xd5f1,0xd60c,0xd628,0xd644,0xd65f,0xd67a,
        0xd696,0xd6b1,0xd6cd,0xd6e8,0xd703,0xd71f,0xd73a,0xd755,
        0xd770,0xd78b,0xd7a6,0xd7c1,0xd7dc,0xd7f8,0xd812,0xd82d,
        0xd848,0xd863,0xd87e,0xd899,0xd8b4,0xd8ce,0xd8e9,0xd904,
        0xd91e,0xd939,0xd954,0xd96e,0xd989,0xd9a3,0xd9be,0xd9d8,
        0xd9f2,0xda0d,0xda27,0xda41,0xda5c,0xda76,0xda90,0xdaaa,
        0xdac4,0xdade,0xdaf8,0xdb12,0xdb2c,0xdb46,0xdb60,0xdb7a,
        0xdb94,0xdbae,0xdbc8,0xdbe1,0xdbfb,0xdc15,0xdc2f,0xdc48,
        0xdc62,0xdc7b,0xdc95,0xdcae,0xdcc8,0xdce1,0xdcfb,0xdd14,
        0xdd2d,0xdd47,0xdd60,0xdd79,0xdd92,0xddab,0xddc5,0xddde,
        0xddf7,0xde10,0xde29,0xde42,0xde5b,0xde74,0xde8c,0xdea5,
        0xdebe,0xded7,0xdef0,0xdf08,0xdf21,0xdf39,0xdf52,0xdf6b,
        0xdf83,0xdf9c,0xdfb4,0xdfcd,0xdfe5,0xdffd,0xe016,0xe02e,
        0xe046,0xe05e,0xe077,0xe08f,0xe0a7,0xe0bf,0xe0d7,0xe0ef,
        0xe107,0xe11f,0xe137,0xe14f,0xe167,0xe17e,0xe196,0xe1ae,
        0xe1c6,0xe1dd,0xe1f5,0xe20d,0xe224,0xe23c,0xe253,0xe26b,
        0xe282,0xe299,0xe2b1,0xe2c8,0xe2df,0xe2f7,0xe30e,0xe325,
        0xe33c,0xe353,0xe36b,0xe382,0xe399,0xe3b0,0xe3c7,0xe3de,
        0xe3f4,0xe40b,0xe422,0xe439,0xe450,0xe466,0xe47d,0xe494,
        0xe4aa,0xe4c1,0xe4d7,0xe4ee,0xe504,0xe51b,0xe531,0xe548,
        0xe55e,0xe574,0xe58b,0xe5a1,0xe5b7,0xe5cd,0xe5e3,0xe5f9,
        0xe610,0xe626,0xe63c,0xe652,0xe667,0xe67d,0xe693,0xe6a9,
        0xe6bf,0xe6d5,0xe6ea,0xe700,0xe716,0xe72b,0xe741,0xe756,
        0xe76c,0xe781,0xe797,0xe7ac,0xe7c2,0xe7d7,0xe7ec,0xe801,
        0xe817,0xe82c,0xe841,0xe856,0xe86b,0xe880,0xe895,0xe8aa,
        0xe8bf,0xe8d4,0xe8e9,0xe8fe,0xe913,0xe927,0xe93c,0xe951,
        0xe966,0xe97a,0xe98f,0xe9a3,0xe9b8,0xe9cc,0xe9e1,0xe9f5,
        0xea0a,0xea1e,0xea32,0xea47,0xea5b,0xea6f,0xea83,0xea97,
        0xeaab,0xeac0,0xead4,0xeae8,0xeafc,0xeb0f,0xeb23,0xeb37,
        0xeb4b,0xeb5f,0xeb73,0xeb86,0xeb9a,0xebae,0xebc1,0xebd5,
        0xebe8,0xebfc,0xec0f,0xec23,0xec36,0xec4a,0xec5d,0xec70,
        0xec83,0xec97,0xecaa,0xecbd,0xecd0,0xece3,0xecf6,0xed09,
        0xed1c,0xed2f,0xed42,0xed55,0xed68,0xed7a,0xed8d,0xeda0,
        0xedb3,0xedc5,0xedd8,0xedea,0xedfd,0xee0f,0xee22,0xee34,
        0xee47,0xee59,0xee6b,0xee7e,0xee90,0xeea2,0xeeb4,0xeec7,
        0xeed9,0xeeeb,0xeefd,0xef0f,0xef21,0xef33,0xef45,0xef56,
        0xef68,0xef7a,0xef8c,0xef9d,0xefaf,0xefc1,0xefd2,0xefe4,
        0xeff5,0xf007,0xf018,0xf02a,0xf03b,0xf04d,0xf05e,0xf06f,
        0xf080,0xf092,0xf0a3,0xf0b4,0xf0c5,0xf0d6,0xf0e7,0xf0f8,
        0xf109,0xf11a,0xf12b,0xf13c,0xf14c,0xf15d,0xf16e,0xf17f,
        0xf18f,0xf1a0,0xf1b1,0xf1c1,0xf1d2,0xf1e2,0xf1f3,0xf203,
        0xf213,0xf224,0xf234,0xf244,0xf254,0xf265,0xf275,0xf285,
        0xf295,0xf2a5,0xf2b5,0xf2c5,0xf2d5,0xf2e5,0xf2f5,0xf304,
        0xf314,0xf324,0xf334,0xf343,0xf353,0xf363,0xf372,0xf382,
        0xf391,0xf3a1,0xf3b0,0xf3c0,0xf3cf,0xf3de,0xf3ed,0xf3fd,
        0xf40c,0xf41b,0xf42a,0xf439,0xf448,0xf457,0xf466,0xf475,
        0xf484,0xf493,0xf4a2,0xf4b1,0xf4bf,0xf4ce,0xf4dd,0xf4eb,
        0xf4fa,0xf509,0xf517,0xf526,0xf534,0xf543,0xf551,0xf55f,
        0xf56e,0xf57c,0xf58a,0xf598,0xf5a6,0xf5b5,0xf5c3,0xf5d1,
        0xf5df,0xf5ed,0xf5fb,0xf609,0xf616,0xf624,0xf632,0xf640,
        0xf64e,0xf65b,0xf669,0xf677,0xf684,0xf692,0xf69f,0xf6ad,
        0xf6ba,0xf6c7,0xf6d5,0xf6e2,0xf6ef,0xf6fd,0xf70a,0xf717,
        0xf724,0xf731,0xf73e,0xf74b,0xf758,0xf765,0xf772,0xf77f,
        0xf78c,0xf799,0xf7a5,0xf7b2,0xf7bf,0xf7cb,0xf7d8,0xf7e5,
        0xf7f1,0xf7fe,0xf80a,0xf816,0xf823,0xf82f,0xf83b,0xf848,
        0xf854,0xf860,0xf86c,0xf878,0xf885,0xf891,0xf89d,0xf8a9,
        0xf8b4,0xf8c0,0xf8cc,0xf8d8,0xf8e4,0xf8f0,0xf8fb,0xf907,
        0xf913,0xf91e,0xf92a,0xf935,0xf941,0xf94c,0xf958,0xf963,
        0xf96e,0xf97a,0xf985,0xf990,0xf99b,0xf9a6,0xf9b2,0xf9bd,
        0xf9c8,0xf9d3,0xf9de,0xf9e8,0xf9f3,0xf9fe,0xfa09,0xfa14,
        0xfa1f,0xfa29,0xfa34,0xfa3e,0xfa49,0xfa54,0xfa5e,0xfa69,
        0xfa73,0xfa7d,0xfa88,0xfa92,0xfa9c,0xfaa7,0xfab1,0xfabb,
        0xfac5,0xfacf,0xfad9,0xfae3,0xfaed,0xfaf7,0xfb01,0xfb0b,
        0xfb15,0xfb1f,0xfb28,0xfb32,0xfb3c,0xfb45,0xfb4f,0xfb58,
        0xfb62,0xfb6b,0xfb75,0xfb7e,0xfb88,0xfb91,0xfb9a,0xfba4,
        0xfbad,0xfbb6,0xfbbf,0xfbc8,0xfbd1,0xfbda,0xfbe3,0xfbec,
        0xfbf5,0xfbfe,0xfc07,0xfc10,0xfc18,0xfc21,0xfc2a,0xfc33,
        0xfc3b,0xfc44,0xfc4c,0xfc55,0xfc5d,0xfc66,0xfc6e,0xfc76,
        0xfc7f,0xfc87,0xfc8f,0xfc97,0xfca0,0xfca8,0xfcb0,0xfcb8,
        0xfcc0,0xfcc8,0xfcd0,0xfcd8,0xfcdf,0xfce7,0xfcef,0xfcf7,
        0xfcfe,0xfd06,0xfd0e,0xfd15,0xfd1d,0xfd24,0xfd2c,0xfd33,
        0xfd3b,0xfd42,0xfd49,0xfd51,0xfd58,0xfd5f,0xfd66,0xfd6d,
        0xfd74,0xfd7c,0xfd83,0xfd89,0xfd90,0xfd97,0xfd9e,0xfda5,
        0xfdac,0xfdb3,0xfdb9,0xfdc0,0xfdc7,0xfdcd,0xfdd4,0xfdda,
        0xfde1,0xfde7,0xfdee,0xfdf4,0xfdfa,0xfe01,0xfe07,0xfe0d,
        0xfe13,0xfe19,0xfe1f,0xfe25,0xfe2b,0xfe31,0xfe37,0xfe3d,
        0xfe43,0xfe49,0xfe4f,0xfe55,0xfe5a,0xfe60,0xfe66,0xfe6b,
        0xfe71,0xfe76,0xfe7c,0xfe81,0xfe87,0xfe8c,0xfe91,0xfe97,
        0xfe9c,0xfea1,0xfea6,0xfeab,0xfeb0,0xfeb5,0xfeba,0xfebf,
        0xfec4,0xfec9,0xfece,0xfed3,0xfed8,0xfedd,0xfee1,0xfee6,
        0xfeeb,0xfeef,0xfef4,0xfef8,0xfefd,0xff01,0xff06,0xff0a,
        0xff0e,0xff13,0xff17,0xff1b,0xff1f,0xff23,0xff28,0xff2c,
        0xff30,0xff34,0xff38,0xff3b,0xff3f,0xff43,0xff47,0xff4b,
        0xff4e,0xff52,0xff56,0xff59,0xff5d,0xff60,0xff64,0xff67,
        0xff6b,0xff6e,0xff71,0xff75,0xff78,0xff7b,0xff7e,0xff82,
        0xff85,0xff88,0xff8b,0xff8e,0xff91,0xff94,0xff96,0xff99,
        0xff9c,0xff9f,0xffa2,0xffa4,0xffa7,0xffa9,0xffac,0xffaf,
        0xffb1,0xffb4,0xffb6,0xffb8,0xffbb,0xffbd,0xffbf,0xffc1,
        0xffc4,0xffc6,0xffc8,0xffca,0xffcc,0xffce,0xffd0,0xffd2,
        0xffd4,0xffd5,0xffd7,0xffd9,0xffdb,0xffdc,0xffde,0xffe0,
        0xffe1,0xffe3,0xffe4,0xffe6,0xffe7,0xffe8,0xffea,0xffeb,
        0xffec,0xffed,0xffef,0xfff0,0xfff1,0xfff2,0xfff3,0xfff4,
        0xfff5,0xfff6,0xfff7,0xfff7,0xfff8,0xfff9,0xfffa,0xfffa,
        0xfffb,0xfffc,0xfffc,0xfffd,0xfffd,0xfffe,0xfffe,0xfffe,
        0xffff,0xffff,0xffff,
    };

    // Unsigned modulo by 360 degrees
    a &= 0x1fff;

    // Which quadrant are we in?
    switch (a >> 11) {

        case 1:
            a = 0x1000 - a;
        case 0:
            return (a >= arraysize(sineTable)) ? 0x10000 : sineTable[a];

        case 3:
            a = 0x3000 - a;
        case 2:
            a -= 0x1000;
            return (a >= arraysize(sineTable)) ? -0x10000 : -int(sineTable[a]);

        default:
            UNREACHABLE();
    }
}

int32_t _SYS_tcosi(uint32_t a)
{
    // Convert sine to cosine
    return _SYS_tsini(a + 0x800);
}

uint32_t _SYS_tsinf(uint32_t a)
{
    // Floating point sin() based on tsini()
    float fA = reinterpret_cast<float&>(a);
    float r = _SYS_tsini(fA * 1303.7972938088067f + 0.5f) / 65536.0f;
    return reinterpret_cast<uint32_t&>(r);
}

uint32_t _SYS_tcosf(uint32_t a)
{
    // Floating point cos() based on tsini()
    float fA = reinterpret_cast<float&>(a);
    float r = _SYS_tsini(fA * 1303.7972938088067f + 2048.5f) / 65536.0f;
    return reinterpret_cast<uint32_t&>(r);
}


}  // extern "C"
