CC_SIM = gcc
RANLIB_SIM = ranlib

CC_STM32 = arm-none-eabi-gcc
GDB_STM32 = arm-none-eabi-gdb
RANLIB_STM32 = arm-none-eabi-ranlib

UNAME := $(shell uname)

ifeq ($(findstring MINGW32_NT,$(UNAME)),MINGW32_NT)  
      UNAME := windows32
endif

ifeq ($(UNAME), windows32)
        BIN_EXT = .exe
else
        BIN_EXT = 
endif

SDK_DIR = $(TC_DIR)/sdk
MASTER_DIR = $(TC_DIR)/firmware/master
STIR = $(TC_DIR)/stir/stir$(BIN_EXT)

BINS = $(BIN_SIM)
ifneq ($(BUILD_STM32),)
	BINS += $(BIN_STM32)
endif

ASSETS = assets
GENERATED_FILES = $(ASSETS).gen.h $(ASSETS).gen.cpp $(ASSETS).html
CDEPS += $(SDK_DIR)/include/sifteo/*.h $(STIR)

ifeq ($(DEBUG),)
    # Only disable this for debugging! The -O2 flag is important, we use
    # a lot of C++ code that's written assuming it will be inlined. The
    # inlined code should end up being smaller due to constant folding.
    CFLAGS += -O2
else
    CFLAGS += -DDEBUG -g3
endif

# Disable unwanted warnings, but be generally pretty pedantic
CFLAGS += -Wall -Werror -Wno-unused

CFLAGS += -g -I$(SDK_DIR)/include \
          -ffunction-sections -fdata-sections \
          -ffast-math
LDFLAGS += -lm

# CC is C++, CPP is the C Preprocessor. C++ code inherits CFLAGS,
# but it may have additional C++-specific flags set as well.

# Disable unwanted C++ features
CCFLAGS += -fno-exceptions -fno-threadsafe-statics -fno-rtti

ifeq ($(UNAME), windows32)
    CFLAGS_SIM  +=  -I$(TC_DIR)/deps/win32/speex/include \
                    -I$(TC_DIR)/deps/win32/portaudio/include
    LDFLAGS_SIM +=  -L$(TC_DIR)/deps/win32/speex/lib \
                    -L$(TC_DIR)/deps/win32/portaudio/lib \
                    -static -lportaudio -lspeex \
                    -lws2_32 -lwinmm -lole32
    # note: winmm and ole32 are required because portaudio links to them
    # but cannot link to a static version of them
else
    LDFLAGS_SIM += -lportaudio -lspeex
endif

LIBS_SIM := $(MASTER_DIR)/master-sim.a
CFLAGS_SIM += $(CFLAGS) -DSIFTEO_SIMULATOR
CCFLAGS_SIM := $(CFLAGS_SIM) $(CCFLAGS) # inherit all SIM CFLAGS plus CCFLAGS
LDFLAGS_SIM += $(LDFLAGS)

LIBS_STM32 := $(MASTER_DIR)/master-stm32.a
LDSCRIPT_STM32 := $(MASTER_DIR)/stm32/target.ld

ARCH_STM32 := -mthumb -mcpu=cortex-m3 -mfix-cortex-m3-ldrd \
              -msoft-float -mno-thumb-interwork

CFLAGS_STM32 += $(CFLAGS) $(ARCH_STM32)
CCFLAGS_STM32 := $(CFLAGS_STM32) $(CCFLAGS) # inherit all STM32 CFLAGS plus CCFLAGS
LDFLAGS_STM32 := $(LDFLAGS) $(ARCH_STM32) \
              -Wl,--gc-sections,-u,IVT \
              -T $(LDSCRIPT_STM32) -nostartfiles

