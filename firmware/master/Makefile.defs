CC_SIM = gcc
CC_STM32 = arm-none-eabi-gcc
GDB_STM32 = arm-none-eabi-gdb

SDK_DIR = $(TC_DIR)/sdk
MASTER_DIR = $(TC_DIR)/firmware/master
STIR = $(TC_DIR)/stir/stir

ASSETS = assets
BINS += $(BIN_SIM) $(BIN_STM32)
CDEPS += $(SDK_DIR)/include/sifteo/*.h $(STIR)

# The -O2 flag is important, we use a lot of C++ code that's written
# assuming it will be inlined. The inlined code should end up being smaller
# due to constant folding.
#CCFLAGS += -O2 

# Also important: No C++ exception handling support!
CCFLAGS += -fno-exceptions

CCFLAGS += -g -Wall -Werror -I$(SDK_DIR)/include

CCFLAGS_SIM := $(CCFLAGS)
LIBS_SIM := $(MASTER_DIR)/master-sim.a
LDFLAGS_SIM := $(LDFLAGS)

CCFLAGS_STM32 := $(CCFLAGS) -mthumb -mcpu=cortex-m3
LIBS_STM32 := $(MASTER_DIR)/master-stm32.a
LDSCRIPT_STM32 := $(MASTER_DIR)/stm32/target.ld
LDFLAGS_STM32 := $(LDFLAGS) -mcpu=cortex-m3 -mthumb \
	      -Wl,--gc-sections,-u,IVT \
	      -T $(LDSCRIPT_STM32) -nostartfiles

