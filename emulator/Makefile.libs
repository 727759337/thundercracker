#######################################################################
# LodePNG, self-contained PNG encoder/decoder

OBJS += src/lodepng.o

# Box2D physics library
OBJS += \
	src/Box2D/Collision/b2BroadPhase.o \
	src/Box2D/Collision/b2CollideCircle.o \
	src/Box2D/Collision/b2CollideEdge.o \
	src/Box2D/Collision/b2CollidePolygon.o \
	src/Box2D/Collision/b2Collision.o \
	src/Box2D/Collision/b2Distance.o \
	src/Box2D/Collision/b2DynamicTree.o \
	src/Box2D/Collision/b2TimeOfImpact.o \
	src/Box2D/Collision/Shapes/b2ChainShape.o \
	src/Box2D/Collision/Shapes/b2CircleShape.o \
	src/Box2D/Collision/Shapes/b2EdgeShape.o \
	src/Box2D/Collision/Shapes/b2PolygonShape.o \
	src/Box2D/Common/b2BlockAllocator.o \
	src/Box2D/Common/b2Draw.o \
	src/Box2D/Common/b2Math.o \
	src/Box2D/Common/b2Settings.o \
	src/Box2D/Common/b2StackAllocator.o \
	src/Box2D/Common/b2Timer.o \
	src/Box2D/Dynamics/b2Body.o \
	src/Box2D/Dynamics/b2ContactManager.o \
	src/Box2D/Dynamics/b2Fixture.o \
	src/Box2D/Dynamics/b2Island.o \
	src/Box2D/Dynamics/b2World.o \
	src/Box2D/Dynamics/b2WorldCallbacks.o \
	src/Box2D/Dynamics/Contacts/b2ChainAndCircleContact.o \
	src/Box2D/Dynamics/Contacts/b2ChainAndPolygonContact.o \
	src/Box2D/Dynamics/Contacts/b2CircleContact.o \
	src/Box2D/Dynamics/Contacts/b2Contact.o \
	src/Box2D/Dynamics/Contacts/b2ContactSolver.o \
	src/Box2D/Dynamics/Contacts/b2EdgeAndCircleContact.o \
	src/Box2D/Dynamics/Contacts/b2EdgeAndPolygonContact.o \
	src/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.o \
	src/Box2D/Dynamics/Contacts/b2PolygonContact.o \
	src/Box2D/Dynamics/Joints/b2DistanceJoint.o \
	src/Box2D/Dynamics/Joints/b2FrictionJoint.o \
	src/Box2D/Dynamics/Joints/b2GearJoint.o \
	src/Box2D/Dynamics/Joints/b2Joint.o \
	src/Box2D/Dynamics/Joints/b2MouseJoint.o \
	src/Box2D/Dynamics/Joints/b2PrismaticJoint.o \
	src/Box2D/Dynamics/Joints/b2PulleyJoint.o \
	src/Box2D/Dynamics/Joints/b2RevoluteJoint.o \
	src/Box2D/Dynamics/Joints/b2RopeJoint.o \
	src/Box2D/Dynamics/Joints/b2WeldJoint.o \
	src/Box2D/Dynamics/Joints/b2WheelJoint.o \
	src/Box2D/Rope/b2Rope.o \

#######################################################################
# Lua scripting (used for our test suite)

OBJS += \
	src/lua/lapi.o src/lua/lcode.o src/lua/ldebug.o src/lua/ldo.o src/lua/ldump.o \
	src/lua/lfunc.o src/lua/lgc.o src/lua/llex.o src/lua/lmem.o src/lua/lobject.o \
	src/lua/lopcodes.o src/lua/lparser.o src/lua/lstate.o src/lua/lstring.o \
	src/lua/ltable.o src/lua/ltm.o src/lua/lundump.o src/lua/lvm.o src/lua/lzio.o \
	src/lua/lauxlib.o src/lua/lbaselib.o src/lua/ldblib.o src/lua/liolib.o \
	src/lua/lmathlib.o src/lua/loslib.o src/lua/ltablib.o src/lua/lstrlib.o \
	src/lua/loadlib.o src/lua/linit.o src/lua/bit.o \

ifneq ($(BUILD_PLATFORM), windows32)
	FLAGS += -DLUA_USE_MKSTEMP
endif

#######################################################################
# Networking

ifeq ($(BUILD_PLATFORM), windows32)
	LIBS += -lws2_32
endif

#######################################################################
# OpenGL

ifeq ($(BUILD_PLATFORM),Darwin)
	LIBS += -framework OpenGL
else ifeq ($(BUILD_PLATFORM),windows32)
	OBJS += src/glew/glew.o
	INCLUDES += -I$(DEPS_DIR)/glew-1.7.0/include
	LIBS += $(DEPS_DIR)/glew-1.7.0/lib/glew32mxs.lib \
		$(DEPS_DIR)/glew-1.7.0/lib/glew32s.lib -lOpenGL32 
else
	LIBS += -lGL
endif

#######################################################################
# GLFW, a cross-platform window system layer

GLFWLIB := src/glfw/lib
INCLUDES += -I$(GLFWLIB) -Isrc/glfw/include
OBJS += \
    $(GLFWLIB)/enable.o                     \
    $(GLFWLIB)/window.o                     \
    $(GLFWLIB)/joystick.o                   \
    $(GLFWLIB)/thread.o                     \
    $(GLFWLIB)/fullscreen.o                 \
    $(GLFWLIB)/init.o                       \
    $(GLFWLIB)/stream.o                     \
    $(GLFWLIB)/time.o                       \
    $(GLFWLIB)/glext.o                      \
    $(GLFWLIB)/input.o

ifeq ($(BUILD_PLATFORM),Darwin)
    LIBS += -framework Cocoa
    INCLUDES += -I$(GLFWLIB)/cocoa
    OBJS += \
        $(GLFWLIB)/cocoa/cocoa_enable.o     \
        $(GLFWLIB)/cocoa/cocoa_thread.o     \
        $(GLFWLIB)/cocoa/cocoa_fullscreen.o \
        $(GLFWLIB)/cocoa/cocoa_time.o       \
        $(GLFWLIB)/cocoa/cocoa_glext.o      \
        $(GLFWLIB)/cocoa/cocoa_window.o     \
        $(GLFWLIB)/cocoa/cocoa_init.o       \
        $(GLFWLIB)/cocoa/cocoa_joystick.o

else ifeq ($(BUILD_PLATFORM),windows32)
    LIBS += -lmingw32 -lwinmm -lgdi32 -lm -mwindows
    INCLUDES += -I$(GLFWLIB)/win32
    OBJS += \
        $(GLFWLIB)/win32/win32_init.o       \
        $(GLFWLIB)/win32/win32_joystick.o   \
        $(GLFWLIB)/win32/win32_enable.o     \
        $(GLFWLIB)/win32/win32_thread.o     \
        $(GLFWLIB)/win32/win32_fullscreen.o \
        $(GLFWLIB)/win32/win32_time.o       \
        $(GLFWLIB)/win32/win32_glext.o      \
        $(GLFWLIB)/win32/win32_window.o
else
    LIBS += -lX11 -lpthread
    INCLUDES += -I$(GLFWLIB)/x11
    FLAGS += -D_GLFW_HAS_PTHREAD -D_GLFW_HAS_GLXGETPROCADDRESS
    OBJS += \
        $(GLFWLIB)/x11/x11_enable.o         \
        $(GLFWLIB)/x11/x11_keysym2unicode.o \
        $(GLFWLIB)/x11/x11_fullscreen.o     \
        $(GLFWLIB)/x11/x11_thread.o         \
        $(GLFWLIB)/x11/x11_glext.o          \
        $(GLFWLIB)/x11/x11_time.o           \
        $(GLFWLIB)/x11/x11_init.o           \
        $(GLFWLIB)/x11/x11_window.o         \
        $(GLFWLIB)/x11/x11_joystick.o
endif

#######################################################################
# Curses

ifeq ($(BUILD_PLATFORM),windows32)
	# Use our own copy of pdcurses on Win32
	# This is the "Win32a" variant, from http://www.projectpluto.com/win32a.htm
	INCLUDES += -Isrc/pdcurses
	OBJS += src/pdcurses/pdcurses/addch.o	  src/pdcurses/pdcurses/mouse.o		\
		src/pdcurses/pdcurses/addchstr.o  src/pdcurses/pdcurses/move.o		\
		src/pdcurses/pdcurses/addstr.o	  src/pdcurses/pdcurses/outopts.o	\
		src/pdcurses/pdcurses/attr.o	  src/pdcurses/pdcurses/overlay.o	\
		src/pdcurses/pdcurses/beep.o	  src/pdcurses/pdcurses/pad.o		\
		src/pdcurses/pdcurses/bkgd.o	  src/pdcurses/pdcurses/panel.o		\
		src/pdcurses/pdcurses/border.o	  src/pdcurses/pdcurses/printw.o	\
		src/pdcurses/pdcurses/clear.o	  src/pdcurses/pdcurses/refresh.o	\
		src/pdcurses/pdcurses/color.o	  src/pdcurses/pdcurses/scanw.o		\
		src/pdcurses/pdcurses/debug.o	  src/pdcurses/pdcurses/scr_dump.o	\
		src/pdcurses/pdcurses/delch.o	  src/pdcurses/pdcurses/scroll.o	\
		src/pdcurses/pdcurses/deleteln.o  src/pdcurses/pdcurses/slk.o		\
		src/pdcurses/pdcurses/deprec.o	  src/pdcurses/pdcurses/termattr.o	\
		src/pdcurses/pdcurses/getch.o	  src/pdcurses/pdcurses/terminfo.o	\
		src/pdcurses/pdcurses/getstr.o	  src/pdcurses/pdcurses/touch.o		\
		src/pdcurses/pdcurses/getyx.o	  src/pdcurses/pdcurses/util.o		\
		src/pdcurses/pdcurses/inch.o	  src/pdcurses/pdcurses/window.o	\
		src/pdcurses/pdcurses/inchstr.o	  src/pdcurses/win32a/pdcclip.o		 \
		src/pdcurses/pdcurses/initscr.o	  src/pdcurses/win32a/pdcdisp.o		 \
		src/pdcurses/pdcurses/inopts.o	  src/pdcurses/win32a/pdcgetsc.o	 \
		src/pdcurses/pdcurses/insch.o	  src/pdcurses/win32a/pdckbd.o		 \
		src/pdcurses/pdcurses/insstr.o	  src/pdcurses/win32a/pdcscrn.o		 \
		src/pdcurses/pdcurses/instr.o	  src/pdcurses/win32a/pdcsetsc.o	 \
		src/pdcurses/pdcurses/kernel.o	  src/pdcurses/win32a/pdcutil.o		 \
		src/pdcurses/pdcurses/keyname.o
else
	# On Linux and Mac OS, curses should already be available
	LIBS += -lncurses
endif

#######################################################################
# PortAudio

INCLUDES += -I$(DEPS_DIR)/portaudio/include
LIBS += $(DEPS_DIR)/portaudio/lib/libportaudio.a

ifeq ($(BUILD_PLATFORM), Darwin)
	LIBS += -framework CoreAudio -framework AudioToolbox \
		-framework AudioUnit -framework CoreServices
endif

ifeq ($(BUILD_PLATFORM), windows32)
	LIBS +=	 -lole32 -lwinmm
endif

ifeq ($(BUILD_PLATFORM), Linux)
	LIBS +=	 -lasound
endif

#######################################################################
# C++ Standard Library

LIBS += $(LIB_STDCPP)
