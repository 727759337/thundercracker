/* -*- mode: C; c-basic-offset: 4; intent-tabs-mode: nil -*-
 *
 * Data for the Thundercracker emulator.
 * This file is AUTOMATICALLY GENERATED.
 *
 * Copyright <c> 2011 Sifteo, Inc. All rights reserved.
 */

#include <stdint.h>
#include <cube_cpu_opcodes.h>

namespace Cube {
namespace CPU {

static int FASTCALL sbt_exception(em8051 *aCPU) {
	except(aCPU, EXCEPTION_SBT);
	return 1;
}

static int FASTCALL sbt_block_0000(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0000;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x55,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x81,0xdf);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x00,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0003(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0003;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_000b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x000b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x23,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0013(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0013;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_001b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x001b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0023(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0023;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_002b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x002b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0x5d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0033(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0033;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_003b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x003b;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0043(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0043;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_004b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x004b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0053(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0053;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x23,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0056(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0056;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0059(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0059;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x23,0x4c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x27,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c6;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xaf,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2c,0x57);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00cb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x27,0x34);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00ce;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00d1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00d3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x90,0x0c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00dc;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00df;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x93,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x94,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00e5;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x96,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x52);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x53);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x30);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x31);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x35);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x37);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00fb;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0102(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0102;
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x49,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0108(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0108;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3c,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x01,0x12);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0112(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0112;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0115(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0115;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0116(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0116;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0x98);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0119(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0119;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xae);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1c,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0121(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0121;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0122(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0122;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xca);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0125(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0125;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0126(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0126;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x64);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0129(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0129;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0131(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0131;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0132(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0132;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xbf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0135(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0135;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0136(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0136;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0xb6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0139(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0139;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0141(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0141;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0142(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0142;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0145(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0145;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0146(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0146;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0149(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0149;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0151(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0151;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0152(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0152;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0166(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0166;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x1b,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_017e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x017e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_018a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x018a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1a,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0192(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0192;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_019c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x019c;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x0f,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01a0;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01b0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01bc;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1c,0x80);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c2;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xdc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c8;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01db;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01e7;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1c,0x80);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01ec;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01f6;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01f7;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfa);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfb);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1c,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6d,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x03,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x07,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x19,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x19,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x18,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x1c,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1a,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x12,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9c,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1b,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0277(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0277;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_027f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x027f;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x24,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1d,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x88,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1e,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0295(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0295;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1d,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x78,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1e,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xfd,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02a1;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02a2;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ac;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02af;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b1;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b9;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02bd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0xbe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02c0;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ca;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02cd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x71);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d0;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d2;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d5;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02da;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02de;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x15,0x84);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02e3;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02e5;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x18);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ed;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02f1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0xbe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02f4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x45,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02fa;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xa8,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x83,0x03);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe9,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_030a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x030a;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x32,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_030d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x030d;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xea,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xeb,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xec,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x05,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x27,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x28,0x85);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x00,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0321(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0321;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x22,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0325(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0325;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe9,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_032f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x032f;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0331(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0331;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xf2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0333(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0333;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0338(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0338;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_033b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x033b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x22,0xef);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_033e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x033e;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_033f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x033f;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x05,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0342(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0342;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x01,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x83,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2c,0xc9);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x59,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x59,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x01,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0371(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0371;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xf8);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xf9);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x26,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x25,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9a,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x02,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xe1,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x03,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xe2,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x04,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x1c,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x23,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x24,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x01,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03c5;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9c,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x22,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x01,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03cf;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03d2;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x22,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03d6;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x27,0x88);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x28,0x02);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x26,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03e2;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03e4;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x26,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03e8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03ea;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xa8,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x42);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0401(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0401;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x82,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x27,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x27,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x28,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x28,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0412(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0412;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x28,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0415(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0415;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0418(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0418;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x25,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x25,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0420(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0420;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x04,0x42);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0423(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0423;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x26,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_042d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x042d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x04,0x42);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0430(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0430;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xea,0x83);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x42);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0439(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0439;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x84,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x27,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x85,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0442(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0442;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0445(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0445;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0459(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0459;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_046d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x046d;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0470(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0470;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0473(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0473;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_047d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x047d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0480(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0480;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0496(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0496;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0497(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0497;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_049a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x049a;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04a1;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04a7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04aa;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04b1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04b4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04b7;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04be;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04c1;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04c9;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04d1;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04d4;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04da;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04dd;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04e4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04e7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04ea;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04f1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04f4;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04fc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0504(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0504;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0507(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0507;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_050d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x050d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0510(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0510;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0517(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0517;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_051a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x051a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_051d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x051d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0524(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0524;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0527(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0527;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_052f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x052f;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0537(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0537;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_053a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x053a;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0540(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0540;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0543(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0543;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_054a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x054a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_054d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x054d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0550(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0550;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0557(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0557;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_055a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x055a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0562(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0562;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_056a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x056a;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_056d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x056d;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0573(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0573;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0576(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0576;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_057d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x057d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0580(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0580;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0583(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0583;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_058a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x058a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_058d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x058d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0595(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0595;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_059d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x059d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05a0;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05a6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05a9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b6;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05c0;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05c8;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d0;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d3;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05dc;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05f0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05f3;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05fb;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0603(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0603;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0606(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0606;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_060c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x060c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_060f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x060f;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0616(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0616;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0619(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0619;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_061c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x061c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0623(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0623;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0626(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0626;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_062e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x062e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0636(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0636;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_063e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x063e;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0643(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0643;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xee,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0648(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0648;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_064b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x064b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_065f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x065f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x8c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0662(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0662;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0665(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0665;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0669(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0669;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_066c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x066c;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xcc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_067f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x067f;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0680(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0680;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0683(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0683;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_068c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x068c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_068f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x068f;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0696(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0696;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_069c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x069c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_069f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x069f;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06a6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06a9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ac;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b6;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06be;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06c6;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06c9;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06cf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d2;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06dc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06df;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06f1;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06f9;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06fc;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0702(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0702;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0705(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0705;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_070c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x070c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_070f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x070f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0712(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0712;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0719(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0719;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_071c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x071c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0724(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0724;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_072c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x072c;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_072f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x072f;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0735(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0735;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0738(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0738;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_073f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x073f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0742(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0742;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0745(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0745;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_074c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x074c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_074f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x074f;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0757(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0757;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_075f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x075f;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0762(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0762;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0768(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0768;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_076b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x076b;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0772(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0772;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0775(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0775;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0778(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0778;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_077f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x077f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0782(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0782;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_078a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x078a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0792(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0792;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0795(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0795;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_079b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x079b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_079e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x079e;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07a5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07a8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ab;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07b2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07b5;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07bd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07c5;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07c8;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ce;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07d1;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07d8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07db;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07de;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e8;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f0;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f8;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0800(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0800;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0803(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0803;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0805(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0805;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0807(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0807;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0808(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0808;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_080b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x080b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_080e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x080e;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0815(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0815;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0818(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0818;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0820(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0820;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0828(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0828;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0839(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0839;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x8c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_083c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x083c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_083f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x083f;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x62);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0846(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0846;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0849(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0849;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xa7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0851(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0851;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0854(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0854;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_085d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x085d;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0863(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0863;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x90);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0866(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0866;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0869(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0869;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_086d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x086d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0870(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0870;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0883(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0883;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0884(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0884;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0887(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0887;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xd9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0890(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0890;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0893(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0893;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_089a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x089a;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08a0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08a3;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08aa;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x5d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ad;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08b0;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08b7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ba;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08c2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ca;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08cd;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d6;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08dd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x5d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08e0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08e3;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ed;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08f5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08fd;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0900(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0900;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0906(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0906;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0909(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0909;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0910(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0910;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x5d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0913(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0913;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0916(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0916;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_091d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x091d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0920(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0920;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0928(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0928;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0930(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0930;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0933(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0933;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0939(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0939;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_093c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x093c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0943(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0943;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x5d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0946(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0946;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0949(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0949;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0950(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0950;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0953(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0953;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_095b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x095b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0963(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0963;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0966(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0966;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_096c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x096c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_096f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x096f;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0976(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0976;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x5d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0979(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0979;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_097c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x097c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0983(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0983;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0986(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0986;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_098e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x098e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0996(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0996;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0999(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0999;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_099f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x099f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09a2;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09a9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x5d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ac;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09af;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09c1;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09c9;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d4;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d6;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d8;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d9;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09dc;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09e2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09e5;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ec;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x69);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ef;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09f2;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09f9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09fc;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a04;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a0c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a0c;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a0f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a0f;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a15(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a15;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a18(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a18;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a1f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a1f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x69);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a22(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a22;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a25;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a2c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a2c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a2f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a2f;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a37(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a37;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a3f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a3f;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a50;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x90);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a53;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a56;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a5d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a5d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a60;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xc9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a69;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a6c;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xcd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a72;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a75;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a7e;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a84(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a84;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0xb1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a87;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a8a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a8a;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a8e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a91(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a91;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa4;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa8;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0xc7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ab1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ab1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ab4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ab4;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0abb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0abb;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac4;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0acb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0acb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ace(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ace;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad1;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0adb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0adb;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ae3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ae3;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aeb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aeb;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aee;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af7;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0afe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0afe;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b01;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b04;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b0b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b0b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b0e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b0e;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b16;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b1e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b21(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b21;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b27;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b2a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b2a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b31;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b34(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b34;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b37(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b37;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b3e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b41(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b41;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b49(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b49;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b51;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b54(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b54;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b5a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b5a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b5d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b5d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b64(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b64;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b67(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b67;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b6a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b6a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b71(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b71;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b74(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b74;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b7c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b7c;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b84(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b84;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b87;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b8d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b90;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b97(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b97;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b9a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b9d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba7;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0baf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0baf;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bb7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bb7;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bbf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bbf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc2;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc4;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc6;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bca;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bd0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bd0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bd3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bd3;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bda(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bda;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bdd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bdd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be0;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bea;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bf2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bf2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bfa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bfa;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bfd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bfd;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c03(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c03;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c06(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c06;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c0d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c0d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c10(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c10;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c13(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c13;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c1a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c1d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c25;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c2d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c2d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c30;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c36;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c39;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c40;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c43;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c46;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c4d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c50;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c58(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c58;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c60;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c71(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c71;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0xb1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c74(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c74;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c77(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c77;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c7e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c81;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0xb7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c8a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c8a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c8d;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xcd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c93(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c93;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c96(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c96;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c9f;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xd2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cab;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0caf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0caf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb2;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cc5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cc5;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cc6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cc6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cc9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cc9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0xb5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cd2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cd2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cd5;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cdc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cdc;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ce2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ce2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ce5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ce5;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cec;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x9f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cef;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cf2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cf2;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cf9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cf9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cfc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cfc;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d04;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d0c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d0c;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d0f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d0f;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d15(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d15;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d18(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d18;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d1f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d1f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x9f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d22(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d22;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d25;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d2c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d2c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d2f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d2f;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d37(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d37;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d3f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d3f;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d42(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d42;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d48(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d48;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d4b;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d52(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d52;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x9f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d55(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d55;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d58(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d58;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d5f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d62(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d62;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d6a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d6a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d72;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d75;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d7b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d7b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d7e;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d85;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x9f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d88;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d8b;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d92(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d92;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d95;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d9d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da5;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dad;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db0;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db2;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db4;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db5;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db8;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dbe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dbe;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dc1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dc1;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dc8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dc8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xab);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dcb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dcb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dce;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd8;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0de0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0de0;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0de8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0de8;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0deb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0deb;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0df1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0df1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0df4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0df4;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dfb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dfb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xab);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dfe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dfe;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e01;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e08(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e08;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e0b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e0b;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e13(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e13;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e1b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e1b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e1e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e24(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e24;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e27;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e2e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xab);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e31;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e34(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e34;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e3b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e3b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e3e;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e46;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e4e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e4e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e51;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e57(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e57;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e5a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e5a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e61(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e61;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xab);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e64(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e64;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e67(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e67;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e6e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e6e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e71(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e71;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e79(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e79;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e81;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e92(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e92;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xd2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e95;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e98(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e98;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e9f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ea2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ea2;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eab;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eae;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xcd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eb4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eb4;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eb7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eb7;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ec0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ec0;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ec6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ec6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ec9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ec9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ecc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ecc;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed3;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ee6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ee6;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ee7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ee7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eea;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0f,0xa3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef6;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0efd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0efd;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f03(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f03;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f06(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f06;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f0d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f0d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f10(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f10;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f13(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f13;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f1a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f1d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f25;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f2d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f2d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f30;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f36;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f39;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f40;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f43;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f46;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f4d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f50;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f58(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f58;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f60;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f63;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f69;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f6c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f73(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f73;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f76(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f76;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f79(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f79;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f80;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f83(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f83;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f8b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f93(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f93;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f9b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f9b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f9e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f9e;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa0;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa2;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa3;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa6;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fac;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0faf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0faf;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fbc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fbc;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fc3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fc3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fc6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fc6;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fce;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fd6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fd6;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fd9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fd9;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fdf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fdf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe2;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fec;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fef;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ff6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ff6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ff9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ff9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1001(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1001;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1009(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1009;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_100c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x100c;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1012(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1012;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1015(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1015;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_101c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x101c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_101f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x101f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1022(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1022;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1029(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1029;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_102c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x102c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1034(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1034;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_103c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x103c;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_103f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x103f;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1045(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1045;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1048(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1048;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_104f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x104f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1052(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1052;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1055(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1055;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_105c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x105c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_105f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x105f;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1067(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1067;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_106f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x106f;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1072(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1072;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1078(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1078;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_107b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x107b;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1082(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1082;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1085(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1085;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1088(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1088;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_108f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x108f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1092(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1092;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_109a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x109a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10a2;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xc9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c3;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0f,0x93);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10cc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10cc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10cf;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xcd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10d5;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10d8;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10e1;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10e7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ed;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10f1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10f4;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1107(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1107;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1108(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1108;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_110b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x110b;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1114(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1114;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1117(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1117;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_111e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x111e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1124(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1124;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1127(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1127;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_112e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x112e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1131(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1131;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1134(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1134;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_113b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x113b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_113e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x113e;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1146(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1146;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_114e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x114e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1151(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1151;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1157(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1157;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_115a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x115a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1161(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1161;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1164(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1164;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1167(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1167;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_116e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x116e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1171(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1171;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1179(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1179;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1181(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1181;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1189(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1189;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_118c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x118c;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_118e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x118e;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1190(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1190;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1191(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1191;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1194(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1194;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_119a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x119a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_119d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x119d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11aa;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11b1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11b4;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11bc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11c4;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11c7;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11cd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11d0;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11d7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11da;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11dd;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11e4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11e7;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11ef;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11f7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11fa;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1200(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1200;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1203(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1203;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_120a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x120a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_120d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x120d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1210(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1210;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1217(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1217;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_121a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x121a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1222(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1222;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_122a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x122a;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_122d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x122d;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1233(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1233;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1236(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1236;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_123d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x123d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1240(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1240;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1243(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1243;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_124a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x124a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_124d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x124d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1255(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1255;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_125d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x125d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1260(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1260;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1266(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1266;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1269(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1269;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1270(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1270;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1273(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1273;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1276(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1276;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_127d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x127d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1280(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1280;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1288(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1288;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1290(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1290;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1293(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1293;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1299(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1299;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_129c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x129c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12a3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12a6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12a9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12b0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12b3;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12bb;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12c3;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12d4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12d7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12da;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e4;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x81);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12ed;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12f0;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xcd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12f6;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12f9;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1302(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1302;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1308(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1308;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x3a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_130b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x130b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1317(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1317;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_131a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x131a;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xcc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_132d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x132d;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_132e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x132e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1331(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1331;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x71);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_133a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x133a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_133d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x133d;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1344(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1344;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1347(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1347;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_134e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x134e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1351(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1351;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1359(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1359;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1361(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1361;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1369(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1369;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_136c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x136c;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_136e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x136e;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1370(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1370;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1371(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1371;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1374(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1374;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_137a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x137a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_137d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x137d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1384(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1384;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1387(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1387;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_138a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x138a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1391(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1391;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1394(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1394;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_139c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x139c;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13a4;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13a7;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ad;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13b0;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13b7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13bd;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13c4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13c7;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13cf;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13d7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13da;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13e0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13e3;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ea;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ed;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13f0;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13f7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13fa;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1402(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1402;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_140a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x140a;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_140d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x140d;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1413(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1413;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1416(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1416;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_141d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x141d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1420(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1420;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1423(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1423;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_142a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x142a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_142d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x142d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1435(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1435;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_143d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x143d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1440(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1440;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1446(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1446;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1449(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1449;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1450(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1450;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1453(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1453;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1456(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1456;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_145d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x145d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1460(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1460;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1468(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1468;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1470(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1470;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1473(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1473;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1479(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1479;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_147c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x147c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1483(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1483;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1486(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1486;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1489(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1489;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1490(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1490;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1493(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1493;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_149b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x149b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14a3;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x28);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14a6;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x0d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ac;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14af;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14b6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14b9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14bc;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14c3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14c6;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ce;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14d6;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14e7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x3a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ed;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14f4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14f7;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14fd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1500(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1500;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x25,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x04,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1507(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1507;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x03,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_150a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x150a;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_150d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x150d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1510(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1510;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1513(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1513;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1516(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1516;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1519(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1519;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x93);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_151c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x151c;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x03,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_151f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x151f;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1522(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1522;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x72);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1525(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1525;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x51);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1528(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1528;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_152b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x152b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x48);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_152e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x152e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x04,0x6d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1531(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1531;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1534(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1534;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1537(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1537;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_153e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x153e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1541(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1541;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1543(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1543;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1553(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1553;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_155e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x155e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1561(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1561;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1569(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1569;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1576(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1576;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_157e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x157e;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1581(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1581;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xae,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1583(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1583;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1584(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1584;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1a,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x23,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x18,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x18);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_159e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x159e;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x15,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15a2;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x0f,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15a7;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x24,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x19,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x15,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15b4;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15b6;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x10,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15bb;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15bf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15c2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15c5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x71);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15c8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x15,0xf8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15cb;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15cf;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15d2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x16,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15d5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15d7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x16,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15da;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15dc;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15df;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15e2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15e4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x15,0x84);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15e7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x18);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ed;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x16,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15f0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3e,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x3d,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15f5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0xbe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15f8;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x3d,0xff);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x3e,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1604(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1604;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3d,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x3f,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xc8);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x29,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x08,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x3d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1612(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1612;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x6d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1615(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1615;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5c,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x6a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1620(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1620;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5d,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1626(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1626;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x80,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x67,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_162b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x162b;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xf0,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf6,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_163c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x163c;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf5,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_163f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x163f;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf4,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1642(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1642;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf3,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1645(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1645;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1647(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1647;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1648(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1648;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1649(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1649;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_164a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x164a;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_164b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x164b;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5d,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1650(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1650;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1657(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1657;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0xf0,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0xf1,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1665(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1665;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1667(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1667;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf1,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_166a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x166a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_166c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x166c;
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3f,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3f,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0x04,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_167e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x167e;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x92,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1680(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1680;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1682(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1682;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x06,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_168a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x168a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xec,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1692(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1692;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_169a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x169a;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_169b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x169b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_169e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x169e;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x1a,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x23,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x1b,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6d,0x80);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16ad;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6e,0x29);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x3f,0x6f);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16b6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16b9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe9,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16be;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16c1;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x25,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16de;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16e0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x81);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16e3;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x6e,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6f,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16e8;
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x05,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe7,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x71,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5d,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x65,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16f3;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x05,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x72,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x72,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x03,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x73,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x73,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x74,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x74,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x06,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x06,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x07,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x71,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2e,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1735(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1735;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1737(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1737;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x81);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_173a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x173a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x71,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf7,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1743(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1743;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x72,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x05,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa7,0x06,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_174f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x174f;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x74,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x73,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf7,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1758(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1758;
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe7,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf7,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_175c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x175c;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x05,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0x6e,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x70,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x70,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_176a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x176a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xe8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_176d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x176d;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1781(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1781;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1792(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1792;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1796(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1796;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17a2;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17ab;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0xc5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17ae;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe9,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17b3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0xbf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17b6;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17bf;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17c5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x6f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x41,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17c9;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x6e,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x6f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17cd;
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x06,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe7,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5e,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17d7;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0f,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa7,0x07,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17df;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x06,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x87,0x07,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0f,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0f,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x06,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa7,0x07,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x14,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17f0;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x03,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x06,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x87,0x07,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2f,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x06,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf7,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1800(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1800;
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe7,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf7,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1804(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1804;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x05,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xc3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_180a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x180a;
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x6d,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_180d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x180d;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_180e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x180e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xad);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1811(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1811;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x06,0x01);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x06,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x06,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x07,0xf9);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x07,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1824(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1824;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1827(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1827;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6b,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1830(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1830;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2f,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1839(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1839;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_183a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x183a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x18,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_183d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x183d;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x84,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0x85,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe3,0x67);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_184c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x184c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_184e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x184e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xe4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1856(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1856;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1857(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1857;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x08,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1860(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1860;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x02,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1867(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1867;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_186c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x186c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1879(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1879;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_187b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x187b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_188a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x188a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_188c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x188c;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1891(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1891;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18a0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18a2;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18b1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x9b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18b3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x5b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18bb;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18be;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18c9;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x63,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18d4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x67,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18df;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x6b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18ea;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x6f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18f5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x73,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1900(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1900;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x77,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_190b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x190b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0x4e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1916(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1916;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x19,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1919(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1919;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x69,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1928(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1928;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x5f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1937(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1937;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x55,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1946(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1946;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x4b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1955(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1955;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x41,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1964(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1964;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x37,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1973(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1973;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x2d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1982(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1982;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0x4e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1991(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1991;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xc9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1996(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1996;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xd4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_199b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x199b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xdf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19a0;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19a5;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19aa;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19af;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x19,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19b4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19b7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0x4e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x18,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19bd;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x84,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0x85,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19cc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19cc;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x00,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19cf;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19d6;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19db;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xee);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19e8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19ea;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19f9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a00;
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1d,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x11,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a0b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a0b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x02,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a12(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a12;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a17(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a17;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a24(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a24;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a26(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a26;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a35(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a35;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a37(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a37;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a3c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a3c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a4b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a4d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a5c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a5c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x9b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a5e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a5e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x06,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x30,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x18,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x19,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x19,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a84(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a84;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x0f,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x18,0x3a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a89(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a89;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a8d;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x09,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x19,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a94(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a94;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a98(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a98;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1aa2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1aa2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1aa5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1aa5;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1aa7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1aa7;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1a,0x5e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1aac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1aac;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1aaf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1aaf;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ab3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ab3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0xbe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ab6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ab6;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x48,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1abf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1abf;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x02);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x04);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x40,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x41,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x06);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x42,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x43,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x08);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x0a);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x46,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x47,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x0c);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x44,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x45,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x16,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x48,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b2e;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x10,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x11,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x12,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x13,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x17,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x48,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b47(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b47;
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b53;
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x3c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b56;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4c,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b5c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b5c;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b73(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b73;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b8c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b8c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1c,0x47);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b8f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b8f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1c,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b92(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b92;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1c,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b95;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x4c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b9f;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ba4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ba4;
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x56,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bb3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bb3;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4c,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bb9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bb9;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bd0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bd0;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1be9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1be9;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x5c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1beb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1beb;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x96,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bff;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x46,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c01;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c09;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x24,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c11;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1b,0x53);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c21(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c21;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0xdc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c35(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c35;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x45,0xa0);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x44,0xa0);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xdc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c45(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c45;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c47(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c47;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x46,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x47,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c5d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c5d;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c5f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1b,0x2e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c62(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c62;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0xbe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c65(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c65;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x85,0x03);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c6a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c6a;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0x81,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ce9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ce9;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cea;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cfc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cfc;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d05(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d05;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x65);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d12(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d12;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x50,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d1c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d1c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x65);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d29(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d29;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x39,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d33(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d33;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x65);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d40;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d4a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d4a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x65);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d57(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d57;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x10,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x03,0xf0);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x04,0x01);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x99,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d6c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0xbe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d72;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d88;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d8c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d8c;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d8f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d8f;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1da9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1da9;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xdd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dab;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dad;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xc5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dc7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dc7;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xbf,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dc9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dc9;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dca;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ddc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ddc;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1de5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1de5;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x72);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1df2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1df2;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dfc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dfc;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x72);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e09;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x03,0xf8);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x04,0x01);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xc7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e1e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0xbe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e24(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e24;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e3a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e3a;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e3e;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x12,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e41(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e41;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xef,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e4f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e4f;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e51;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e53;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xdd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e61(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e61;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e63;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e64(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e64;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e76(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e76;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e7f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e7f;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x24);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e8c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e8c;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x10,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x03,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e9f;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x00,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ea2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ea2;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ea6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ea6;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ea8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ea8;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0xbe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eae;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eb1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eb1;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ec0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ec0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ec2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ec2;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ed0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ed0;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xee,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ed2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ed2;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0xbe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ed8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ed8;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x83,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1edf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1edf;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x3e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ee9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ee9;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eed;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eee;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ef2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ef2;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x81,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x69);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1efe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1efe;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f04;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x04,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f0b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f0b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x83,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f21(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f21;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x02,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x03,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f27;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f2b;
	clk += Opcodes::jbc_bitaddr_offset  (aCPU, pc, 0x10,0x06,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f2e;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f2f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f2f;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2d,0x36);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xd8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f35(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f35;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfc);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x06,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f46;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x06,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2c,0xd9);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xd8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f55(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f55;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f59(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f59;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x36);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x2b);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x7f);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x01);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x2c);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fba;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa0,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fbd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fbd;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fbe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fbe;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2d,0x3d);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xd8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fc7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fc7;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x49,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x01);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fcd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fcd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fd5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fdd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fdd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fe5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fe5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fed;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ff5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ff5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ffd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ffd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2005(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2005;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_200e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x200e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2013(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2013;
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x23,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2016(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2016;
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2019(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2019;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xda,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2029(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2029;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2039(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2039;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2049(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2049;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfe,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2057(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2057;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x09,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf9,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe7,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2063(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2063;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2072(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2072;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2074(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2074;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xe5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_207e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x207e;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x21,0x42);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2084(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2084;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2093(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2093;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2095(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2095;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xe5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_209f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x209f;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x21,0x42);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20a5;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x84,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x85,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x08);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x52,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x53,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20bc;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x07,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20bf;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x85,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20c9;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x60);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20d1;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20d6;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xf1,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20dd;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20e2;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20e9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20ee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20ee;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20f4;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbf,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20fa;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x07,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2101(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2101;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2106(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2106;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0xae);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_210b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x210b;
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_210e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x210e;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2110(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2110;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2118(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2118;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_211d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x211d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x21,0x42);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2125(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2125;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2129(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2129;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_212d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x212d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2132(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2132;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2137(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2137;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_213a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x213a;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2140(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2140;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x37,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2142(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2142;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2147(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2147;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x6e,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xd8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_214d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x214d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0xa7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2150(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2150;
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x04,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2153(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2153;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x0b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_215c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x215c;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xc7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_215e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x215e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0xa7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2161(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2161;
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x08,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2164(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2164;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x0b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x3c,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xbb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_216a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x216a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0xa7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_216d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x216d;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xc0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x45,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2179(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2179;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xaa,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_217b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x217b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0xa7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_217e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x217e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x07,0xb6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2184(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2184;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0x65);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2187(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2187;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x4d,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_218f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x218f;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x57,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2199(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2199;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3e,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4a,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21b0;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0c,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21b5;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x09,0x0f);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21bb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0x42);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21be;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x1f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21c2;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x98,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21e1;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21e4;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x30,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xab,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21eb;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x8c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ed;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x6a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ef;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21f3;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x01,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xb9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21fb;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xc1,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2203(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2203;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_221a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x221a;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_221d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x221d;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xdf,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xca,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2221(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2221;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xe7,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2229(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2229;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xf1,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2233(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2233;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xf9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_223b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x223b;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x0a,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x96,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2255(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2255;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2259(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2259;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x20,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2263(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2263;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x86,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2265(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2265;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x0b,0x03);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbb,0x00,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_226b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x226b;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x8c,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x8a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2273(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2273;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2278(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2278;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x8c);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2280(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2280;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2282(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2282;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2288(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2288;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2289(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2289;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_228e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x228e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x60,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x7d,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x60,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x60,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xec,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22a2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22a4;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x60,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22a7;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22ac;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22ae;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x27);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22b8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22b8;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22bd;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xf1,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22c4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22c9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22d0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22d5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22d9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x51,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x20,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22dd;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0xa8);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x49,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22e8;
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0xe7,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22eb;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22f0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xde,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22f4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22f9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22fd;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x52);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x53);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x85,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x84,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2312(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2312;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2316(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2316;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2320(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2320;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2324(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2324;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2325(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2325;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x04,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x05,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_232d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x232d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe7,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_233a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x233a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_233f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x233f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2343(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2343;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x02,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x03,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xcb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_234b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x234b;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_234c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x234c;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xea,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2d,0x41);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x23,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2354(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2354;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe8,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2359(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2359;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2361(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2361;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2366(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2366;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2368(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2368;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_236d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x236d;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x82);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2373(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2373;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe1,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x5a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2385(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2385;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x47);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2388(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2388;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x23,0x8e);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x56,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_238e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x238e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2391(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2391;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x08);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2396(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2396;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x10);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x55,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x01,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_239f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x239f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x16);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23a4;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x1b);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23a9;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xda,0x57);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ac;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x26);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23b4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xda,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x4a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ba;
	clk += Opcodes::xrl_mem_a           (aCPU, pc, 0x62,0x4a,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23bf;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x57,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x4b,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23c5;
	clk += Opcodes::xrl_mem_a           (aCPU, pc, 0x62,0x4b,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ca;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23cf;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x55,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x2f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x55,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23df;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ea;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x01,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x16,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23f9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8a,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xec,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ff;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x08,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5b,0x59);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5c,0x5a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x58,0x12);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcc,0xee);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xc8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_240f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x240f;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x75,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2411(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2411;
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::mov_indir_rx_imm    (aCPU, pc, 0x76,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x01,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_241f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x241f;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfd,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x79,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2426(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2426;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2428(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2428;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x4c,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x79,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x9f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2435(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2435;
	clk += Opcodes::xrl_a_indir_rx      (aCPU, pc, 0x66,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_243a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x243a;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x73,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x49,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x79,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2444(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2444;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x54,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x01,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_244f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x244f;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xfc);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcc,0xef);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xc8,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x58,0x0f);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x09,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_245d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x245d;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x08,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2464(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2464;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8b,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xff,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x94,0xa3);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x09,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2471(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2471;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xde);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2476(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2476;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5a,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x59,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x21,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2482(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2482;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x8e,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2489(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2489;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x90,0xa3);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_248f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x248f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5a,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x59,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_249c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x249c;
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0xe0,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_249f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x249f;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x90,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24a3;
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x58,0x4d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24a6;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xc8,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x94,0xa3);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x08,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24ae;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xe0,0x00);
	clk += Opcodes::cpl_a               (aCPU, pc, 0xf4,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x5a,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x32,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24b7;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x75,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x80,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24ce;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x90,0x0c);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xf3);
	clk += Opcodes::xrl_mem_imm         (aCPU, pc, 0x63,0x90,0x04);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24dd;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24e0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24e3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24e6;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x55,0xda);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24e9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8b,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8d,0xff);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x08,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24f3;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xc6,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24fa;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa6,0x04);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xc8,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xc0,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x04);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xba,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8c,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xa9,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x89,0x50);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x08);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xb9,0x08);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xab,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcb,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xca,0xee);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xc8,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcd,0xff);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x20);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xb9,0x20);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xad,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x23,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_252e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x252e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5b,0x00);
	clk += Opcodes::cpl_a               (aCPU, pc, 0xf4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x5c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2539(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2539;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5d,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2541(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2541;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2544(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2544;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5e,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2548(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2548;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_254b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x254b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2551(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2551;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2554(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2554;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x1f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25b7;
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25b9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25bd;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25d5;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25d8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x54);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25db;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5f,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x75);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x30);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f3;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f6;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f9;
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x54);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2603(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2603;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2606(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2606;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2609(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2609;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5f,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xa7,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2614(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2614;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2617(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2617;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_261a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x261a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_261c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x261c;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_261f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x261f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2623(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2623;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2626(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2626;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2629(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2629;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_262b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x262b;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_262e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x262e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5e,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5d,0x80);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x83,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x5d,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x5d,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2690(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2690;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2693(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2693;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2695(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2695;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2698(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2698;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5e,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5d,0x80);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x82,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5d,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5d,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26f4;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26f5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5e,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5e,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26fd;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26fe;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2707(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2707;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_270a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x270a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_270c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x270c;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_270f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x270f;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x75);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xa7,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2719(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2719;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xbd,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2721(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2721;
	clk += Opcodes::mov_indir_rx_imm    (aCPU, pc, 0x76,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xfb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2726(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2726;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x60,0x63);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x84);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2734(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2734;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2739(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2739;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_273a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x273a;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xff,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_273f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x273f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2741(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2741;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x50);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2744(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2744;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x60,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x27,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_274a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x274a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x50,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x08);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2750(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2750;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x03,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x54,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x67,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2759(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2759;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x54,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x67,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_275e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x275e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2760(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2760;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2765(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2765;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2768(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2768;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x7d,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x66,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x63,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x50,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x08);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x68,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x69,0x83);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2783(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2783;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2784(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2784;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x64);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe0,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_278e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x278e;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x20,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2791(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2791;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2793(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2793;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x40,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2796(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2796;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2798(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2798;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x60,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_279b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x279b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_279e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x279e;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x80,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27a1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0xf1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27a4;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27a7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27aa;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xc0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27ad;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x28,0x0f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27b0;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xe0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27b3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x28,0x1b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27b6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x28,0x3e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27b9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x8d);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27c2;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xb8);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27cb;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbd,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x40,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27da;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27dd;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xfb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27df;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27e2;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x2e);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27f1;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xaf);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2800(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2800;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x2c);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_280f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x280f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x9a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_281b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x281b;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe1,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x64,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2820(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2820;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2822(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2822;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe2,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x64,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2827(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2827;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2829(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2829;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x41);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2832(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2832;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x62);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_283b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x283b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_283e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x283e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2841(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2841;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x5d,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xfe,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5e,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x53);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2853(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2853;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xfe,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x84);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2862(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2862;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x65);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x6e);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_286e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x286e;
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x5e,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x5f,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0xff,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x66,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_287e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x287e;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x65,0x82);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x39);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2884(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2884;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x84);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_288d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x288d;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbd,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xa2);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28a2;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbd,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x84);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28b8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28b8;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xc4);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28c4;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x62);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xd3);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28d3;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28d8;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x62,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28ea;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbd,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xfd);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28fd;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x65,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x65,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbd,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x62,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x62,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_291d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x291d;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xd3,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x28,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2923(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2923;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x84,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x27,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2927(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2927;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x68,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x69,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_292e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x292e;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2935(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2935;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x1b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_293a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x293a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x61,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2949(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2949;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2955(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2955;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x04,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2965(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2965;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x01,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbd,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2977(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2977;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_297c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x297c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2980(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2980;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2985(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2985;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_298b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x298b;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2995(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2995;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x84);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_299e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x299e;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29a1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29a4;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x29,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29af;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29b6;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29bb;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x61,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29ca;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29d5;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x02,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29e1;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x03,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbd,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29f3;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29f9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29fd;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a02(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a02;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a08(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a08;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a12(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a12;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x84);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a1b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a1b;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a1e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a21(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a21;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x29,0xb6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a2c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a2c;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a33(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a33;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a38(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a38;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a48(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a48;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a4a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a4a;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x01,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a54(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a54;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbd,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x04,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x05,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a5f;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a66;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xf7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a68;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a6c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a71(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a71;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a77(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a77;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a81;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x84);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a8a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a8a;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a8d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a90;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x99,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a9a;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x62,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2aa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2aa0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2aa5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2aa5;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xf0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2aae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2aae;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xdd,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ab8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ab8;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ac6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ac6;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2acc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2acc;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x9a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ad4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ad4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ada(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ada;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x9a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ae7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ae7;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x84);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2aed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2aed;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2af0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2af0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xdd,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xfd);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2afd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2afd;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xde,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xdd,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b0b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b0b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b13(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b13;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b19(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b19;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b1e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xf0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b27;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xdd,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b31;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b3f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b3f;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b45(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b45;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x9a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b4d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b53;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x9a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b60;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x84);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b66;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b69;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b6d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b6d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x04,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x14,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b71(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b71;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b73(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b73;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xfc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b75;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x03,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b79(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b79;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b7a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b7a;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b7d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b7d;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x83,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b8b;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x80,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6a,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ba6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ba6;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bac;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x85);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bbe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bbe;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x89,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bc0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bc0;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bce;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xe6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bda(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bda;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x14,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bdc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bdc;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xd0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bf0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bf0;
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x12,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x99,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x84,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xbd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c01;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c08(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c08;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c0e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c0e;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x15,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c12(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c12;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x6c,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c27;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c2e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x83);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c3a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c3a;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xd6,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::da_a                (aCPU, pc, 0xd4,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe4,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c43;
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c44(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c44;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c50;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x82,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x83,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c57(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c57;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x7a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c5a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c5a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0xb2);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x01);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x40);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2d,0x61);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2c,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c69;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x20);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2d,0x69);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2c,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c72;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0xb6);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x67);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c81;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6a,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x55);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c8c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c8c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x26);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x19);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c98(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c98;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x18);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x46);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ca4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ca4;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x18);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x1f);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2cb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2cb0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x38);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x02);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x50);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x23,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2cbc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2cbc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2c,0x2e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2cbf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2cbf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2cc2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2cc2;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x2b,0xa6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f00;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x49,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x4a,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xb2,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0x94,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f10(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f10;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xb6,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f20;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xd5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xfe,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f30;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x50,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f40;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xb0,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x08,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xca,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xf7,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xed,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f50;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xef,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x7b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x14,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xa5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x59,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xce,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f60;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xb2,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x94,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x49,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0x4a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f70;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xef,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x59,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xce,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x14,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xa5,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f80;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x96,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x2f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xfe,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x5f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xdf,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f90;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x2f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfe,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x96,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x5a,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fa0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fb0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fc0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fc0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fd0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fd0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fe0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fe0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ff0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ff0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}
const sbt_block_t sbt_rom_code[] = {
	&sbt_block_0000,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0003,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_000b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0013,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_001b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0023,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_002b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0033,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_003b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0043,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_004b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0053,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0056,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0059,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00d1,
	&sbt_exception,
	&sbt_block_00d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0102,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0108,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0112,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0115,
	&sbt_block_0116,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0119,
	&sbt_block_011a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_011d,
	&sbt_block_011e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0121,
	&sbt_block_0122,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0125,
	&sbt_block_0126,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0129,
	&sbt_block_012a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_012d,
	&sbt_block_012e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0131,
	&sbt_block_0132,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0135,
	&sbt_block_0136,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0139,
	&sbt_block_013a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_013d,
	&sbt_block_013e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0141,
	&sbt_block_0142,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0145,
	&sbt_block_0146,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0149,
	&sbt_block_014a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_014d,
	&sbt_block_014e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0151,
	&sbt_block_0152,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0166,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_017e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_018a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0192,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_019c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01c2,
	&sbt_exception,
	&sbt_block_01c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01db,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01f6,
	&sbt_block_01f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0277,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_027f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0295,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02a1,
	&sbt_block_02a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02af,
	&sbt_exception,
	&sbt_block_02b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02d0,
	&sbt_exception,
	&sbt_block_02d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02de,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02e3,
	&sbt_exception,
	&sbt_block_02e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_030a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_030d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0321,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0325,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_032f,
	&sbt_exception,
	&sbt_block_0331,
	&sbt_exception,
	&sbt_block_0333,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0338,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_033b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_033e,
	&sbt_block_033f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0342,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0371,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03e2,
	&sbt_exception,
	&sbt_block_03e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03e8,
	&sbt_exception,
	&sbt_block_03ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0401,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0412,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0415,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0418,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0420,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0423,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_042d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0430,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0439,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0442,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0445,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0459,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_046d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0470,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0473,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_047d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0480,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0496,
	&sbt_block_0497,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_049a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04be,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04da,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0504,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0507,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_050d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0510,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0517,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_051a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_051d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0524,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0527,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_052f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0537,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_053a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0540,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0543,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_054a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_054d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0550,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0557,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_055a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0562,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_056a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_056d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0573,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0576,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_057d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0580,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0583,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_058a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_058d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0595,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_059d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0603,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0606,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_060c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_060f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0616,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0619,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_061c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0623,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0626,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_062e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0636,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_063e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0643,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0648,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_064b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_065f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0662,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0665,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0669,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_066c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_067f,
	&sbt_block_0680,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0683,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_068c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_068f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0696,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_069c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_069f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06be,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0702,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0705,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_070c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_070f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0712,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0719,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_071c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0724,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_072c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_072f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0735,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0738,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_073f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0742,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0745,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_074c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_074f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0757,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_075f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0762,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0768,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_076b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0772,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0775,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0778,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_077f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0782,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_078a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0792,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0795,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_079b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_079e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07b2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07db,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07de,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0800,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0803,
	&sbt_exception,
	&sbt_block_0805,
	&sbt_exception,
	&sbt_block_0807,
	&sbt_block_0808,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_080b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_080e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0815,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0818,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0820,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0828,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0839,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_083c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_083f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0846,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0849,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0851,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0854,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_085d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0863,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0866,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0869,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_086d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0870,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0883,
	&sbt_block_0884,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0887,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0890,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0893,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_089a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08a3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0900,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0906,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0909,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0910,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0913,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0916,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_091d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0920,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0928,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0930,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0933,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0939,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_093c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0943,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0946,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0949,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0950,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0953,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_095b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0963,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0966,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_096c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_096f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0976,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0979,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_097c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0983,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0986,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_098e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0996,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0999,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_099f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09af,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09d4,
	&sbt_exception,
	&sbt_block_09d6,
	&sbt_exception,
	&sbt_block_09d8,
	&sbt_block_09d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a04,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a0c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a0f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a15,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a18,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a1f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a22,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a25,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a2c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a2f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a37,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a3f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a50,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a56,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a5d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a60,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a69,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a72,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a75,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a7e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a84,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a87,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a8a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a8e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a91,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aa4,
	&sbt_block_0aa5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aa8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ab1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ab4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0abb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0acb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ace,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ad1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ad8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0adb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ae3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aeb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aee,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0afe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b01,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b04,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b0b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b0e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b16,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b21,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b27,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b2a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b31,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b34,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b37,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b41,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b49,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b51,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b54,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b5a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b5d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b64,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b67,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b6a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b71,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b74,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b7c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b84,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b87,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b90,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b97,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ba4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ba7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0baf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bb7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bbf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bc2,
	&sbt_exception,
	&sbt_block_0bc4,
	&sbt_exception,
	&sbt_block_0bc6,
	&sbt_block_0bc7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bd0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bd3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bda,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bdd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bf2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bfa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bfd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c03,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c06,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c0d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c10,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c13,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c25,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c2d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c36,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c39,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c40,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c43,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c46,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c50,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c58,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c60,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c71,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c74,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c77,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c7e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c81,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c8a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c93,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c96,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c9f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ca5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ca8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0caf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cc5,
	&sbt_block_0cc6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cc9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cd2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cd5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cdc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ce2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ce5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cf2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cf9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cfc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d04,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d0c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d0f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d15,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d18,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d1f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d22,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d25,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d2c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d2f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d37,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d3f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d42,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d48,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d52,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d55,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d58,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d62,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d6a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d72,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d75,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d7b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d7e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d85,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d88,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d92,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d95,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0da5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0db0,
	&sbt_exception,
	&sbt_block_0db2,
	&sbt_exception,
	&sbt_block_0db4,
	&sbt_block_0db5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0db8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dbe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dc1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dc8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dcb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0de0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0de8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0deb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0df1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0df4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dfb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dfe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e01,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e08,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e0b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e13,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e1b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e24,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e27,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e31,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e34,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e3b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e46,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e4e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e51,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e57,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e5a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e61,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e64,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e67,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e6e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e71,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e79,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e81,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e92,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e95,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e98,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e9f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ea2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eab,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eb4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eb7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ec0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ec6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ec9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ecc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ee6,
	&sbt_block_0ee7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0efd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f03,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f06,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f0d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f10,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f13,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f25,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f2d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f36,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f39,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f40,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f43,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f46,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f50,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f58,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f60,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f63,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f69,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f73,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f76,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f79,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f80,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f83,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f93,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f9b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f9e,
	&sbt_exception,
	&sbt_block_0fa0,
	&sbt_exception,
	&sbt_block_0fa2,
	&sbt_block_0fa3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fa6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0faf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fbc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fc3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fc6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fd6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fd9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fdf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fe2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fe9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ff6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ff9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1001,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1009,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_100c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1012,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1015,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_101c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_101f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1022,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1029,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_102c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1034,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_103c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_103f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1045,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1048,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_104f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1052,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1055,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_105c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_105f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1067,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_106f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1072,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1078,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_107b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1082,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1085,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1088,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_108f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1092,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_109a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10cc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1107,
	&sbt_block_1108,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_110b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1114,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1117,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_111e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1124,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1127,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_112e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1131,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1134,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_113b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_113e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1146,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_114e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1151,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1157,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_115a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1161,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1164,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1167,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_116e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1171,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1179,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1181,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1189,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_118c,
	&sbt_exception,
	&sbt_block_118e,
	&sbt_exception,
	&sbt_block_1190,
	&sbt_block_1191,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1194,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_119a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_119d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11da,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1200,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1203,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_120a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_120d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1210,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1217,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_121a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1222,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_122a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_122d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1233,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1236,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_123d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1240,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1243,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_124a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_124d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1255,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_125d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1260,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1266,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1269,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1270,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1273,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1276,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_127d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1280,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1288,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1290,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1293,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1299,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_129c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12a3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12f6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1302,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1308,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_130b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1317,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_131a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_132d,
	&sbt_block_132e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1331,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_133a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_133d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1344,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1347,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_134e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1351,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1359,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1361,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1369,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_136c,
	&sbt_exception,
	&sbt_block_136e,
	&sbt_exception,
	&sbt_block_1370,
	&sbt_block_1371,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1374,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_137a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_137d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1384,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1387,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_138a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1391,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1394,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_139c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1402,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_140a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_140d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1413,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1416,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_141d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1420,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1423,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_142a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_142d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1435,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_143d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1440,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1446,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1449,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1450,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1453,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1456,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_145d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1460,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1468,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1470,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1473,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1479,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_147c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1483,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1486,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1489,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1490,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1493,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_149b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14a3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14af,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1500,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1507,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_150a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_150d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1510,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1513,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1516,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1519,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_151c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_151f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1522,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1525,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1528,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_152b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_152e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1531,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1534,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1537,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_153e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1541,
	&sbt_exception,
	&sbt_block_1543,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1553,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_155e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1561,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1569,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1576,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_157e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1581,
	&sbt_exception,
	&sbt_block_1583,
	&sbt_block_1584,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_159e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15b4,
	&sbt_exception,
	&sbt_block_15b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15d5,
	&sbt_exception,
	&sbt_block_15d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15da,
	&sbt_exception,
	&sbt_block_15dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15e2,
	&sbt_exception,
	&sbt_block_15e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1604,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1612,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1615,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1620,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1626,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_162b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_163c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_163f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1642,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1645,
	&sbt_exception,
	&sbt_block_1647,
	&sbt_block_1648,
	&sbt_block_1649,
	&sbt_block_164a,
	&sbt_block_164b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1650,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1657,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1665,
	&sbt_exception,
	&sbt_block_1667,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_166a,
	&sbt_exception,
	&sbt_block_166c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_167e,
	&sbt_exception,
	&sbt_block_1680,
	&sbt_exception,
	&sbt_block_1682,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_168a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1692,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_169a,
	&sbt_block_169b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_169e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16be,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16de,
	&sbt_exception,
	&sbt_block_16e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1735,
	&sbt_exception,
	&sbt_block_1737,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_173a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1743,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_174f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1758,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_175c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_176a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_176d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1781,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1792,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1796,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1800,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1804,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_180a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_180d,
	&sbt_block_180e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1811,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1824,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1827,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1830,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1839,
	&sbt_block_183a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_183d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_184c,
	&sbt_exception,
	&sbt_block_184e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1856,
	&sbt_block_1857,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1860,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1867,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_186c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1879,
	&sbt_exception,
	&sbt_block_187b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_188a,
	&sbt_exception,
	&sbt_block_188c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1891,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18a0,
	&sbt_exception,
	&sbt_block_18a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18b1,
	&sbt_exception,
	&sbt_block_18b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18be,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1900,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_190b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1916,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1919,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1928,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1937,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1946,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1955,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1964,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1973,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1982,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1991,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1996,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_199b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19af,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19cc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19db,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19e8,
	&sbt_exception,
	&sbt_block_19ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a00,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a0b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a12,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a17,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a24,
	&sbt_exception,
	&sbt_block_1a26,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a35,
	&sbt_exception,
	&sbt_block_1a37,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a3c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a4b,
	&sbt_exception,
	&sbt_block_1a4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a5c,
	&sbt_exception,
	&sbt_block_1a5e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a84,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a89,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a94,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a98,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1aa2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1aa5,
	&sbt_exception,
	&sbt_block_1aa7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1aac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1aaf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ab3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ab6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1abf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b47,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b56,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b5c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b73,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b8c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b8f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b92,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b95,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b9f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ba4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bb3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bb9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bd0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1be9,
	&sbt_exception,
	&sbt_block_1beb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bff,
	&sbt_exception,
	&sbt_block_1c01,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c09,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c11,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c21,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c35,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c45,
	&sbt_exception,
	&sbt_block_1c47,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c5d,
	&sbt_exception,
	&sbt_block_1c5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c62,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c65,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c6a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ce9,
	&sbt_block_1cea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cfc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d05,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d12,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d1c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d29,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d33,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d40,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d4a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d57,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d72,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d88,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d8c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d8f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1da9,
	&sbt_exception,
	&sbt_block_1dab,
	&sbt_exception,
	&sbt_block_1dad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dc7,
	&sbt_exception,
	&sbt_block_1dc9,
	&sbt_block_1dca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ddc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1de5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1df2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dfc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e09,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e24,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e3a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e41,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e4f,
	&sbt_exception,
	&sbt_block_1e51,
	&sbt_exception,
	&sbt_block_1e53,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e61,
	&sbt_exception,
	&sbt_block_1e63,
	&sbt_block_1e64,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e76,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e7f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e8c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e9f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ea2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ea6,
	&sbt_exception,
	&sbt_block_1ea8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eb1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ec0,
	&sbt_exception,
	&sbt_block_1ec2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ed0,
	&sbt_exception,
	&sbt_block_1ed2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ed8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1edf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ee9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eed,
	&sbt_block_1eee,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ef2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1efe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f04,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f0b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f21,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f27,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f2e,
	&sbt_block_1f2f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f35,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f46,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f55,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f59,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fbd,
	&sbt_block_1fbe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fc7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fcd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fd5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fdd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fe5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ff5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ffd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2005,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_200e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2013,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2016,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2019,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2029,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2039,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2049,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2057,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2063,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2072,
	&sbt_exception,
	&sbt_block_2074,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_207e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2084,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2093,
	&sbt_exception,
	&sbt_block_2095,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_209f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20ee,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2101,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2106,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_210b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_210e,
	&sbt_exception,
	&sbt_block_2110,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2118,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_211d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2125,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2129,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_212d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2132,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2137,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_213a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2140,
	&sbt_exception,
	&sbt_block_2142,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2147,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_214d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2150,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2153,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_215c,
	&sbt_exception,
	&sbt_block_215e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2161,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2164,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_216a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_216d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2179,
	&sbt_exception,
	&sbt_block_217b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_217e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2184,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2187,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_218f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2199,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21be,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21eb,
	&sbt_exception,
	&sbt_block_21ed,
	&sbt_exception,
	&sbt_block_21ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2203,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_221a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_221d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2221,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2229,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2233,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_223b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2255,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2259,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2263,
	&sbt_exception,
	&sbt_block_2265,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_226b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2273,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2278,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2280,
	&sbt_exception,
	&sbt_block_2282,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2288,
	&sbt_block_2289,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_228e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22a2,
	&sbt_exception,
	&sbt_block_22a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22ac,
	&sbt_exception,
	&sbt_block_22ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22b8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22eb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2312,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2316,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2320,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2324,
	&sbt_block_2325,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_232d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_233a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_233f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2343,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_234b,
	&sbt_block_234c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2354,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2359,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2361,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2366,
	&sbt_exception,
	&sbt_block_2368,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_236d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2373,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2385,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2388,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_238e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2391,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2396,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_239f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_240f,
	&sbt_exception,
	&sbt_block_2411,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_241f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2426,
	&sbt_exception,
	&sbt_block_2428,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2435,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_243a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2444,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_244f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_245d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2464,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2471,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2476,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2482,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2489,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_248f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_249c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_249f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24a3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_252e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2539,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2541,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2544,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2548,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_254b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2551,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2554,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25b7,
	&sbt_exception,
	&sbt_block_25b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25db,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25f6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2603,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2606,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2609,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2614,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2617,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_261a,
	&sbt_exception,
	&sbt_block_261c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_261f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2623,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2626,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2629,
	&sbt_exception,
	&sbt_block_262b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_262e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2690,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2693,
	&sbt_exception,
	&sbt_block_2695,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2698,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26f4,
	&sbt_block_26f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26fd,
	&sbt_block_26fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2707,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_270a,
	&sbt_exception,
	&sbt_block_270c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_270f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2719,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2721,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2726,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2734,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2739,
	&sbt_block_273a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_273f,
	&sbt_exception,
	&sbt_block_2741,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2744,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_274a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2750,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2759,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_275e,
	&sbt_exception,
	&sbt_block_2760,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2765,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2768,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2783,
	&sbt_block_2784,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_278e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2791,
	&sbt_exception,
	&sbt_block_2793,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2796,
	&sbt_exception,
	&sbt_block_2798,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_279b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_279e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27da,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27dd,
	&sbt_exception,
	&sbt_block_27df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2800,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_280f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_281b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2820,
	&sbt_exception,
	&sbt_block_2822,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2827,
	&sbt_exception,
	&sbt_block_2829,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2832,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_283b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_283e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2841,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2853,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2862,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_286e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_287e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2884,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_288d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28b8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_291d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2923,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2927,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_292e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2935,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_293a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2949,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2955,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2965,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2977,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_297c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2980,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2985,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_298b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2995,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_299e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29af,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a02,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a08,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a12,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a1b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a21,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a2c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a33,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a38,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a48,
	&sbt_exception,
	&sbt_block_2a4a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a54,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a66,
	&sbt_exception,
	&sbt_block_2a68,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a71,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a77,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a81,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a8a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a90,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2aa0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2aa5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2aae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ab8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ac6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2acc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ad4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ada,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ae7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2aed,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2af0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2afd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b0b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b13,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b19,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b27,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b31,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b3f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b45,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b53,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b60,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b66,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b69,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b6d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b71,
	&sbt_exception,
	&sbt_block_2b73,
	&sbt_exception,
	&sbt_block_2b75,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b79,
	&sbt_block_2b7a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b7d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ba6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bac,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bbe,
	&sbt_exception,
	&sbt_block_2bc0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bda,
	&sbt_exception,
	&sbt_block_2bdc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bf0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c01,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c08,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c0e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c12,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c27,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c3a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c43,
	&sbt_block_2c44,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c50,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c57,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c5a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c69,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c72,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c81,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c8c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c98,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ca4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2cb0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2cbc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2cbf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2cc2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f00,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f10,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f20,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f40,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f50,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f60,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f70,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f80,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f90,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fa0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fb0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fc0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fd0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fe0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ff0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
};

extern const uint8_t sbt_rom_data[] = {
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x01,0x02,0x02,
    0x03,0x01,0x02,0x02,0x03,0x02,0x03,0x03,0x04,0x02,0x01,0x00,0x80,0x02,0xec,0x1b,
    0x02,0x11,0x00,0x80,0x03,0xb1,0x0c,0x03,0x03,0xb6,0x07,0x02,0x03,0xc0,0x08,0x00,
    0x02,0xc1,0x03,0x03,0xc2,0x03,0x03,0x03,0xc5,0x4a,0x3e,0x02,0xc7,0x40,0x02,0x26,
    0x01,0x02,0xf2,0x01,0x10,0xe0,0x3f,0x2a,0x27,0x2d,0x26,0x0c,0x53,0xf4,0x3f,0x16,
    0x1d,0x15,0x0f,0x06,0x00,0x10,0xe1,0x00,0x15,0x18,0x11,0x19,0x13,0x2b,0x63,0x40,
    0x09,0x22,0x2a,0x30,0x39,0x3f,0x02,0x35,0x00,0x02,0x13,0x00,0x05,0x2a,0x00,0x00,
    0x00,0x7f,0x02,0x3a,0x05,0x00,0x01,0x10,0x00,0x01,0x28,0x00,0x00,0x01,0x29,0x00,
    0x00,0x02,0x3d,0x07,0x02,0x3c,0x01,0x02,0x22,0x01,0x02,0x21,0x01,0x02,0x31,0x20,
    0x01,0xe2,0x01,0xe1,0x02,0x23,0x03,0x02,0x26,0x0e,0x02,0x27,0x70,0x02,0x20,0x3f,
    0x00,0x54,0x68,0x75,0x6e,0x64,0x65,0x72,0x00,0x63,0x72,0x61,0x63,0x6b,0x65,0x72,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x01,0x02,0x67,0x69,0x6b,0x02,
    0x03,0xff,0xc4,0x02,0xc6,0x00,0xca,0x02,0xcc,0x02,0xd1,0x02,0xd3,0x00,0x02,0x03,
    0xff,0xc8,0x02,0xc6,0x00,0xce,0x02,0xcc,0x02,0xd6,0x02,0xd3,0x00,0x02,0x03,0x00,
    0x00,0xbc,0x00,0xd0,0x00,0xd8,0x04,0x03,0x00,0x00,0xbc,0xbd,0xc7,0x00,0xbf,0x00,
    0x61,0x00,0xd8,0xd4,0xd5,0x05,0x03,0x00,0xbc,0xbd,0xbd,0xbd,0xbe,0xbf,0x00,0x00,
    0x00,0xc0,0xc1,0xc2,0xc2,0xc2,0xc3,0x0f,0x05,0xff,0x00,0x00,0x00,0x00,0x6d,0x08,
    0x6e,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6f,0x06,0x71,0x06,0x73,0x0a,0x75,0x08,
    0x76,0x0a,0x00,0x00,0x78,0x06,0x7a,0x06,0x7c,0x06,0x7e,0x06,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x06,0x82,0x06,0x84,0x06,0x86,0x08,0x87,0x06,
    0x89,0x06,0x8b,0x06,0x8d,0x04,0x8e,0x06,0x90,0x06,0x92,0x06,0x94,0x04,0x95,0x06,
    0x89,0x04,0x97,0x06,0x00,0x00,0x99,0x06,0x9b,0x04,0x9c,0x06,0x9e,0x06,0xa0,0x06,
    0xa2,0x04,0xa3,0x04,0x00,0x00,0x63,0x04,0xa4,0x04,0xa5,0x04,0xa6,0x06,0x00,0x00,
    0x63,0x04,0x00,0x00,0xa8,0x04,0xa9,0x06,0xab,0x04,0xac,0x06,0xae,0x06,0xb0,0x06,
    0xb2,0x06,0x00,0x00,0xb4,0x06,0xb6,0x06,0x89,0x04,0xb8,0x06,0x89,0x04,0xba,0x06,
    0x78,0xff,0x7a,0x00,0x7b,0x00,0x7c,0x49,0x7d,0x4a,0x7e,0xb2,0x7f,0x94,0x22,0x00,
    0x78,0xff,0x7a,0xbf,0x7b,0x25,0x7c,0x80,0x7d,0xfc,0x7e,0xdf,0x7f,0xb6,0x22,0x00,
    0x78,0xff,0x7a,0x80,0x7b,0xfc,0x7c,0xbf,0x7d,0x25,0x7e,0xd5,0x7f,0xfe,0x22,0x00,
    0x78,0x50,0x7a,0x80,0x7b,0xfc,0x7c,0xbf,0x7d,0x25,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0x00,0x7b,0xb0,0x7c,0x08,0x7d,0xca,0x7e,0xf7,0x7f,0xed,0x22,0x00,
    0x78,0xff,0x7a,0xef,0x7b,0x7b,0x7c,0x14,0x7d,0xa5,0x7e,0x59,0x7f,0xce,0x22,0x00,
    0x78,0x00,0x7a,0xff,0x7b,0xff,0x7c,0xb2,0x7d,0x94,0x7e,0x49,0x7f,0x4a,0x22,0x00,
    0x78,0xef,0x7a,0xff,0x7b,0xff,0x7c,0x59,0x7d,0xce,0x7e,0x14,0x7f,0xa5,0x22,0x00,
    0x78,0xff,0x7a,0xdf,0x7b,0x96,0x7c,0x2f,0x7d,0xfe,0x7e,0x5f,0x7f,0xdf,0x22,0x00,
    0x78,0xff,0x7a,0x2f,0x7b,0xfe,0x7c,0xdf,0x7d,0x96,0x7e,0x5a,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x00,0x00,0x08,0x08,0x14,0x14,0x14,0x14,0x08,0x3c,0x03,0x23,0x04,0x0a,0x08,0x08,
    0x10,0x08,0x08,0x10,0x08,0x2a,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,
    0x1c,0x22,0x08,0x0c,0x1c,0x22,0x3e,0x20,0x10,0x18,0x3e,0x02,0x38,0x04,0x3e,0x20,
    0x1c,0x22,0x1c,0x22,0x00,0x00,0x00,0x00,0x10,0x08,0x00,0x00,0x04,0x08,0x1c,0x22,
    0x1c,0x22,0x08,0x14,0x1e,0x22,0x1c,0x22,0x1e,0x22,0x3e,0x02,0x3e,0x02,0x3c,0x02,
    0x22,0x22,0x1c,0x08,0x20,0x20,0x22,0x12,0x02,0x02,0x22,0x36,0x22,0x22,0x1c,0x22,
    0x1e,0x22,0x1c,0x22,0x1e,0x22,0x1c,0x22,0x3e,0x08,0x22,0x22,0x22,0x22,0x22,0x22,
    0x22,0x22,0x22,0x22,0x3e,0x20,0x3e,0x06,0x00,0x02,0x3e,0x30,0x00,0x00,0x00,0x00,
    0x04,0x08,0x00,0x00,0x02,0x02,0x00,0x00,0x20,0x20,0x00,0x00,0x18,0x24,0x00,0x00,
    0x02,0x02,0x08,0x00,0x10,0x00,0x02,0x02,0x0c,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x0c,0x08,0x08,0x0e,0x18,0x00,0x00,0x63,0x77,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x00,0x04,0x00,0x1c,0x00,0x60,0x00,0x60,0x00,0x00,0x00,0x00,0xff,0xff,
    0x01,0x00,0x7f,0x7f,0x40,0x00,0x78,0x3c,0x00,0x00,0xe0,0xc0,0x01,0x03,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x08,0x08,0x14,0x00,0x3e,0x14,0x0a,0x1c,0x10,0x08,0x0a,0x04,0x08,0x00,
    0x04,0x04,0x20,0x20,0x1c,0x08,0x08,0x3e,0x00,0x00,0x00,0x3e,0x00,0x00,0x10,0x08,
    0x32,0x2a,0x08,0x08,0x20,0x18,0x10,0x18,0x14,0x12,0x1e,0x20,0x02,0x1e,0x10,0x08,
    0x22,0x1c,0x22,0x3c,0x08,0x00,0x08,0x00,0x04,0x02,0x3e,0x00,0x10,0x20,0x10,0x08,
    0x2a,0x3a,0x22,0x22,0x22,0x1e,0x02,0x02,0x22,0x22,0x02,0x1e,0x02,0x1e,0x02,0x02,
    0x22,0x3e,0x08,0x08,0x20,0x20,0x0a,0x06,0x02,0x02,0x2a,0x2a,0x26,0x2a,0x22,0x22,
    0x22,0x1e,0x22,0x22,0x22,0x1e,0x02,0x1c,0x08,0x08,0x22,0x22,0x22,0x22,0x22,0x2a,
    0x14,0x08,0x14,0x08,0x10,0x08,0x06,0x06,0x04,0x08,0x30,0x30,0x08,0x14,0x00,0x00,
    0x10,0x00,0x1c,0x20,0x1e,0x22,0x3c,0x02,0x3c,0x22,0x1c,0x22,0x04,0x1e,0x1c,0x22,
    0x1e,0x22,0x0c,0x08,0x18,0x10,0x22,0x12,0x08,0x08,0x36,0x2a,0x1e,0x22,0x1c,0x22,
    0x1e,0x22,0x3c,0x22,0x3a,0x06,0x3c,0x02,0x1e,0x04,0x22,0x22,0x22,0x22,0x22,0x22,
    0x22,0x14,0x22,0x22,0x3e,0x10,0x0c,0x06,0x08,0x08,0x18,0x30,0x06,0x49,0x3e,0x1c,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x40,
    0x00,0xc0,0x0e,0x8f,0x12,0x90,0x2c,0x08,0x3c,0x0f,0x00,0x00,0x06,0x0f,0xff,0x07,
    0x00,0x00,0x7f,0x70,0x00,0x00,0x1e,0x0f,0x00,0x01,0x80,0x00,0x07,0x0f,0x00,0x08,
    0x00,0x3c,0x00,0x24,0x00,0xf8,0x00,0x08,0x00,0x07,0x00,0x04,0x00,0x0f,0x00,0x09,
    0x07,0x07,0x00,0x00,0x70,0x70,0x00,0x00,0x00,0x00,0xe0,0xc0,0x79,0x3f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x78,0x00,0x00,0x00,0x00,
    0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x80,0xc0,0x00,0x00,0xe7,0xc3,0x01,0x03,0x00,0x00,0x0f,0x0f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x3c,0x3c,0x78,0x78,0x3c,0x3c,0xc0,0xc0,0xf3,0xf3,0x00,0x00,
    0xf0,0xe0,0x00,0x81,0x00,0x00,0x0f,0x07,0x00,0x00,0x00,0x00,0xf0,0xf0,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0x0f,0x0f,0x00,0x00,0x3c,0x3c,0x00,0x00,
    0xf0,0xf0,0x00,0x00,0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x60,
    0x06,0x1e,0x60,0xe0,0x00,0xff,0x06,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x60,0x60,0x01,0x00,0xc0,0xc0,0x00,0x00,
    0x60,0x60,0x0e,0x18,0x82,0x04,0xe3,0xc0,0xff,0xff,0x03,0x01,0x00,0x00,0x80,0x00,
    0xe0,0xc0,0x00,0x00,0x00,0x00,0x1e,0x1e,0x78,0xf8,0x00,0xff,0x00,0xff,0x1e,0x1f,
    0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xf8,0x7c,0x7f,0xff,0x00,0x01,0x00,0x00,
    0x80,0xc0,0x07,0x03,0xc0,0x80,0x07,0x07,0x78,0xf8,0x00,0x00,0x00,0x00,0xf8,0x78,
    0xe0,0x80,0xbf,0xff,0x0f,0x07,0xbf,0xff,0x00,0x00,0x00,0x80,0xff,0xff,0x00,0x01,
    0x00,0x80,0x3f,0x1f,0xfc,0xf8,0x00,0x01,0xe0,0xc0,0x07,0x0f,0x00,0x00,0xe0,0xf0,
    0x07,0x07,0x00,0x00,0x70,0x70,0x00,0x00,0x00,0x00,0x80,0x00,0x1f,0x0f,0x00,0xff,
    0x00,0x01,0x00,0xff,0x00,0x80,0x00,0xbc,0x00,0xa4,0x78,0xff,0x00,0xf7,0x00,0x14,
    0x0f,0xff,0x00,0x80,0x00,0xfc,0x00,0x04,0x00,0xff,0x00,0xf3,0x00,0x12,0x00,0x0f,
    0x00,0x08,0xe0,0xf0,0x00,0x00,0x81,0x00,0x07,0x0f,0x00,0x00,0x0f,0xff,0x00,0x00,
    0x00,0xff,0x00,0x80,0x3c,0x3c,0x78,0x78,0x3c,0xfc,0xc0,0xff,0xf3,0xf3,0x00,0x00,
    0xc0,0x80,0xc3,0xe7,0x00,0x00,0x03,0x01,0x00,0xff,0x00,0x01,0xf0,0xff,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0x0f,0xff,0x00,0x80,0x3c,0xfc,0x00,0x00,
    0xf0,0xf3,0x00,0x02,0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x60,
    0x1e,0x1e,0xc0,0x00,0xff,0x00,0x03,0x00,0x00,0x60,0x00,0x10,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x68,0x6c,0x00,0x00,0xc0,0xc0,0x00,0x00,
    0x68,0x6c,0x30,0x60,0x08,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0xc0,0x00,0x03,0x1e,0x1e,0xf0,0xf0,0xff,0xff,0xff,0xff,0x0f,0x0f,
    0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x1e,0xfc,0xf0,0x07,0x1f,0x00,0x00,
    0xc0,0xe0,0x03,0x01,0xc0,0xc0,0x07,0x03,0xf8,0xf0,0x03,0x0f,0x00,0x00,0x7c,0x3c,
    0x00,0x00,0xfe,0xf8,0x07,0x03,0xfe,0xf8,0x00,0x00,0xc0,0xe0,0xff,0xe7,0x03,0x07,
    0xc0,0xe0,0x0f,0x07,0xf0,0xe0,0x03,0x07,0x80,0x00,0x1f,0x3f,0x00,0x00,0xf8,0xfc,
    0x07,0x03,0xe7,0xff,0xff,0xff,0x07,0x01,0xff,0xff,0xff,0xff,0xe0,0x80,0xf8,0xf8,
    0x1f,0x1f,0x00,0x00,0x00,0x00,0xf8,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x80,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x01,0xfc,0xfc,0xc0,0xc0,0x3f,0x3f,
    0x00,0x00,0xfc,0xfc,0x03,0x03,0xfe,0xf8,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x7f,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0xe0,0xff,0xff,0xff,0xff,0x3f,0xff,
    0x00,0x00,0xfe,0xfe,0x03,0x03,0xfc,0xf0,0x00,0x00,0x3f,0x3f,0xfc,0xf0,0x3f,0x3f,
    0x00,0x00,0x00,0x00,0xfc,0xfc,0x0f,0x0f,0x00,0x00,0x00,0x00,0xc0,0xc0,0xff,0xff,
    0xfe,0xfc,0xff,0xff,0x0f,0x3f,0x00,0x00,0xff,0xfc,0xcf,0xff,0xff,0xff,0x00,0x00,
    0xff,0xf8,0x07,0x01,0xff,0xf8,0x00,0x00,0x00,0x80,0xff,0xff,0xff,0xff,0x00,0x01,
    0x1f,0x0f,0xf8,0xf0,0x00,0x80,0x00,0x01,0xfe,0xfe,0x1f,0x0f,0xf8,0xf0,0x7f,0x7f,
    0xfc,0xfc,0x3f,0x7f,0x00,0x00,0x00,0x00,0xfc,0xfe,0x3f,0x3f,0xfe,0xfc,0x7f,0x3f,
    0x7f,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x01,0x00,0xff,0xff,0xff,0xff,0x01,0x00,0xff,0xff,0xff,0xff,0x80,0x00,0xf8,0xf8,
    0x1f,0xff,0x00,0x00,0x00,0xff,0xf8,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x80,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0x01,0x03,0xfc,0xfc,0xc0,0xc0,0xff,0xff,
    0xff,0xff,0xff,0xff,0x03,0x03,0x00,0x00,0x00,0x00,0xf8,0xfe,0x03,0x0f,0x00,0x00,
    0x00,0x00,0x00,0x00,0xf8,0xfe,0x03,0x0f,0xf0,0xf0,0xff,0x1f,0xff,0xff,0xff,0xff,
    0x00,0x00,0xff,0xff,0x01,0x01,0xc0,0x00,0x03,0x07,0x1f,0x1f,0xe0,0xe0,0x3f,0x3f,
    0x00,0x00,0x00,0x00,0xfe,0xfe,0x07,0x07,0x00,0x03,0x00,0x00,0xe0,0xe0,0x7f,0x7f,
    0xf0,0xc0,0xff,0xff,0xff,0xff,0x00,0x00,0xf0,0xc0,0xff,0xff,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0xe0,0xff,0xff,0xff,0xff,0x03,0x07,
    0x07,0x03,0xe0,0xc0,0xc0,0xe0,0x03,0x07,0xff,0xff,0x07,0x03,0xe0,0xc0,0xff,0xff,
    0xf8,0xf0,0xff,0xff,0x00,0x01,0x00,0x80,0xff,0xff,0x1f,0x0f,0xf8,0xf0,0x1f,0x0f,
    0x0f,0x03,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x00,0x00,0x08,0x00,0x00,0x00,0x3e,0x14,0x28,0x1e,0x04,0x62,0x2a,0x12,0x00,0x00,
    0x04,0x08,0x20,0x10,0x1c,0x2a,0x08,0x08,0x10,0x10,0x00,0x00,0x00,0x00,0x04,0x02,
    0x26,0x22,0x08,0x08,0x04,0x02,0x20,0x22,0x3e,0x10,0x20,0x22,0x22,0x22,0x04,0x04,
    0x22,0x22,0x20,0x10,0x08,0x00,0x08,0x08,0x04,0x08,0x3e,0x00,0x10,0x08,0x08,0x00,
    0x1a,0x02,0x3e,0x22,0x22,0x22,0x02,0x22,0x22,0x22,0x02,0x02,0x02,0x02,0x32,0x22,
    0x22,0x22,0x08,0x08,0x20,0x22,0x0a,0x12,0x02,0x02,0x22,0x22,0x32,0x22,0x22,0x22,
    0x02,0x02,0x2a,0x12,0x0a,0x12,0x20,0x22,0x08,0x08,0x22,0x22,0x22,0x14,0x2a,0x36,
    0x14,0x22,0x08,0x08,0x04,0x02,0x06,0x06,0x10,0x20,0x30,0x30,0x22,0x00,0x00,0x00,
    0x00,0x00,0x3c,0x22,0x22,0x22,0x02,0x02,0x22,0x22,0x3e,0x02,0x04,0x04,0x22,0x3c,
    0x22,0x22,0x08,0x08,0x10,0x10,0x0e,0x12,0x08,0x08,0x2a,0x2a,0x22,0x22,0x22,0x22,
    0x22,0x1e,0x22,0x3c,0x02,0x02,0x1c,0x20,0x04,0x24,0x22,0x32,0x22,0x14,0x2a,0x2a,
    0x08,0x14,0x22,0x3c,0x08,0x04,0x0c,0x0c,0x08,0x08,0x18,0x18,0x30,0x00,0x3e,0x77,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x90,0x3c,
    0xf0,0x3c,0xd8,0x78,0x20,0x40,0x01,0x00,0x01,0x00,0x80,0xc0,0x1f,0x3f,0x07,0x07,
    0x00,0x00,0x70,0x70,0x00,0x00,0x1e,0x3c,0x00,0x00,0x80,0xc0,0x07,0x03,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0xf8,0xf8,0x00,0x00,0x07,0x07,0x00,0x00,0x0f,0x0f,0x00,0x00,
    0x00,0x00,0x08,0x00,0x00,0x00,0x14,0x00,0x08,0x00,0x60,0x00,0x2c,0x00,0x00,0x00,
    0x10,0x00,0x08,0x00,0x08,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x1c,0x00,0x1c,0x00,0x3e,0x00,0x1c,0x00,0x10,0x00,0x1c,0x00,0x1c,0x00,0x04,0x00,
    0x1c,0x00,0x0e,0x00,0x00,0x00,0x04,0x00,0x10,0x00,0x00,0x00,0x04,0x00,0x08,0x00,
    0x3c,0x00,0x22,0x00,0x1e,0x00,0x1c,0x00,0x1e,0x00,0x3e,0x00,0x02,0x00,0x3c,0x00,
    0x22,0x00,0x1c,0x00,0x1c,0x00,0x22,0x00,0x3e,0x00,0x22,0x00,0x22,0x00,0x1c,0x00,
    0x02,0x00,0x2c,0x00,0x22,0x00,0x1c,0x00,0x08,0x00,0x1c,0x00,0x08,0x00,0x22,0x00,
    0x22,0x00,0x08,0x00,0x3e,0x00,0x3e,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x00,0x7f,
    0x00,0x00,0x3c,0x00,0x1e,0x00,0x3c,0x00,0x3c,0x00,0x3c,0x00,0x04,0x00,0x20,0x1c,
    0x22,0x00,0x1c,0x00,0x12,0x0c,0x22,0x00,0x1c,0x00,0x22,0x00,0x22,0x00,0x1c,0x00,
    0x02,0x02,0x20,0x20,0x02,0x00,0x1e,0x00,0x18,0x00,0x2c,0x00,0x08,0x00,0x36,0x00,
    0x22,0x00,0x20,0x1c,0x3e,0x00,0x38,0x00,0x08,0x08,0x0e,0x00,0x00,0x00,0x63,0x00,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x10,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0xe0,0xf0,0x79,0xf0,0x07,0x07,
    0x00,0x00,0x70,0x70,0x00,0x00,0x78,0xf0,0x00,0x00,0xe0,0xf0,0x01,0x00,0x00,0x00,
    0x3c,0x00,0x24,0x00,0xf8,0x78,0x00,0x00,0x07,0x00,0x04,0x00,0x0f,0x0f,0x00,0x00,
    0xff,0xff,0x00,0x00,0x7f,0x7f,0x00,0x00,0x18,0x3c,0x18,0x00,0x06,0x00,0xff,0xff,
    0x00,0x00,0xff,0xff,0x00,0x00,0xbc,0xbc,0x00,0x00,0xff,0xff,0xf7,0xf7,0x00,0x00,
    0xff,0xff,0x00,0x00,0xfc,0xfc,0x00,0x00,0xff,0xff,0xf3,0xf3,0x00,0x00,0x0f,0x0f,
    0x00,0x00,0x78,0x3c,0x00,0x04,0x00,0x00,0x1e,0x3c,0x00,0x20,0xff,0xff,0x00,0x00,
    0xff,0xff,0x00,0x00,0x3c,0x3c,0x78,0x78,0xfc,0xfc,0xff,0xff,0xf3,0xf3,0x00,0x00,
    0x00,0x00,0xff,0x7e,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0xff,0xff,0x00,0x00,0xfc,0xfc,0x00,0x00,
    0xf3,0xf3,0x00,0x00,0x0f,0x0f,0x00,0x00,0x00,0xc0,0x00,0xff,0x00,0x03,0x60,0x60,
    0x1e,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x18,0x08,0x04,0x00,0xc0,0x00,0x01,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x68,0x60,0x00,0x00,0xc0,0xc0,0x00,0x00,
    0x68,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0xf0,0xf0,0x0f,0x0f,0x1e,0x1e,0xc0,0x00,0xff,0xe0,0xff,0x01,0x03,0x00,
    0xff,0x00,0x00,0xe0,0x00,0x01,0x00,0x00,0x1e,0x0f,0xc0,0x00,0x7f,0xff,0x00,0x01,
    0xe0,0xf0,0x01,0x00,0xe0,0xe0,0x03,0x01,0xe0,0x80,0x3f,0xff,0x00,0x00,0x3e,0x1e,
    0x00,0x00,0xe0,0x00,0x01,0x00,0xe0,0x00,0x00,0x00,0xf0,0xf8,0xc3,0x81,0x0f,0x1f,
    0xe0,0xf0,0x03,0x01,0xc0,0x80,0x07,0x0f,0x00,0x00,0x7e,0xfc,0x00,0x00,0x7e,0x3f,
    0xff,0x00,0x01,0x00,0x7f,0x00,0x40,0x00,0x7e,0xff,0x00,0x00,0x00,0x00,0xff,0x0f,
    0x00,0x00,0xff,0x00,0x80,0x00,0xbc,0x3c,0x80,0x00,0xff,0x78,0xf7,0x00,0x14,0x00,
    0xff,0x0f,0x80,0x00,0xfc,0x3c,0x00,0x00,0xff,0xc0,0xf3,0xf3,0x00,0x00,0x0f,0x0f,
    0x00,0x00,0x3c,0x78,0x04,0x00,0x00,0x00,0x3c,0x1e,0x20,0x00,0xff,0x00,0x01,0x00,
    0xff,0xf0,0x00,0x00,0x3c,0x3c,0x78,0x78,0xfc,0x3c,0xff,0x00,0xf3,0xf0,0x02,0x00,
    0x00,0x00,0x3c,0x18,0x00,0x18,0x00,0x00,0xff,0x00,0x01,0x00,0xff,0x00,0x80,0x00,
    0x3c,0x00,0x24,0x00,0x78,0x00,0x48,0x00,0xff,0x00,0x81,0x00,0xfc,0x00,0x04,0x00,
    0xf3,0x00,0x12,0x00,0x0f,0x00,0x08,0x00,0xe0,0x60,0xff,0x00,0x07,0x06,0x60,0x60,
    0x1e,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0xc6,0x82,0x48,0xe3,0x61,0x03,0x03,
    0x00,0xc0,0x80,0x40,0xc6,0xc6,0x00,0x48,0x60,0x61,0x01,0x00,0xc0,0xc0,0x00,0x40,
    0x60,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0xf8,0x78,0x1f,0x1e,0x1e,0x1e,0x00,0x00,0xf0,0xf8,0x07,0x1f,0x00,0x00,
    0x00,0x00,0xf0,0xf8,0x07,0x1f,0x00,0x80,0x0f,0x07,0x00,0x00,0xfc,0xf0,0x03,0x07,
    0xf0,0xf8,0x00,0x00,0xf0,0xf0,0x01,0x00,0x00,0x00,0xfe,0xf8,0x03,0x0f,0x1f,0x0f,
    0x00,0x00,0x18,0x7e,0x00,0x00,0x00,0x00,0x18,0x7e,0xfc,0x7e,0x00,0x00,0x3f,0x7e,
    0xf0,0xe0,0x01,0x03,0x80,0xc0,0x0f,0x07,0x00,0x00,0xf8,0xf0,0x81,0xc3,0x1f,0x0f,
    0x00,0x00,0x7e,0x18,0xff,0x1f,0x00,0x00,0xff,0x00,0xff,0xf8,0x00,0x00,0xf8,0xf8,
    0xff,0xff,0x00,0x01,0xff,0xff,0xff,0xff,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
    0xc0,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0x03,0x03,0xfc,0xfc,0xc0,0x80,0xff,0xff,
    0xff,0xff,0xff,0xff,0x03,0x01,0x00,0x00,0x00,0x80,0xff,0xff,0x3f,0xff,0x00,0x00,
    0x00,0x00,0x00,0x80,0xff,0xff,0x3f,0xff,0xf8,0xf8,0x1f,0x0f,0xfc,0xf0,0xff,0xff,
    0x80,0x80,0xff,0xff,0x00,0x00,0x00,0x00,0x0f,0x1f,0x0f,0x0f,0xf0,0xf0,0x3f,0x1f,
    0x80,0x80,0x00,0x00,0xff,0xff,0x03,0x03,0x0f,0x3f,0x00,0x00,0xf0,0xf0,0x3f,0x3f,
    0x00,0x00,0xff,0xfc,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x3f,0x3f,0xc0,0xf0,
    0x03,0x0f,0x00,0x00,0x00,0x00,0x03,0x0f,0xf0,0xf8,0xff,0xff,0xff,0xff,0x0f,0x1f,
    0x01,0x00,0x80,0x00,0xf0,0xf8,0x0f,0x1f,0xff,0xff,0x03,0x07,0xc0,0xe0,0xff,0xff,
    0xe0,0xc0,0xff,0xff,0x03,0x07,0xc0,0xe0,0xff,0xff,0x07,0x03,0xe0,0xc0,0x07,0x03,
    0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x1f,0x1f,0x00,0x00,0x00,0x00,0xf8,0xf8,0x00,0x00,0xf8,0xf8,
    0xff,0xff,0x01,0x07,0xff,0xff,0xff,0xff,0x80,0xe0,0xf8,0xfe,0xff,0xff,0x1f,0x7f,
    0xc0,0xc0,0x3f,0x3f,0x00,0x00,0xfc,0xfc,0x03,0x03,0xfc,0xfc,0x80,0x00,0xff,0xff,
    0xff,0xff,0xff,0xff,0x01,0x00,0x00,0x00,0xc0,0xc0,0xff,0xff,0xff,0xff,0x03,0x0f,
    0x00,0x00,0xc0,0xc0,0xff,0xff,0xff,0xff,0xfc,0xfc,0x07,0x07,0xc0,0x00,0xff,0xff,
    0xc0,0xc0,0x7f,0x7f,0x00,0x00,0x00,0x00,0x1f,0x3f,0x07,0x07,0xf8,0xf8,0x1f,0x1f,
    0x80,0xc0,0x80,0x80,0xff,0xff,0x01,0x01,0xff,0xff,0x00,0x03,0xf8,0xf8,0x1f,0x1f,
    0x00,0x00,0xf0,0xc0,0xff,0xff,0x80,0x83,0x00,0x00,0xff,0xff,0x1f,0x0f,0xfc,0xfe,
    0x3f,0x7f,0x00,0x00,0x00,0x00,0x3f,0x7f,0xfc,0xfe,0x7f,0x3f,0xfe,0xfc,0x3f,0x7f,
    0x00,0x00,0x00,0x00,0xfc,0xfc,0x3f,0x3f,0xfe,0xfe,0x0f,0x1f,0xf0,0xf8,0x7f,0x7f,
    0x80,0x00,0xff,0xff,0x0f,0x1f,0xf0,0xf8,0xff,0xff,0x01,0x00,0x80,0x00,0x01,0x00,
    0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
};
};  // namespace CPU
};  // namespace Cube
