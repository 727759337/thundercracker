/* -*- mode: C; c-basic-offset: 4; intent-tabs-mode: nil -*-
 *
 * Data for the Thundercracker emulator.
 * This file is AUTOMATICALLY GENERATED.
 *
 * Copyright <c> 2011 Sifteo, Inc. All rights reserved.
 */

#include <stdint.h>
#include <cube_cpu_opcodes.h>

namespace Cube {
namespace CPU {

static int FASTCALL sbt_exception(em8051 *aCPU) {
	except(aCPU, EXCEPTION_SBT);
	return 1;
}

static int FASTCALL sbt_block_0000(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0000;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x55,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x81,0xd7);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x00,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0003(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0003;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_000b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x000b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x23,0xb1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0013(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0013;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_001b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x001b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0023(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0023;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_002b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x002b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0x24);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0033(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0033;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_003b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x003b;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0043(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0043;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_004b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x004b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0x6c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0053(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0053;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x23,0x3a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0056(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0056;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0059(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0059;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x23,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0xe0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0xc1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c6;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xaf,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2c,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00cb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00ce;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00d1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00d3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x90,0x0c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00dc;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x93,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x94,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00e5;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x96,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x52);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x53);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x30);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x31);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x35);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x37);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00fb;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0102(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0102;
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x49,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0108(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0108;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3c,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x01,0x12);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0112(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0112;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0115(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0115;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0116(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0116;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0119(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0119;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x75);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1c,0xb1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0121(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0121;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0122(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0122;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0125(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0125;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0126(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0126;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0129(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0129;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0131(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0131;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0132(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0132;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0135(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0135;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0136(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0136;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0x7d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0139(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0139;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0141(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0141;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0142(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0142;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0145(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0145;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0146(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0146;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0149(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0149;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0151(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0151;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0152(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0152;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0166(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0166;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x1b,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_017e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x017e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_018a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x018a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1a,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0192(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0192;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_019c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x019c;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x0f,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01a0;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01b0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01bc;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1c,0x80);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c2;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xdc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c8;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01db;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01e7;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1c,0x80);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01ec;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01f6;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01f7;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfa);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfb);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1c,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6d,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x03,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x07,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x19,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x19,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x18,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x1c,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1a,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x12,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9c,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1b,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0277(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0277;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_027f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x027f;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x24,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1d,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x88,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1e,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0295(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0295;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1d,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x78,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1e,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xfd,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02a1;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02a2;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ac;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02af;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b1;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b9;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02bd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02c0;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ca;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02cd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x88);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d0;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d2;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d5;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02da;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02de;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x24);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02e3;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02e5;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x32);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ed;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02f1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02f4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x5c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02fa;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xa8,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x83,0x03);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe9,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_030a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x030a;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_030d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x030d;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xea,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xeb,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xec,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x00,0x1f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0319(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0319;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x27,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x28,0x85);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x22,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0323(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0323;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe9,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_032d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x032d;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_032f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x032f;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xf2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0331(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0331;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0338(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0338;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x01,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_033b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x033b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x22,0xef);
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0340(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0340;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x27,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x28,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0346(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0346;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x05,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe9,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_034c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x034c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xea,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0350(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0350;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xeb,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x01,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0356(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0356;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0358(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0358;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0359(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0359;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x01,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x83,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2c,0x90);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x59,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x59,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x01,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0388(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0388;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xf8);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xf9);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x26,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x25,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9a,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x02,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xe1,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x03,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xe2,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x04,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x1c,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x23,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x1c,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5b,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x24,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x01,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03df;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9c,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x22,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x01,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03e9;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03ec;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x22,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03f0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x27,0x88);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x28,0x02);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x26,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03fc;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03fe;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x26,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0402(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0402;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0404(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0404;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xa8,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_041b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x041b;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x82,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x27,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x27,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x28,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x28,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_042c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x042c;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x28,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_042f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x042f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0432(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0432;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x25,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x25,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_043a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x043a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_043d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x043d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x26,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0447(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0447;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_044a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x044a;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xea,0x83);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0453(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0453;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x84,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x27,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x85,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_045c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x045c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_045f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x045f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0473(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0473;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_048a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x048a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_048d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x048d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0494(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0494;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0497(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0497;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_049e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x049e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04a1;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04a8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04ab;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04b2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04b5;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04bc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04bf;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04c6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04c9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04d0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04e4;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04f9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04fc;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0501(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0501;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0504(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0504;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0509(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0509;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_050c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x050c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0511(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0511;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0514(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0514;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0519(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0519;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_051c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x051c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0521(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0521;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0524(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0524;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0529(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0529;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_052c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x052c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0531(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0531;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0534(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0534;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0537(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0537;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0541(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0541;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0544(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0544;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_055a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x055a;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_055b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x055b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_055e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x055e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0561(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0561;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0567(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0567;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_056a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x056a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_056d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x056d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0570(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0570;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0573(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0573;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0576(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0576;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0579(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0579;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_057b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x057b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0583(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0583;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0586(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0586;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_058c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x058c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_058f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x058f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x9c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0592(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0592;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0595(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0595;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0598(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0598;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_059b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x059b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_059e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x059e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05a0;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05a8;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05ab;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05c3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05c5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05cd;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d0;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05dc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05df;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05ea;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05f2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05f5;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05fb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05fe;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0601(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0601;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0604(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0604;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0607(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0607;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_060a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x060a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_060d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x060d;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_060f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x060f;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0617(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0617;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_061a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x061a;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0620(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0620;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0623(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0623;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0626(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0626;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0629(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0629;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_062c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x062c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_062f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x062f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0632(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0632;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0634(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0634;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_063c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x063c;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_063f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x063f;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0645(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0645;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0648(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0648;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_064b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x064b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_064e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x064e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0651(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0651;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0654(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0654;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0657(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0657;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0659(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0659;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0661(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0661;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0664(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0664;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_066a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x066a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_066d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x066d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0670(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0670;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0673(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0673;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0676(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0676;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0679(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0679;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_067c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x067c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_067e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x067e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0686(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0686;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_068e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x068e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x05,0x37);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0691(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0691;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0696(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0696;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0699(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0699;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ad;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0xd4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x9c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b3;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ba;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xcc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06cd;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ce;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x07,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06da;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x9c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ec;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ef;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06f2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06f4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06fc;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ff;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0705(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0705;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0708(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0708;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_070b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x070b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_070e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x070e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0711(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0711;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0714(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0714;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0717(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0717;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0719(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0719;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0721(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0721;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0724(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0724;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_072a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x072a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_072d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x072d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0730(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0730;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0733(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0733;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0736(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0736;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0739(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0739;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_073c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x073c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_073e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x073e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0746(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0746;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0749(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0749;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_074f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x074f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0752(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0752;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0755(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0755;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0758(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0758;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_075b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x075b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_075e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x075e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0761(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0761;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0763(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0763;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_076b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x076b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_076e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x076e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0774(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0774;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0777(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0777;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_077a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x077a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_077d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x077d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0780(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0780;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0783(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0783;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0786(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0786;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0788(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0788;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0790(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0790;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0793(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0793;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0799(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0799;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_079c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x079c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_079f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x079f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07a2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07a5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07a8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ab;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ad;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07b5;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07b8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07b8;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07be;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07c1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07c4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07c7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ca;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07cd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07d0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07d2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07da;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e5;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e7;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e9;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ea;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ed;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f6;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f8;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0800(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0800;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0811(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0811;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0xd4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0814(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0814;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0817(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0817;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0xb0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_081a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x081a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_081d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x081d;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xbb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_081f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x081f;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0822(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0822;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_082b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x082b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0831(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0831;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x58);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0834(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0834;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0837(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0837;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_083b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x083b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_083e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x083e;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0851(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0851;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0852(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0852;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0855(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0855;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x49);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0858(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0858;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_085b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x085b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_085e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x085e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0864(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0864;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0867(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0867;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_086a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x086a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xad);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_086d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x086d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0870(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0870;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0873(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0873;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0876(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0876;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0878(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0878;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0880(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0880;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0883(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0883;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0889(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0889;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_088c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x088c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_088f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x088f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xad);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0892(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0892;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0895(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0895;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0898(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0898;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_089b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x089b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_089d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x089d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08a5;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08a8;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ae;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08b1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08b4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xad);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08b7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08c0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08c2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ca;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08cd;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xad);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08dc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08df;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08e2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08e5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08e7;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ef;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08f2;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08f8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08fb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08fe;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xad);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0901(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0901;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0904(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0904;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0907(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0907;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_090a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x090a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_090c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x090c;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0914(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0914;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0917(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0917;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_091d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x091d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0920(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0920;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0923(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0923;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xad);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0926(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0926;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0929(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0929;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_092c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x092c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_092f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x092f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0931(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0931;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0939(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0939;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0941(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0941;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0944(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0944;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0946(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0946;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0948(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0948;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0949(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0949;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_094c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x094c;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0952(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0952;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0955(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0955;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0958(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0958;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xb3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_095b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x095b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_095e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x095e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0961(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0961;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0964(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0964;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0966(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0966;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_096e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x096e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0971(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0971;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0977(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0977;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_097a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x097a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_097d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x097d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xb3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0980(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0980;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0983(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0983;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0986(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0986;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0989(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0989;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_098b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x098b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0993(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0993;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09a4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x58);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09a7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09aa;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x34);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ad;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x39);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b6;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b8;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09bb;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09c4;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ca;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xf1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09cd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d0;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d7;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ea;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09eb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ee;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0xbd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09f1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09f4;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09f7;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09fd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a00;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a03(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a03;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a06(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a06;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a09;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a0c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a0c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a0f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a0f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a11;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a19(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a19;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a1c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a1c;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a22(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a22;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a25;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a28(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a28;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a2b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a2e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a31;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a34(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a34;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a36;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a3e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a41(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a41;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a47(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a47;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a4a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a4a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a4d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a50;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a53;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a56;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a59(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a59;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a5b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a5b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a63;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a66;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a6c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a6f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a6f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a72;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a75;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a78;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a7b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a7b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a7e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a80;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a88;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a8b;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a91(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a91;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a94(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a94;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a97(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a97;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a9a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a9d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aad;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ab5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ab5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ab8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ab8;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aba;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0abc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0abc;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0abd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0abd;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac0;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0acc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0acc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x4c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0acf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0acf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ada(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ada;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ae2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ae2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ae5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ae5;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aeb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aeb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aee;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x4c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0afa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0afa;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0afd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0afd;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aff;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b07;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b0a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b0a;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b10(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b10;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b13(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b13;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b16;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x4c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b19(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b19;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b1c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b1c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b1f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b1f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b22(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b22;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b24(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b24;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b2c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b2c;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b3d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b3d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xf1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b40;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b43;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b46;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b49(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b49;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0xad);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b4c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b4c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b4f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b4f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b51;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b54(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b54;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b5d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b5d;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b63;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b66;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b69;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b6d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b6d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b70;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b83(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b83;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b84(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b84;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b87;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b8a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b8a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b8d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b90;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b96(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b96;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b99(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b99;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b9c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b9c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xdf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b9f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0baa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0baa;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bb2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bb2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bb5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bb5;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bbb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bbb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bbe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bbe;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xdf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bca;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bcd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bcd;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bcf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bcf;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bd7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bd7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bda(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bda;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xdf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bec;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bef;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bf2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bf2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bf4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bf4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bfc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bfc;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bff;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c05(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c05;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c08(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c08;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c0b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c0b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xdf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c0e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c0e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c11;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c14;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c17(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c17;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c19(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c19;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c21(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c21;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c29(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c29;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c2c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c2c;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c2e;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c30;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c31;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c34(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c34;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c3a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c3a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c3d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c3d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c40;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c43;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c46;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c49(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c49;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c4c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c4c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c4e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c4e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c56;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c59(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c59;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c5f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c62(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c62;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c65(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c65;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c68;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c6b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c6b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c6e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c6e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c71(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c71;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c73(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c73;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c7b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c7b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c7e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c84(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c84;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c87;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c8a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c8a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c8d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c90;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c93(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c93;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c96(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c96;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c98(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c98;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca0;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca3;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cac;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0caf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0caf;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xe5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cbb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cbb;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cbd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cbd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cc5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cc5;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cd6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cd6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cd9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cd9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cdc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cdc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cdf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cdf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ce2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ce2;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ce5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ce5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ce8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ce8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cea;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ced(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ced;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cf6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cf6;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cfc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cfc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cff;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d02(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d02;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d06(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d06;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d09;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d1c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d1c;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d1d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d20;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d23(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d23;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d26(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d26;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d29(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d29;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d2f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d2f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d32(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d32;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d35(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d35;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x78);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d38(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d38;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d3b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d3b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d3e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d41(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d41;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d43;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d4b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d4e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d4e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d54(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d54;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d57(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d57;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d5a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d5a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x78);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d5d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d5d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d60;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d63;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d66;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d68;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d70;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d73(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d73;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d79(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d79;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d7c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d7c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d7f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d7f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x78);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d82(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d82;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d85;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d88;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d8b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d8d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d95;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d9d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da0;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da2;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da4;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da5;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da8;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dae;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dbd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dbd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dc0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dc0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dc2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dc2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dca;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dcd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dcd;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ddc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ddc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ddf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ddf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0de2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0de2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0de5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0de5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0de7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0de7;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0def(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0def;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0df2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0df2;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0df8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0df8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dfb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dfb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dfe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dfe;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e01;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e04;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e07;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e0a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e0a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e0c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e0c;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e14;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e17(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e17;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e1d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e20;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e23(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e23;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e26(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e26;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e29(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e29;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e2c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e2c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e2f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e2f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e31;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e39;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e3c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e3c;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e42(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e42;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e45(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e45;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e48(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e48;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e4b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e4e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e4e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e51;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e54(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e54;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e56;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e5e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e5e;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e6f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e6f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e72;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e75;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e78;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e7b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e7b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x95);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e7e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e81;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e83(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e83;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e86(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e86;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e8f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e8f;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e95;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e98(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e98;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e9b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e9b;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e9f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ea2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ea2;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eb5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eb5;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eb6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eb6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eb9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eb9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0f,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ebc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ebc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ebf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ebf;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ec2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ec2;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ec8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ec8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ecb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ecb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ece(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ece;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eda(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eda;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0edc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0edc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ee4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ee4;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ee7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ee7;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eed;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0efc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0efc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eff;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f01;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f09;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f11;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f14;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f16;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f18(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f18;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f19(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f19;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f1c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f1c;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f22(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f22;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f25;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f28(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f28;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f2b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f2e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f31;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f34(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f34;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f36;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f3e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f41(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f41;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f47(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f47;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f4a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f4a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f4d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f50;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f53;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f56;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f59(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f59;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f5b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f5b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f63;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f66;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f6c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f6f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f6f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f72;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f75;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f78;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f7b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f7b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f7e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f80;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f88;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f8b;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f91(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f91;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f94(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f94;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f97(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f97;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f9a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f9d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fad;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb0;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fbc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fbc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fbf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fbf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fc2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fc2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fc5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fc5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fc8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fc8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fca;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fd2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fd2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fd5;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fdb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fdb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fde(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fde;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fed;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fef;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ff7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ff7;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1008(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1008;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_100b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x100b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_100e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x100e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x98);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1011(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1011;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1014(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1014;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0f,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1017(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1017;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_101a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x101a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_101c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x101c;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_101f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x101f;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x9c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1028(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1028;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_102e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x102e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x5a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1031(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1031;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_103d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x103d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1040(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1040;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xcc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1053(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1053;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1054(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1054;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1057(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1057;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x83);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_105a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x105a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_105d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x105d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1060(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1060;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1063(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1063;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1066(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1066;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1069(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1069;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_106b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x106b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1073(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1073;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_107b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x107b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_107e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x107e;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1080(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1080;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1082(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1082;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1083(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1083;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1086(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1086;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_108c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x108c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_108f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x108f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x9c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1092(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1092;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0xa0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1095(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1095;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1098(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1098;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_109b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x109b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_109e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x109e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10a0;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10a8;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ab;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0xa0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10cd;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10d0;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10d6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10d9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10dc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0xa0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10df;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10e2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10e5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10e8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ea;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10f2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10f5;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10fb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10fe;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1101(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1101;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0xa0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1104(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1104;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1107(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1107;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_110a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x110a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_110d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x110d;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_110f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x110f;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1117(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1117;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_111a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x111a;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1120(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1120;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1123(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1123;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1126(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1126;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0xa0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1129(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1129;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_112c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x112c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_112f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x112f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1132(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1132;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1134(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1134;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_113c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x113c;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_113f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x113f;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1145(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1145;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1148(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1148;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_114b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x114b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0xa0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_114e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x114e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1151(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1151;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1154(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1154;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1157(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1157;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1159(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1159;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1161(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1161;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1164(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1164;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_116a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x116a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_116d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x116d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1170(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1170;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0xa0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1173(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1173;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1176(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1176;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1179(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1179;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_117c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x117c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_117e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x117e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1186(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1186;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1197(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1197;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x5a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_119a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x119a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_119d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x119d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a8;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x25,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x04,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11ad;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x03,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11b0;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11b3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x1c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11b6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x83);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11b9;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11bc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11bf;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x51);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11c2;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x03,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11c5;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11c8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xb8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11cb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11ce;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11d1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x96);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11d4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x05,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11d7;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11da;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11dd;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11e0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11e3;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11f3;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11fe;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1201(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1201;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1209(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1209;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1216(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1216;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_121e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x121e;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1221(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1221;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xb4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1223(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1223;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1224(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1224;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1a,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x23,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x18,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x18);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_123e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x123e;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xd7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1242(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1242;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x0f,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1247(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1247;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x24,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x19,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xd7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1254(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1254;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1256(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1256;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x10,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_125b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x125b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_125f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x125f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1262(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1262;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1265(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1265;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x88);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1268(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1268;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x98);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_126b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x126b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_126f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x126f;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1272(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1272;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x17,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1275(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1275;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1277(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1277;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x17,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_127a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x127a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_127c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x127c;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_127f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x127f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1282(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1282;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1284(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1284;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x24);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1287(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1287;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_128a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x128a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x32);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_128d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x128d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1290(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1290;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3e,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x3d,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1295(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1295;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1298(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1298;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x3d,0xff);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x3e,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12a4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3d,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x3f,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xc8);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x29,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x08,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x3d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12b2;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x6d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12b5;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5c,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x6a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12c0;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5d,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12c6;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x80,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x67,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12cb;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xf0,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf6,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12dc;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf5,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12df;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf4,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e2;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf3,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e7;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e8;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e9;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12ea;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12eb;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5d,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12f0;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12f7;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0xf0,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0xf1,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1305(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1305;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1307(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1307;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf1,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_130a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x130a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_130c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x130c;
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3f,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3f,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0x04,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_131e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x131e;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x92,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1320(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1320;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1322(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1322;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x06,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_132a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x132a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xec,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1332(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1332;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_133a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x133a;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_133b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x133b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2b,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2c,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1351(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1351;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x2d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2b,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2b,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_135d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x135d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1361(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1361;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1364(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1364;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x2d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_136b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x136b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x30,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x31,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2f,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1381(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1381;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x32,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x30,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x30,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_138d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x138d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1391(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1391;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1394(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1394;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x32,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_139b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x139b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x35,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x36,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x34,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13b1;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x37,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x35,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x35,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13bd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13c1;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13c4;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x37,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13cb;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x3a,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x3b,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x39,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13e1;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x3c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3a,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x3a,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ed;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13f1;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13f4;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x3c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13fb;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2a,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1403(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1403;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1404(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1404;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_140a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x140a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2b,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2b,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1412(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1412;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1417(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1417;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2f,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_141f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x141f;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1420(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1420;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2f,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1426(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1426;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x30,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x30,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_142e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x142e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1433(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1433;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x34,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x34,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_143b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x143b;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_143c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x143c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x34,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1442(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1442;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x35,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x35,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_144a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x144a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_144f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x144f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x39,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x39,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1457(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1457;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1458(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1458;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x39,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_145e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x145e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3a,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x3a,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1466(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1466;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_146b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x146b;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1470(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1470;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1473(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1473;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2a,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_147b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x147b;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_147e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x147e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1481(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1481;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2f,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1489(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1489;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_148c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x148c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_148f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x148f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x34,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x34,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1497(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1497;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_149a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x149a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_149d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x149d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x39,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x39,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x26,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14a5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x4d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14a7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x3b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14aa;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ad;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x7b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14b0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xd7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14b3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x6b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14b6;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14b9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x89);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14bc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xe0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14bf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14c2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14c5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x97);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14c8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xe9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14cb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0xcb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ce;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14d1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14d4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14d7;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14da;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14dd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14e0;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14e3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14e6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x33);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14e9;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ec;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ef;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14f2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14f4;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1505(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1505;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1d,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x52,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1516(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1516;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_151a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x151a;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_151e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x151e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1521(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1521;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x2a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x40,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1528(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1528;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_152d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x152d;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1530(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1530;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x63);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1533(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1533;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x2f,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_153a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x153a;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_153f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x153f;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1542(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1542;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x63);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1545(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1545;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x34,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_154c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x154c;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1551(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1551;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1554(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1554;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x63);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1557(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1557;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x39,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_155e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x155e;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1563(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1563;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf8,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1568(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1568;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_156b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x156b;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_156c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x156c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_156f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x156f;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1584(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1584;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2a,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_158d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x158d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xae);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1590(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1590;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2f,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1599(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1599;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xae);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_159c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x159c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x34,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x34,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15a5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xae);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15a8;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x39,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x39,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ae;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0xba,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15b1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15b4;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15b9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15bc;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2a,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15c4;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15c6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x3b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15c9;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15cc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15cc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xd2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15cf;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15d2;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15e3;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1d,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15f4;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15f8;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15fc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ff;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x2a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1606(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1606;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_160b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x160b;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf8,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1610(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1610;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1613(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1613;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1614(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1614;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1617(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1617;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_162c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x162c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1632(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1632;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0xde,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1635(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1635;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xf8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1638(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1638;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_163d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x163d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x10);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1640(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1640;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1643(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1643;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1646(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1646;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x65);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1649(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1649;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2a,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1651(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1651;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1654(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1654;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xce);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1657(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1657;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2f,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_165f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x165f;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1662(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1662;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xce);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1665(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1665;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x34,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x34,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_166d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x166d;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1670(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1670;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xce);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1673(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1673;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x39,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x39,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x27,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_167b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x167b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xce);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_167e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x167e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x3b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1681(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1681;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1684(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1684;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x51);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1687(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1687;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xb1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_168a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x168a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x6b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_168d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x168d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1690(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1690;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1693(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1693;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1696(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1696;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1699(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1699;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_169c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x169c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x6d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_169f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x169f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16a2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0xcb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16a5;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16a8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xce);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16ab;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xd1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16ae;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16b1;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16b4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xd1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16b7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16ba;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16bd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xd1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x33);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16c3;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16c6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xd1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16c9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16cc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16cc;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16ce;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16d1;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1d,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16e2;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16ef;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16f7;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16fa;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x55,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1702(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1702;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1706(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1706;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_170d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x170d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1710(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1710;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x2a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x40,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1717(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1717;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_171c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x171c;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_171f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x171f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1722(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1722;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x2f,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1729(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1729;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_172e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x172e;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1731(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1731;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1734(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1734;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x34,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_173b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x173b;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1740(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1740;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1743(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1743;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1746(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1746;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x39,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_174d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x174d;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1752(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1752;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf8,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1757(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1757;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x00,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_175a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x175a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_175e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x175e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1761(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1761;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x01,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1767(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1767;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x24,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2a,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1777(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1777;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x98);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_177a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x177a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2f,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1783(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1783;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x98);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1786(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1786;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x34,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x34,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_178f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x178f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x98);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1792(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1792;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x39,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x39,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1798(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1798;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0xbf,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_179b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x179b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x10);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_179e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x179e;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1a,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x3f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x01,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x3f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17b4;
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17b6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x6b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17b9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17bc;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1a,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x23,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x3f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17d8;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x06,0x01);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x06,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x06,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x07,0xf9);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x07,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17eb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17ee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17ee;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6b,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17f7;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2f,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1800(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1800;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1801(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1801;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x17,0xd8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1804(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1804;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x84,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0x85,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe3,0x67);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1813(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1813;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1815(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1815;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xe4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_181d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x181d;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_181e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x181e;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x08,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1827(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1827;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x02,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_182e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x182e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1833(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1833;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1840(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1840;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1842(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1842;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1851(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1851;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1853(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1853;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1858(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1858;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1867(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1867;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1869(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1869;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1878(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1878;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x9b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_187a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x187a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x5b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1882(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1882;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1885(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1885;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1890(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1890;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x63,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_189b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x189b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x67,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18a6;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x6b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18b1;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x6f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18bc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x73,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18c7;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x77,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18d2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18dd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x19,0x7b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18e0;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x69,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18ef;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x5f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18fe;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x55,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_190d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x190d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x4b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_191c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x191c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x41,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_192b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x192b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x37,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_193a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x193a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x2d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1949(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1949;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1958(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1958;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0x90);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_195d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x195d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1962(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1962;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xa6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1967(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1967;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xb1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_196c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x196c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1971(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1971;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xc7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1976(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1976;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xd2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_197b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x197b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_197e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x197e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1981(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1981;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x17,0xd8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1984(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1984;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x84,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0x85,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1993(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1993;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x00,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1996(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1996;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_199d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x199d;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19a2;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xee);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19af;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19b1;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19c0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19c7;
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1d,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x11,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19d2;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x02,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19d9;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19de;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19eb;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19ed;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19fc;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19fe;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a03(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a03;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a12(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a12;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a14;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a23(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a23;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x9b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a25;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x06,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x30,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x18,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x19,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x19,0x81);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a4b;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x0f,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x18,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a50;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a54(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a54;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x09,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x19,0x81);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a5b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a5b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a5f;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a69;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a6c;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a6e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a6e;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1a,0x25);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a73(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a73;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a76(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a76;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a7a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a7a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a7d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a7d;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x48,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a86(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a86;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x02);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x04);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x40,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x41,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x06);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x42,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x43,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x08);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x0a);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x46,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x47,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x0c);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x44,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x45,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x16,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x48,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1af5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1af5;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x10,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x11,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x12,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x13,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x17,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x48,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b0e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b0e;
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b1a;
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x3c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b1d;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4c,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b23(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b23;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b3a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b3a;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b53;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1c,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b56;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1b,0xc8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b59(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b59;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1b,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b5c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b5c;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x4c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b66;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b6b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b6b;
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x56,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b7a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b7a;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4c,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b80;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b97(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b97;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bb0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x5c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bb2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bb2;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x96,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bc6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bc6;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x46,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bc8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bc8;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bd0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bd0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x24,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bd8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bd8;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1b,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1be8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1be8;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0xdc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bfc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bfc;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x45,0xa0);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x44,0xa0);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xdc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c0c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c0c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c0e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c0e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x46,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x47,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c24(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c24;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c26(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c26;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c29(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c29;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c2c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c2c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x85,0x03);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c31;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0x81,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cb0;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cb1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cb1;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cc3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cc3;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ccc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ccc;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x2c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cd9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cd9;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x50,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ce3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ce3;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x2c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cf0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cf0;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x39,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cfa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cfa;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x2c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d07;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d11;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x2c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d1e;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x10,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x03,0xf0);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x04,0x01);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x99,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d33(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d33;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d39;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d4f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d4f;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d53;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d56;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d70;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xdd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d72;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d74(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d74;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xc5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d8e;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xbf,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d90;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d91(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d91;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1da3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1da3;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dac;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x39);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1db9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1db9;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dc3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dc3;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x39);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dd0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dd0;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x03,0xf8);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x04,0x01);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xc7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1de5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1de5;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1deb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1deb;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e01;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e05(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e05;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x12,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e08(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e08;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xef,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e16;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e18(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e18;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e1a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xdd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e28(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e28;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e2a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e2a;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e2b;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e3d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e3d;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e46;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e53;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x10,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x03,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e66;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x00,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e69;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e6d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e6d;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e6f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e6f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e75;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e78;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e87;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e89(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e89;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e97(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e97;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xee,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e99(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e99;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e9f;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x83,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ea6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ea6;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x3e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eb0;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eb4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eb4;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eb5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eb5;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eb9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eb9;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x81,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ec5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ec5;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ecb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ecb;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x04,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ed2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ed2;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x83,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ee8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ee8;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x02,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x03,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eee;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ef2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ef2;
	clk += Opcodes::jbc_bitaddr_offset  (aCPU, pc, 0x10,0x06,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ef5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ef5;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ef6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ef6;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2c,0xfd);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x9f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1efc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1efc;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfc);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x06,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f0d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f0d;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x06,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2c,0xa0);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x9f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f1c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f1c;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f20;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x36);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x2b);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x7f);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x01);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x2c);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f81;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa0,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f84(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f84;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f85;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2d,0x04);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x9f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f8e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x49,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x01);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f94(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f94;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f9c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f9c;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fa4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fa4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fac;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fb4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fb4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fbc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fbc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fc4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fc4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fcc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fcc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fd5;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fda(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fda;
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x23,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fdd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fdd;
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fe0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fe0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xda,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ff0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ff0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2000(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2000;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2010(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2010;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfe,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_201e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x201e;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x09,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf9,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe7,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_202a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x202a;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2039(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2039;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_203b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x203b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xe5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2045(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2045;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x21,0x09);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_204b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x204b;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_205a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x205a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_205c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x205c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xe5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2066(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2066;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x21,0x09);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_206c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x206c;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x84,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x85,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x08);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x52,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x53,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2083(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2083;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x07,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2086(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2086;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x85,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2090(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2090;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x60);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2098(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2098;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_209d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x209d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xf1,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20a4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20a9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20b0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20b5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20bb;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbf,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20c1;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x07,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20c8;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20cd;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0x75);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20d2;
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20d5;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20d7;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20df;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20e4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x21,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20ec;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20f0;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20f4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20f9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20fe;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2101(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2101;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2107(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2107;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x37,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2109(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2109;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_210e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x210e;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x6e,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xd8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2114(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2114;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2117(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2117;
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x04,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_211a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x211a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x0b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2123(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2123;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xc7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2125(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2125;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2128(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2128;
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x08,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_212b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x212b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x0b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x3c,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xbb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2131(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2131;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2134(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2134;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xc0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x45,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2140(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2140;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xaa,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2142(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2142;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2145(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2145;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x07,0xb6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_214b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x214b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0x2c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_214e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x214e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x4d,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2156(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2156;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x57,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2160(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2160;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3e,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4a,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2177(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2177;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0c,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_217c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x217c;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x09,0x0f);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2182(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2182;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2185(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2185;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x1f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2189(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2189;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x98,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21a8;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ab;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x30,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xab,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21b2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x8c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21b4;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x6a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21b6;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ba;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x01,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xb9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21c2;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xc1,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ca;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21e1;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21e4;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xdf,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xca,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21e8;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xe7,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21f0;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xf1,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21fa;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xf9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2202(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2202;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x0a,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x96,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_221c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x221c;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2220(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2220;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_222a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x222a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x86,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_222c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x222c;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x0b,0x03);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbb,0x00,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2232(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2232;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x8c,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x8a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_223a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x223a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_223f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x223f;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x8c);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2247(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2247;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2249(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2249;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_224f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x224f;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2250(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2250;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2255(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2255;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x60,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x75,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x60,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x60,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xec,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2269(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2269;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_226b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x226b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x60,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_226e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x226e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2273(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2273;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2275(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2275;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x27);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_227f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x227f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2284(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2284;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xf1,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_228b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x228b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2290(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2290;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0x83);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2297(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2297;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_229c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x229c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22a0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x51,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x20,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22a4;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0xa8);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x49,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22af;
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0xe7,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22b2;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22b7;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xde,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22bb;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22c0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22c4;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x52);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x53);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x85,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x84,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22d9;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22dd;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22e7;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22eb;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22ec;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x04,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x05,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22f4;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe7,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2301(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2301;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2306(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2306;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_230a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x230a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x02,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x03,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xcb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2312(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2312;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2313(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2313;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xea,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2d,0x08);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x22,0xd9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_231b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x231b;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe8,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2320(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2320;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2328(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2328;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_232d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x232d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_232f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x232f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2334(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2334;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x82);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_233a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x233a;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe1,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x5a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_234c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x234c;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x47);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_234f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x234f;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x23,0x55);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x56,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2355(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2355;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2358(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2358;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x08);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_235d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x235d;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x10);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x55,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x01,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2366(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2366;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x16);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_236b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x236b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x1b);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2370(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2370;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xda,0x57);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2373(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2373;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x26);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_237b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x237b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xda,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x4a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2381(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2381;
	clk += Opcodes::xrl_mem_a           (aCPU, pc, 0x62,0x4a,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2386(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2386;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x57,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x4b,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_238c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x238c;
	clk += Opcodes::xrl_mem_a           (aCPU, pc, 0x62,0x4b,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2391(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2391;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2396(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2396;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x55,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x2f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x55,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23a6;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23b1;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x01,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x16,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23c0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8a,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xec,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23c6;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x08,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5b,0x59);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5c,0x5a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x58,0x12);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcc,0xee);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xc8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23d6;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x6d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23d8;
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::mov_indir_rx_imm    (aCPU, pc, 0x76,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x01,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23e6;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfd,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x71,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ed;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ef;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x4c,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x71,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x9f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23fc;
	clk += Opcodes::xrl_a_indir_rx      (aCPU, pc, 0x66,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2401(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2401;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x6b,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x49,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x71,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_240b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x240b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x54,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x01,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2416(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2416;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xfc);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcc,0xef);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xc8,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x58,0x0f);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x09,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2424(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2424;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x08,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_242b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x242b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8b,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xff,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x94,0xa3);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x09,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2438(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2438;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xde);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_243d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x243d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5a,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x59,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x21,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2449(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2449;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x8e,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2450(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2450;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x90,0xa3);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2456(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2456;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5a,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x59,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2463(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2463;
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0xe0,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2466(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2466;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x90,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_246a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x246a;
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x58,0x4d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_246d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x246d;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xc8,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x94,0xa3);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x08,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2475(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2475;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xe0,0x00);
	clk += Opcodes::cpl_a               (aCPU, pc, 0xf4,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x5a,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x32,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_247e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x247e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x6d,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x80,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2495(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2495;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x90,0x0c);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xf3);
	clk += Opcodes::xrl_mem_imm         (aCPU, pc, 0x63,0x90,0x04);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24a4;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24a7;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24aa;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24ad;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x55,0xda);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24b0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8b,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8d,0xff);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x08,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24ba;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xc6,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24c1;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa6,0x04);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xc8,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xc0,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x04);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xba,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8c,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xa9,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x89,0x50);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x08);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xb9,0x08);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xab,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcb,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xca,0xee);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xc8,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcd,0xff);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x20);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xb9,0x20);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xad,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x23,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24f5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5b,0x00);
	clk += Opcodes::cpl_a               (aCPU, pc, 0xf4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x5c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2500(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2500;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5d,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2508(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2508;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_250b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x250b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5e,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_250f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x250f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2512(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2512;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2518(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2518;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_251b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x251b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x1f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_257e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x257e;
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2580(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2580;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2584(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2584;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_259c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x259c;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_259f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x259f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x1b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25a2;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5f,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x75);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x30);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25ba;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25bd;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25c0;
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x1b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25ca;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25cd;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25d0;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5f,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xa7,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25db;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25de;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25e1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25e3;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25e6;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25ea;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25ed;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f2;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f5;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5e,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5d,0x80);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x83,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x5d,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x5d,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2657(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2657;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_265a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x265a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_265c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x265c;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_265f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x265f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5e,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5d,0x80);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x82,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5d,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5d,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26bb;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26bc;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5e,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5e,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26c4;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26c5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26ce;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26d1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26d3;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26d6;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x75);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xa7,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26e0;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xb5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26e8;
	clk += Opcodes::mov_indir_rx_imm    (aCPU, pc, 0x76,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xfb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26ed;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x60,0x63);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x4b);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26fb;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2700(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2700;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2701(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2701;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xff,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2706(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2706;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2708(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2708;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_270b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x270b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x60,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0xe0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2711(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2711;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x50,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x08);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2717(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2717;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x03,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x54,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x67,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2720(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2720;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x54,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x67,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2725(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2725;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2727(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2727;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_272c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x272c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0xdb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_272f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x272f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x75,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x66,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x63,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x50,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x08);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x68,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x69,0x83);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_274a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x274a;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_274b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x274b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x64);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe0,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2755(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2755;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x20,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2758(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2758;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_275a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x275a;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x40,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_275d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x275d;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_275f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x275f;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x60,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2762(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2762;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0xa9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2765(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2765;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x80,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2768(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2768;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0xb8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_276b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x276b;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_276e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x276e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0xc7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2771(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2771;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xc0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2774(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2774;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2777(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2777;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xe0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_277a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x277a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_277d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x277d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x28,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2780(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2780;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2789(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2789;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x7f);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2792(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2792;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x40,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27a1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27a4;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xfb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27a6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27a9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xf5);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27b8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27b8;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x76);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27c7;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xf3);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27d6;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27e2;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe1,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x64,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27e7;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27e9;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe2,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x64,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27ee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27ee;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27f0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27f9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x29);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2802(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2802;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2805(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2805;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2808(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2808;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x5d,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xfe,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5e,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x1a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_281a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x281a;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xfe,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x4b);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2829(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2829;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x65);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x35);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2835(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2835;
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x5e,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x5f,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0xff,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x66,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2845(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2845;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x65,0x82);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_284b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x284b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x4b);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2854(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2854;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x69);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2869(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2869;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x4b);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_287f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x287f;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x8b);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_288b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x288b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x62);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x9a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_289a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x289a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_289f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x289f;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x62,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28b1;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xc4);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28c4;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x65,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x65,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x62,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x62,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28e4;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x9a,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x28,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28ea;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x4b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x27,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28ee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28ee;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x68,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x69,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28f5;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28fc;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x1b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2901(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2901;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x61,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2910(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2910;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_291c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x291c;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x04,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_292c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x292c;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x01,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_293e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x293e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2943(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2943;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2947(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2947;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_294c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x294c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2952(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2952;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_295c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x295c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x4b);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2965(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2965;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2968(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2968;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_296b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x296b;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x28,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2976(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2976;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_297d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x297d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2982(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2982;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x61,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2991(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2991;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_299c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x299c;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x02,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29a8;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x03,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29ba;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29c0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29c4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29c9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29cf;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29d9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x4b);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29e2;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29e5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29e8;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x29,0x7d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29f3;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29fa;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29ff;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a0f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a0f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a11;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x01,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a1b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a1b;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x04,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x05,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a26(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a26;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a2d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a2d;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xf7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a2f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a2f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a33(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a33;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a38(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a38;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a3e;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a48(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a48;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x4b);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a51;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a54(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a54;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a57(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a57;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x99,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a61(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a61;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x62,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a67(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a67;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a6c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xb7);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a75;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a7f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a7f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a8d;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a93(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a93;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a9b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a9b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2aa1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2aa1;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2aae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2aae;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x4b);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ab4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ab4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ab7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ab7;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xc4);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ac4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ac4;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd6,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ad2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ad2;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ada(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ada;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ae0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ae0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ae5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ae5;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xb7);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2aee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2aee;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2af8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2af8;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b06(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b06;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b0c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b0c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b14;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b1a;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x2a);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b27;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x4b);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b2d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b2d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b30;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b34(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b34;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x04,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x14,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b38(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b38;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b3a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b3a;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xfc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b3c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b3c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x03,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b40;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b41(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b41;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b44(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b44;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x83,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b52(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b52;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x80,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6a,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b6d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b6d;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b73(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b73;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x85);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b85;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x89,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b87;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b95;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xe6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ba1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ba1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x14,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ba3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ba3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xd0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bb7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bb7;
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x12,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x99,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x84,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xbd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bc8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bc8;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bcf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bcf;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bd5;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x15,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bd9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bd9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x6c,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bee;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bf5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bf5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x83);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c01;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xd6,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::da_a                (aCPU, pc, 0xd4,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe4,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c0a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c0a;
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c0b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c0b;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c17(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c17;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x82,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x83,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c1e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x41);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c21(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c21;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0xb2);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x01);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x40);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2d,0x28);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0xcf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c30;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x20);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2d,0x30);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0xcf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c39;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0xb6);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x67);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c48(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c48;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6a,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x55);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c53;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x26);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x19);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c5f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x18);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x46);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c6b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c6b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x18);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x1f);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c77(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c77;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x38);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x02);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x50);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x23,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c83(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c83;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c86(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c86;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2c89(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2c89;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x2b,0x6d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f00;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x49,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x4a,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xb2,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0x94,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f10(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f10;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xb6,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f20;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xd5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xfe,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f30;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x50,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f40;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xb0,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x08,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xca,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xf7,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xed,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f50;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xef,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x7b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x14,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xa5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x59,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xce,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f60;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xb2,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x94,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x49,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0x4a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f70;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xef,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x59,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xce,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x14,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xa5,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f80;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x96,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x2f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xfe,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x5f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xdf,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f90;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x2f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfe,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x96,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x5a,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fa0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fb0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fc0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fc0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fd0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fd0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fe0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fe0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ff0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ff0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}
const sbt_block_t sbt_rom_code[] = {
	&sbt_block_0000,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0003,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_000b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0013,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_001b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0023,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_002b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0033,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_003b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0043,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_004b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0053,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0056,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0059,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00d1,
	&sbt_exception,
	&sbt_block_00d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0102,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0108,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0112,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0115,
	&sbt_block_0116,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0119,
	&sbt_block_011a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_011d,
	&sbt_block_011e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0121,
	&sbt_block_0122,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0125,
	&sbt_block_0126,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0129,
	&sbt_block_012a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_012d,
	&sbt_block_012e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0131,
	&sbt_block_0132,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0135,
	&sbt_block_0136,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0139,
	&sbt_block_013a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_013d,
	&sbt_block_013e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0141,
	&sbt_block_0142,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0145,
	&sbt_block_0146,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0149,
	&sbt_block_014a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_014d,
	&sbt_block_014e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0151,
	&sbt_block_0152,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0166,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_017e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_018a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0192,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_019c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01c2,
	&sbt_exception,
	&sbt_block_01c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01db,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01f6,
	&sbt_block_01f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0277,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_027f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0295,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02a1,
	&sbt_block_02a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02af,
	&sbt_exception,
	&sbt_block_02b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02d0,
	&sbt_exception,
	&sbt_block_02d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02de,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02e3,
	&sbt_exception,
	&sbt_block_02e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_030a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_030d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0319,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0323,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_032d,
	&sbt_exception,
	&sbt_block_032f,
	&sbt_exception,
	&sbt_block_0331,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0338,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_033b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0340,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0346,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_034c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0350,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0356,
	&sbt_exception,
	&sbt_block_0358,
	&sbt_block_0359,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0388,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03fc,
	&sbt_exception,
	&sbt_block_03fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0402,
	&sbt_exception,
	&sbt_block_0404,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_041b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_042c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_042f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0432,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_043a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_043d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0447,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_044a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0453,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_045c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_045f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0473,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_048a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_048d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0494,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0497,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_049e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04b2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0501,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0504,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0509,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_050c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0511,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0514,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0519,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_051c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0521,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0524,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0529,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_052c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0531,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0534,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0537,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0541,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0544,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_055a,
	&sbt_block_055b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_055e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0561,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0567,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_056a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_056d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0570,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0573,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0576,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0579,
	&sbt_exception,
	&sbt_block_057b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0583,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0586,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_058c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_058f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0592,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0595,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0598,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_059b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_059e,
	&sbt_exception,
	&sbt_block_05a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05c3,
	&sbt_exception,
	&sbt_block_05c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e8,
	&sbt_exception,
	&sbt_block_05ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0601,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0604,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0607,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_060a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_060d,
	&sbt_exception,
	&sbt_block_060f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0617,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_061a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0620,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0623,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0626,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0629,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_062c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_062f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0632,
	&sbt_exception,
	&sbt_block_0634,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_063c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_063f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0645,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0648,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_064b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_064e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0651,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0654,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0657,
	&sbt_exception,
	&sbt_block_0659,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0661,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0664,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_066a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_066d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0670,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0673,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0676,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0679,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_067c,
	&sbt_exception,
	&sbt_block_067e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0686,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_068e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0691,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0696,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0699,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06cd,
	&sbt_block_06ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06f2,
	&sbt_exception,
	&sbt_block_06f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0705,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0708,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_070b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_070e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0711,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0714,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0717,
	&sbt_exception,
	&sbt_block_0719,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0721,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0724,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_072a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_072d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0730,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0733,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0736,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0739,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_073c,
	&sbt_exception,
	&sbt_block_073e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0746,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0749,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_074f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0752,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0755,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0758,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_075b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_075e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0761,
	&sbt_exception,
	&sbt_block_0763,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_076b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_076e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0774,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0777,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_077a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_077d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0780,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0783,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0786,
	&sbt_exception,
	&sbt_block_0788,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0790,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0793,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0799,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_079c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_079f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ab,
	&sbt_exception,
	&sbt_block_07ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07b8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07be,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07d0,
	&sbt_exception,
	&sbt_block_07d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07e5,
	&sbt_exception,
	&sbt_block_07e7,
	&sbt_exception,
	&sbt_block_07e9,
	&sbt_block_07ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07f6,
	&sbt_exception,
	&sbt_block_07f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0800,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0811,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0814,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0817,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_081a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_081d,
	&sbt_exception,
	&sbt_block_081f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0822,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_082b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0831,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0834,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0837,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_083b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_083e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0851,
	&sbt_block_0852,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0855,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0858,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_085b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_085e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0864,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0867,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_086a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_086d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0870,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0873,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0876,
	&sbt_exception,
	&sbt_block_0878,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0880,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0883,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0889,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_088c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_088f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0892,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0895,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0898,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_089b,
	&sbt_exception,
	&sbt_block_089d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08c0,
	&sbt_exception,
	&sbt_block_08c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08e5,
	&sbt_exception,
	&sbt_block_08e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0901,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0904,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0907,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_090a,
	&sbt_exception,
	&sbt_block_090c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0914,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0917,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_091d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0920,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0923,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0926,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0929,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_092c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_092f,
	&sbt_exception,
	&sbt_block_0931,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0939,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0941,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0944,
	&sbt_exception,
	&sbt_block_0946,
	&sbt_exception,
	&sbt_block_0948,
	&sbt_block_0949,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_094c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0952,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0955,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0958,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_095b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_095e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0961,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0964,
	&sbt_exception,
	&sbt_block_0966,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_096e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0971,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0977,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_097a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_097d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0980,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0983,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0986,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0989,
	&sbt_exception,
	&sbt_block_098b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0993,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09b6,
	&sbt_exception,
	&sbt_block_09b8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ea,
	&sbt_block_09eb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ee,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a00,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a03,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a06,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a09,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a0c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a0f,
	&sbt_exception,
	&sbt_block_0a11,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a19,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a1c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a22,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a25,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a28,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a31,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a34,
	&sbt_exception,
	&sbt_block_0a36,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a41,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a47,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a4a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a50,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a56,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a59,
	&sbt_exception,
	&sbt_block_0a5b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a63,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a66,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a6f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a72,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a75,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a78,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a7b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a7e,
	&sbt_exception,
	&sbt_block_0a80,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a88,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a91,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a94,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a97,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aa0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aa3,
	&sbt_exception,
	&sbt_block_0aa5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ab5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ab8,
	&sbt_exception,
	&sbt_block_0aba,
	&sbt_exception,
	&sbt_block_0abc,
	&sbt_block_0abd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0acc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0acf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ad2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ad5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ad8,
	&sbt_exception,
	&sbt_block_0ada,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ae2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ae5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aeb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aee,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0afa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0afd,
	&sbt_exception,
	&sbt_block_0aff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b07,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b0a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b10,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b13,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b16,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b19,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b1c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b1f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b22,
	&sbt_exception,
	&sbt_block_0b24,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b2c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b3d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b40,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b43,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b46,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b49,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b4c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b4f,
	&sbt_exception,
	&sbt_block_0b51,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b54,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b5d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b63,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b66,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b69,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b6d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b70,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b83,
	&sbt_block_0b84,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b87,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b8a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b90,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b96,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b99,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b9c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b9f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ba2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ba5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ba8,
	&sbt_exception,
	&sbt_block_0baa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bb2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bb5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bbb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bbe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bc1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bc4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bc7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bcd,
	&sbt_exception,
	&sbt_block_0bcf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bd7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bda,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bf2,
	&sbt_exception,
	&sbt_block_0bf4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bfc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c05,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c08,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c0b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c0e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c11,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c14,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c17,
	&sbt_exception,
	&sbt_block_0c19,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c21,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c29,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c2c,
	&sbt_exception,
	&sbt_block_0c2e,
	&sbt_exception,
	&sbt_block_0c30,
	&sbt_block_0c31,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c34,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c3a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c3d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c40,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c43,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c46,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c49,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c4c,
	&sbt_exception,
	&sbt_block_0c4e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c56,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c59,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c62,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c65,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c68,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c6b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c6e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c71,
	&sbt_exception,
	&sbt_block_0c73,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c7b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c7e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c84,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c87,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c8a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c90,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c93,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c96,
	&sbt_exception,
	&sbt_block_0c98,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ca0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ca3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ca9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0caf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cbb,
	&sbt_exception,
	&sbt_block_0cbd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cc5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cd6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cd9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cdc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cdf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ce2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ce5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ce8,
	&sbt_exception,
	&sbt_block_0cea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ced,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cf6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cfc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cff,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d02,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d06,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d09,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d1c,
	&sbt_block_0d1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d20,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d23,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d26,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d29,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d2f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d32,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d35,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d38,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d3b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d41,
	&sbt_exception,
	&sbt_block_0d43,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d4e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d54,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d57,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d5a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d5d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d60,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d63,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d66,
	&sbt_exception,
	&sbt_block_0d68,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d70,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d73,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d79,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d7c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d7f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d82,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d85,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d88,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d8b,
	&sbt_exception,
	&sbt_block_0d8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d95,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0da0,
	&sbt_exception,
	&sbt_block_0da2,
	&sbt_exception,
	&sbt_block_0da4,
	&sbt_block_0da5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0da8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0db1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0db4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0db7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dbd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dc0,
	&sbt_exception,
	&sbt_block_0dc2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dcd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ddc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ddf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0de2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0de5,
	&sbt_exception,
	&sbt_block_0de7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0def,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0df2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0df8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dfb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dfe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e01,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e04,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e07,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e0a,
	&sbt_exception,
	&sbt_block_0e0c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e14,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e17,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e20,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e23,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e26,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e29,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e2c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e2f,
	&sbt_exception,
	&sbt_block_0e31,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e39,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e3c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e42,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e45,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e48,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e4e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e51,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e54,
	&sbt_exception,
	&sbt_block_0e56,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e5e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e6f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e72,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e75,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e78,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e7b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e7e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e81,
	&sbt_exception,
	&sbt_block_0e83,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e86,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e8f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e95,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e98,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e9b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e9f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ea2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eb5,
	&sbt_block_0eb6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eb9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ebc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ebf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ec2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ec8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ecb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ece,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eda,
	&sbt_exception,
	&sbt_block_0edc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ee4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ee7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eed,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0efc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eff,
	&sbt_exception,
	&sbt_block_0f01,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f09,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f11,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f14,
	&sbt_exception,
	&sbt_block_0f16,
	&sbt_exception,
	&sbt_block_0f18,
	&sbt_block_0f19,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f1c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f22,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f25,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f28,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f31,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f34,
	&sbt_exception,
	&sbt_block_0f36,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f41,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f47,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f4a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f50,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f56,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f59,
	&sbt_exception,
	&sbt_block_0f5b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f63,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f66,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f6f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f72,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f75,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f78,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f7b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f7e,
	&sbt_exception,
	&sbt_block_0f80,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f88,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f91,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f94,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f97,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fa0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fa3,
	&sbt_exception,
	&sbt_block_0fa5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fbc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fbf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fc2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fc5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fc8,
	&sbt_exception,
	&sbt_block_0fca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fd2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fd5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fdb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fde,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fe1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fe4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fe7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fed,
	&sbt_exception,
	&sbt_block_0fef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ff7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1008,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_100b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_100e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1011,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1014,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1017,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_101a,
	&sbt_exception,
	&sbt_block_101c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_101f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1028,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_102e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1031,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_103d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1040,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1053,
	&sbt_block_1054,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1057,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_105a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_105d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1060,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1063,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1066,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1069,
	&sbt_exception,
	&sbt_block_106b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1073,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_107b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_107e,
	&sbt_exception,
	&sbt_block_1080,
	&sbt_exception,
	&sbt_block_1082,
	&sbt_block_1083,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1086,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_108c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_108f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1092,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1095,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1098,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_109b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_109e,
	&sbt_exception,
	&sbt_block_10a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10c3,
	&sbt_exception,
	&sbt_block_10c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10e8,
	&sbt_exception,
	&sbt_block_10ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1101,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1104,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1107,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_110a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_110d,
	&sbt_exception,
	&sbt_block_110f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1117,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_111a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1120,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1123,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1126,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1129,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_112c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_112f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1132,
	&sbt_exception,
	&sbt_block_1134,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_113c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_113f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1145,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1148,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_114b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_114e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1151,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1154,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1157,
	&sbt_exception,
	&sbt_block_1159,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1161,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1164,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_116a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_116d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1170,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1173,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1176,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1179,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_117c,
	&sbt_exception,
	&sbt_block_117e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1186,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1197,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_119a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_119d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11a3,
	&sbt_exception,
	&sbt_block_11a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11da,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1201,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1209,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1216,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_121e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1221,
	&sbt_exception,
	&sbt_block_1223,
	&sbt_block_1224,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_123e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1242,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1247,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1254,
	&sbt_exception,
	&sbt_block_1256,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_125b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_125f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1262,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1265,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1268,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_126b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_126f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1272,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1275,
	&sbt_exception,
	&sbt_block_1277,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_127a,
	&sbt_exception,
	&sbt_block_127c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_127f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1282,
	&sbt_exception,
	&sbt_block_1284,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1287,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_128a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_128d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1290,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1295,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1298,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12b2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12e5,
	&sbt_exception,
	&sbt_block_12e7,
	&sbt_block_12e8,
	&sbt_block_12e9,
	&sbt_block_12ea,
	&sbt_block_12eb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1305,
	&sbt_exception,
	&sbt_block_1307,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_130a,
	&sbt_exception,
	&sbt_block_130c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_131e,
	&sbt_exception,
	&sbt_block_1320,
	&sbt_exception,
	&sbt_block_1322,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_132a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1332,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_133a,
	&sbt_block_133b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1351,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_135d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1361,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1364,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_136b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1381,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_138d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1391,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1394,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_139b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1403,
	&sbt_block_1404,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_140a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1412,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1417,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_141f,
	&sbt_block_1420,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1426,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_142e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1433,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_143b,
	&sbt_block_143c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1442,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_144a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_144f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1457,
	&sbt_block_1458,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_145e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1466,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_146b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1470,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1473,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_147b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_147e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1481,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1489,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_148c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_148f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1497,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_149a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_149d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14a5,
	&sbt_exception,
	&sbt_block_14a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14da,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14f2,
	&sbt_exception,
	&sbt_block_14f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1505,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1516,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_151a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_151e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1521,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1528,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_152d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1530,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1533,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_153a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_153f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1542,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1545,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_154c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1551,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1554,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1557,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_155e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1563,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1568,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_156b,
	&sbt_block_156c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_156f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1584,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_158d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1590,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1599,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_159c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15c4,
	&sbt_exception,
	&sbt_block_15c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15cc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1606,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_160b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1610,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1613,
	&sbt_block_1614,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1617,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_162c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1632,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1635,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1638,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_163d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1640,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1643,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1646,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1649,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1651,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1654,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1657,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_165f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1662,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1665,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_166d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1670,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1673,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_167b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_167e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1681,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1684,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1687,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_168a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_168d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1690,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1693,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1696,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1699,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_169c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_169f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16cc,
	&sbt_exception,
	&sbt_block_16ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1702,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1706,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_170d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1710,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1717,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_171c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_171f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1722,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1729,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_172e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1731,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1734,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_173b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1740,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1743,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1746,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_174d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1752,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1757,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_175a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_175e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1761,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1767,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1777,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_177a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1783,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1786,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_178f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1792,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1798,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_179b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_179e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17b4,
	&sbt_exception,
	&sbt_block_17b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17eb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17ee,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1800,
	&sbt_block_1801,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1804,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1813,
	&sbt_exception,
	&sbt_block_1815,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_181d,
	&sbt_block_181e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1827,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_182e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1833,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1840,
	&sbt_exception,
	&sbt_block_1842,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1851,
	&sbt_exception,
	&sbt_block_1853,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1858,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1867,
	&sbt_exception,
	&sbt_block_1869,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1878,
	&sbt_exception,
	&sbt_block_187a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1882,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1885,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1890,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_189b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_190d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_191c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_192b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_193a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1949,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1958,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_195d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1962,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1967,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_196c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1971,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1976,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_197b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_197e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1981,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1984,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1993,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1996,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_199d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19af,
	&sbt_exception,
	&sbt_block_19b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19de,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19eb,
	&sbt_exception,
	&sbt_block_19ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19fc,
	&sbt_exception,
	&sbt_block_19fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a03,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a12,
	&sbt_exception,
	&sbt_block_1a14,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a23,
	&sbt_exception,
	&sbt_block_1a25,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a50,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a54,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a5b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a69,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a6c,
	&sbt_exception,
	&sbt_block_1a6e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a73,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a76,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a7a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a7d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a86,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1af5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b0e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b23,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b3a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b56,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b59,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b5c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b66,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b6b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b7a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b80,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b97,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bb0,
	&sbt_exception,
	&sbt_block_1bb2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bc6,
	&sbt_exception,
	&sbt_block_1bc8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bd0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bd8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1be8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bfc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c0c,
	&sbt_exception,
	&sbt_block_1c0e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c24,
	&sbt_exception,
	&sbt_block_1c26,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c29,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c2c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c31,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cb0,
	&sbt_block_1cb1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cc3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ccc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cd9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ce3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cf0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cfa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d07,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d11,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d33,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d39,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d4f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d56,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d70,
	&sbt_exception,
	&sbt_block_1d72,
	&sbt_exception,
	&sbt_block_1d74,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d8e,
	&sbt_exception,
	&sbt_block_1d90,
	&sbt_block_1d91,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1da3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dac,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1db9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dc3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dd0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1de5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1deb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e01,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e05,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e08,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e16,
	&sbt_exception,
	&sbt_block_1e18,
	&sbt_exception,
	&sbt_block_1e1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e28,
	&sbt_exception,
	&sbt_block_1e2a,
	&sbt_block_1e2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e3d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e46,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e53,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e66,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e69,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e6d,
	&sbt_exception,
	&sbt_block_1e6f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e75,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e78,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e87,
	&sbt_exception,
	&sbt_block_1e89,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e97,
	&sbt_exception,
	&sbt_block_1e99,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e9f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ea6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eb0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eb4,
	&sbt_block_1eb5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eb9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ec5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ecb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ed2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ee8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eee,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ef2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ef5,
	&sbt_block_1ef6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1efc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f0d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f1c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f20,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f81,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f84,
	&sbt_block_1f85,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f8e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f94,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f9c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fa4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fac,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fb4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fbc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fc4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fcc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fd5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fda,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fdd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fe0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ff0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2000,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2010,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_201e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_202a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2039,
	&sbt_exception,
	&sbt_block_203b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2045,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_204b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_205a,
	&sbt_exception,
	&sbt_block_205c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2066,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_206c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2083,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2086,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2090,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2098,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_209d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20d5,
	&sbt_exception,
	&sbt_block_20d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2101,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2107,
	&sbt_exception,
	&sbt_block_2109,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_210e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2114,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2117,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_211a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2123,
	&sbt_exception,
	&sbt_block_2125,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2128,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_212b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2131,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2134,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2140,
	&sbt_exception,
	&sbt_block_2142,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2145,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_214b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_214e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2156,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2160,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2177,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_217c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2182,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2185,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2189,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21b2,
	&sbt_exception,
	&sbt_block_21b4,
	&sbt_exception,
	&sbt_block_21b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2202,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_221c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2220,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_222a,
	&sbt_exception,
	&sbt_block_222c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2232,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_223a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_223f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2247,
	&sbt_exception,
	&sbt_block_2249,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_224f,
	&sbt_block_2250,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2255,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2269,
	&sbt_exception,
	&sbt_block_226b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_226e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2273,
	&sbt_exception,
	&sbt_block_2275,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_227f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2284,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_228b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2290,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2297,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_229c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22af,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22b2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22eb,
	&sbt_block_22ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2301,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2306,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_230a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2312,
	&sbt_block_2313,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_231b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2320,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2328,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_232d,
	&sbt_exception,
	&sbt_block_232f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2334,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_233a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_234c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_234f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2355,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2358,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_235d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2366,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_236b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2370,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2373,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_237b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2381,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2386,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_238c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2391,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2396,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23d6,
	&sbt_exception,
	&sbt_block_23d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23ed,
	&sbt_exception,
	&sbt_block_23ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2401,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_240b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2416,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2424,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_242b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2438,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_243d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2449,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2450,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2456,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2463,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2466,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_246a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_246d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2475,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_247e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2495,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2500,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2508,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_250b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_250f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2512,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2518,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_251b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_257e,
	&sbt_exception,
	&sbt_block_2580,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2584,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_259c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_259f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25db,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25de,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25e1,
	&sbt_exception,
	&sbt_block_25e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25f0,
	&sbt_exception,
	&sbt_block_25f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2657,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_265a,
	&sbt_exception,
	&sbt_block_265c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_265f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26bb,
	&sbt_block_26bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26c4,
	&sbt_block_26c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26d1,
	&sbt_exception,
	&sbt_block_26d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2700,
	&sbt_block_2701,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2706,
	&sbt_exception,
	&sbt_block_2708,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_270b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2711,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2717,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2720,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2725,
	&sbt_exception,
	&sbt_block_2727,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_272c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_272f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_274a,
	&sbt_block_274b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2755,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2758,
	&sbt_exception,
	&sbt_block_275a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_275d,
	&sbt_exception,
	&sbt_block_275f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2762,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2765,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2768,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_276b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_276e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2771,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2774,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2777,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_277a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_277d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2780,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2789,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2792,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27a4,
	&sbt_exception,
	&sbt_block_27a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27b8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27e7,
	&sbt_exception,
	&sbt_block_27e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27ee,
	&sbt_exception,
	&sbt_block_27f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2802,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2805,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2808,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_281a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2829,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2835,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2845,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_284b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2854,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2869,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_287f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_288b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_289a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_289f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28ee,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2901,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2910,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_291c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_292c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_293e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2943,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2947,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_294c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2952,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_295c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2965,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2968,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_296b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2976,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_297d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2982,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2991,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_299c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a0f,
	&sbt_exception,
	&sbt_block_2a11,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a1b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a26,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a2d,
	&sbt_exception,
	&sbt_block_2a2f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a33,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a38,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a48,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a51,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a54,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a57,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a61,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a67,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a75,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a7f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a93,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a9b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2aa1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2aae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ab4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ab7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ac4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ad2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ada,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ae0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ae5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2aee,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2af8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b06,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b0c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b14,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b27,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b2d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b34,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b38,
	&sbt_exception,
	&sbt_block_2b3a,
	&sbt_exception,
	&sbt_block_2b3c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b40,
	&sbt_block_2b41,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b44,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b52,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b6d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b73,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b85,
	&sbt_exception,
	&sbt_block_2b87,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b95,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ba1,
	&sbt_exception,
	&sbt_block_2ba3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bb7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bc8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bcf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bd5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bd9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bee,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bf5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c01,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c0a,
	&sbt_block_2c0b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c17,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c21,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c39,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c48,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c53,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c6b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c77,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c83,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c86,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2c89,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f00,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f10,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f20,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f40,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f50,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f60,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f70,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f80,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f90,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fa0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fb0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fc0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fd0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fe0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ff0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
};

extern const uint8_t sbt_rom_data[] = {
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x01,0x01,0x02,0x01,0x02,0x02,0x03,0x01,0x02,0x02,0x03,0x02,0x03,0x03,0x04,
    0x02,0x01,0x00,0x80,0x02,0xec,0x1b,0x02,0x11,0x00,0x80,0x03,0xb1,0x0c,0x03,0x03,
    0xb6,0x07,0x02,0x03,0xc0,0x08,0x00,0x02,0xc1,0x03,0x03,0xc2,0x03,0x03,0x03,0xc5,
    0x4a,0x3e,0x02,0xc7,0x40,0x02,0x26,0x01,0x02,0xf2,0x01,0x10,0xe0,0x3f,0x2a,0x27,
    0x2d,0x26,0x0c,0x53,0xf4,0x3f,0x16,0x1d,0x15,0x0f,0x06,0x00,0x10,0xe1,0x00,0x15,
    0x18,0x11,0x19,0x13,0x2b,0x63,0x40,0x09,0x22,0x2a,0x30,0x39,0x3f,0x02,0x35,0x00,
    0x02,0x13,0x00,0x05,0x2a,0x00,0x00,0x00,0x7f,0x02,0x3a,0x05,0x00,0x01,0x10,0x00,
    0x01,0x28,0x00,0x00,0x01,0x29,0x00,0x00,0x02,0x3d,0x07,0x02,0x3c,0x01,0x02,0x22,
    0x01,0x02,0x21,0x01,0x02,0x31,0x20,0x01,0xe2,0x01,0xe1,0x02,0x23,0x03,0x02,0x26,
    0x0e,0x02,0x27,0x70,0x02,0x20,0x3f,0x00,0x54,0x68,0x75,0x6e,0x64,0x65,0x72,0x00,
    0x63,0x72,0x61,0x63,0x6b,0x65,0x72,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x01,0x02,0x67,0x69,0x6b,0x02,
    0x03,0xff,0xc4,0x02,0xc6,0x00,0xca,0x02,0xcc,0x02,0xd1,0x02,0xd3,0x00,0x02,0x03,
    0xff,0xc8,0x02,0xc6,0x00,0xce,0x02,0xcc,0x02,0xd6,0x02,0xd3,0x00,0x02,0x03,0x00,
    0x00,0xbc,0x00,0xd0,0x00,0xd8,0x04,0x03,0x00,0x00,0xbc,0xbd,0xc7,0x00,0xbf,0x00,
    0x61,0x00,0xd8,0xd4,0xd5,0x05,0x03,0x00,0xbc,0xbd,0xbd,0xbd,0xbe,0xbf,0x00,0x00,
    0x00,0xc0,0xc1,0xc2,0xc2,0xc2,0xc3,0x0f,0x05,0xff,0x00,0x00,0x00,0x00,0x6d,0x08,
    0x6e,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6f,0x06,0x71,0x06,0x73,0x0a,0x75,0x08,
    0x76,0x0a,0x00,0x00,0x78,0x06,0x7a,0x06,0x7c,0x06,0x7e,0x06,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x06,0x82,0x06,0x84,0x06,0x86,0x08,0x87,0x06,
    0x89,0x06,0x8b,0x06,0x8d,0x04,0x8e,0x06,0x90,0x06,0x92,0x06,0x94,0x04,0x95,0x06,
    0x89,0x04,0x97,0x06,0x00,0x00,0x99,0x06,0x9b,0x04,0x9c,0x06,0x9e,0x06,0xa0,0x06,
    0xa2,0x04,0xa3,0x04,0x00,0x00,0x63,0x04,0xa4,0x04,0xa5,0x04,0xa6,0x06,0x00,0x00,
    0x63,0x04,0x00,0x00,0xa8,0x04,0xa9,0x06,0xab,0x04,0xac,0x06,0xae,0x06,0xb0,0x06,
    0xb2,0x06,0x00,0x00,0xb4,0x06,0xb6,0x06,0x89,0x04,0xb8,0x06,0x89,0x04,0xba,0x06,
    0x78,0xff,0x7a,0x00,0x7b,0x00,0x7c,0x49,0x7d,0x4a,0x7e,0xb2,0x7f,0x94,0x22,0x00,
    0x78,0xff,0x7a,0xbf,0x7b,0x25,0x7c,0x80,0x7d,0xfc,0x7e,0xdf,0x7f,0xb6,0x22,0x00,
    0x78,0xff,0x7a,0x80,0x7b,0xfc,0x7c,0xbf,0x7d,0x25,0x7e,0xd5,0x7f,0xfe,0x22,0x00,
    0x78,0x50,0x7a,0x80,0x7b,0xfc,0x7c,0xbf,0x7d,0x25,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0x00,0x7b,0xb0,0x7c,0x08,0x7d,0xca,0x7e,0xf7,0x7f,0xed,0x22,0x00,
    0x78,0xff,0x7a,0xef,0x7b,0x7b,0x7c,0x14,0x7d,0xa5,0x7e,0x59,0x7f,0xce,0x22,0x00,
    0x78,0x00,0x7a,0xff,0x7b,0xff,0x7c,0xb2,0x7d,0x94,0x7e,0x49,0x7f,0x4a,0x22,0x00,
    0x78,0xef,0x7a,0xff,0x7b,0xff,0x7c,0x59,0x7d,0xce,0x7e,0x14,0x7f,0xa5,0x22,0x00,
    0x78,0xff,0x7a,0xdf,0x7b,0x96,0x7c,0x2f,0x7d,0xfe,0x7e,0x5f,0x7f,0xdf,0x22,0x00,
    0x78,0xff,0x7a,0x2f,0x7b,0xfe,0x7c,0xdf,0x7d,0x96,0x7e,0x5a,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x00,0x00,0x08,0x08,0x14,0x14,0x14,0x14,0x08,0x3c,0x03,0x23,0x04,0x0a,0x08,0x08,
    0x10,0x08,0x08,0x10,0x08,0x2a,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,
    0x1c,0x22,0x08,0x0c,0x1c,0x22,0x3e,0x20,0x10,0x18,0x3e,0x02,0x38,0x04,0x3e,0x20,
    0x1c,0x22,0x1c,0x22,0x00,0x00,0x00,0x00,0x10,0x08,0x00,0x00,0x04,0x08,0x1c,0x22,
    0x1c,0x22,0x08,0x14,0x1e,0x22,0x1c,0x22,0x1e,0x22,0x3e,0x02,0x3e,0x02,0x3c,0x02,
    0x22,0x22,0x1c,0x08,0x20,0x20,0x22,0x12,0x02,0x02,0x22,0x36,0x22,0x22,0x1c,0x22,
    0x1e,0x22,0x1c,0x22,0x1e,0x22,0x1c,0x22,0x3e,0x08,0x22,0x22,0x22,0x22,0x22,0x22,
    0x22,0x22,0x22,0x22,0x3e,0x20,0x3e,0x06,0x00,0x02,0x3e,0x30,0x00,0x00,0x00,0x00,
    0x04,0x08,0x00,0x00,0x02,0x02,0x00,0x00,0x20,0x20,0x00,0x00,0x18,0x24,0x00,0x00,
    0x02,0x02,0x08,0x00,0x10,0x00,0x02,0x02,0x0c,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x0c,0x08,0x08,0x0e,0x18,0x00,0x00,0x63,0x77,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x00,0x04,0x00,0x1c,0x00,0x60,0x00,0x60,0x00,0x00,0x00,0x00,0xff,0xff,
    0x01,0x00,0x7f,0x7f,0x40,0x00,0x78,0x3c,0x00,0x00,0xe0,0xc0,0x01,0x03,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x08,0x08,0x14,0x00,0x3e,0x14,0x0a,0x1c,0x10,0x08,0x0a,0x04,0x08,0x00,
    0x04,0x04,0x20,0x20,0x1c,0x08,0x08,0x3e,0x00,0x00,0x00,0x3e,0x00,0x00,0x10,0x08,
    0x32,0x2a,0x08,0x08,0x20,0x18,0x10,0x18,0x14,0x12,0x1e,0x20,0x02,0x1e,0x10,0x08,
    0x22,0x1c,0x22,0x3c,0x08,0x00,0x08,0x00,0x04,0x02,0x3e,0x00,0x10,0x20,0x10,0x08,
    0x2a,0x3a,0x22,0x22,0x22,0x1e,0x02,0x02,0x22,0x22,0x02,0x1e,0x02,0x1e,0x02,0x02,
    0x22,0x3e,0x08,0x08,0x20,0x20,0x0a,0x06,0x02,0x02,0x2a,0x2a,0x26,0x2a,0x22,0x22,
    0x22,0x1e,0x22,0x22,0x22,0x1e,0x02,0x1c,0x08,0x08,0x22,0x22,0x22,0x22,0x22,0x2a,
    0x14,0x08,0x14,0x08,0x10,0x08,0x06,0x06,0x04,0x08,0x30,0x30,0x08,0x14,0x00,0x00,
    0x10,0x00,0x1c,0x20,0x1e,0x22,0x3c,0x02,0x3c,0x22,0x1c,0x22,0x04,0x1e,0x1c,0x22,
    0x1e,0x22,0x0c,0x08,0x18,0x10,0x22,0x12,0x08,0x08,0x36,0x2a,0x1e,0x22,0x1c,0x22,
    0x1e,0x22,0x3c,0x22,0x3a,0x06,0x3c,0x02,0x1e,0x04,0x22,0x22,0x22,0x22,0x22,0x22,
    0x22,0x14,0x22,0x22,0x3e,0x10,0x0c,0x06,0x08,0x08,0x18,0x30,0x06,0x49,0x3e,0x1c,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x40,
    0x00,0xc0,0x0e,0x8f,0x12,0x90,0x2c,0x08,0x3c,0x0f,0x00,0x00,0x06,0x0f,0xff,0x07,
    0x00,0x00,0x7f,0x70,0x00,0x00,0x1e,0x0f,0x00,0x01,0x80,0x00,0x07,0x0f,0x00,0x08,
    0x00,0x3c,0x00,0x24,0x00,0xf8,0x00,0x08,0x00,0x07,0x00,0x04,0x00,0x0f,0x00,0x09,
    0x07,0x07,0x00,0x00,0x70,0x70,0x00,0x00,0x00,0x00,0xe0,0xc0,0x79,0x3f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x78,0x00,0x00,0x00,0x00,
    0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x80,0xc0,0x00,0x00,0xe7,0xc3,0x01,0x03,0x00,0x00,0x0f,0x0f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x3c,0x3c,0x78,0x78,0x3c,0x3c,0xc0,0xc0,0xf3,0xf3,0x00,0x00,
    0xf0,0xe0,0x00,0x81,0x00,0x00,0x0f,0x07,0x00,0x00,0x00,0x00,0xf0,0xf0,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0x0f,0x0f,0x00,0x00,0x3c,0x3c,0x00,0x00,
    0xf0,0xf0,0x00,0x00,0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x60,
    0x06,0x1e,0x60,0xe0,0x00,0xff,0x06,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x60,0x60,0x01,0x00,0xc0,0xc0,0x00,0x00,
    0x60,0x60,0x0e,0x18,0x82,0x04,0xe3,0xc0,0xff,0xff,0x03,0x01,0x00,0x00,0x80,0x00,
    0xe0,0xc0,0x00,0x00,0x00,0x00,0x1e,0x1e,0x78,0xf8,0x00,0xff,0x00,0xff,0x1e,0x1f,
    0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xf8,0x7c,0x7f,0xff,0x00,0x01,0x00,0x00,
    0x80,0xc0,0x07,0x03,0xc0,0x80,0x07,0x07,0x78,0xf8,0x00,0x00,0x00,0x00,0xf8,0x78,
    0xe0,0x80,0xbf,0xff,0x0f,0x07,0xbf,0xff,0x00,0x00,0x00,0x80,0xff,0xff,0x00,0x01,
    0x00,0x80,0x3f,0x1f,0xfc,0xf8,0x00,0x01,0xe0,0xc0,0x07,0x0f,0x00,0x00,0xe0,0xf0,
    0x07,0x07,0x00,0x00,0x70,0x70,0x00,0x00,0x00,0x00,0x80,0x00,0x1f,0x0f,0x00,0xff,
    0x00,0x01,0x00,0xff,0x00,0x80,0x00,0xbc,0x00,0xa4,0x78,0xff,0x00,0xf7,0x00,0x14,
    0x0f,0xff,0x00,0x80,0x00,0xfc,0x00,0x04,0x00,0xff,0x00,0xf3,0x00,0x12,0x00,0x0f,
    0x00,0x08,0xe0,0xf0,0x00,0x00,0x81,0x00,0x07,0x0f,0x00,0x00,0x0f,0xff,0x00,0x00,
    0x00,0xff,0x00,0x80,0x3c,0x3c,0x78,0x78,0x3c,0xfc,0xc0,0xff,0xf3,0xf3,0x00,0x00,
    0xc0,0x80,0xc3,0xe7,0x00,0x00,0x03,0x01,0x00,0xff,0x00,0x01,0xf0,0xff,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0x0f,0xff,0x00,0x80,0x3c,0xfc,0x00,0x00,
    0xf0,0xf3,0x00,0x02,0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x60,
    0x1e,0x1e,0xc0,0x00,0xff,0x00,0x03,0x00,0x00,0x60,0x00,0x10,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x68,0x6c,0x00,0x00,0xc0,0xc0,0x00,0x00,
    0x68,0x6c,0x30,0x60,0x08,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0xc0,0x00,0x03,0x1e,0x1e,0xf0,0xf0,0xff,0xff,0xff,0xff,0x0f,0x0f,
    0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x1e,0xfc,0xf0,0x07,0x1f,0x00,0x00,
    0xc0,0xe0,0x03,0x01,0xc0,0xc0,0x07,0x03,0xf8,0xf0,0x03,0x0f,0x00,0x00,0x7c,0x3c,
    0x00,0x00,0xfe,0xf8,0x07,0x03,0xfe,0xf8,0x00,0x00,0xc0,0xe0,0xff,0xe7,0x03,0x07,
    0xc0,0xe0,0x0f,0x07,0xf0,0xe0,0x03,0x07,0x80,0x00,0x1f,0x3f,0x00,0x00,0xf8,0xfc,
    0x07,0x03,0xe7,0xff,0xff,0xff,0x07,0x01,0xff,0xff,0xff,0xff,0xe0,0x80,0xf8,0xf8,
    0x1f,0x1f,0x00,0x00,0x00,0x00,0xf8,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x80,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x01,0xfc,0xfc,0xc0,0xc0,0x3f,0x3f,
    0x00,0x00,0xfc,0xfc,0x03,0x03,0xfe,0xf8,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x7f,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0xe0,0xff,0xff,0xff,0xff,0x3f,0xff,
    0x00,0x00,0xfe,0xfe,0x03,0x03,0xfc,0xf0,0x00,0x00,0x3f,0x3f,0xfc,0xf0,0x3f,0x3f,
    0x00,0x00,0x00,0x00,0xfc,0xfc,0x0f,0x0f,0x00,0x00,0x00,0x00,0xc0,0xc0,0xff,0xff,
    0xfe,0xfc,0xff,0xff,0x0f,0x3f,0x00,0x00,0xff,0xfc,0xcf,0xff,0xff,0xff,0x00,0x00,
    0xff,0xf8,0x07,0x01,0xff,0xf8,0x00,0x00,0x00,0x80,0xff,0xff,0xff,0xff,0x00,0x01,
    0x1f,0x0f,0xf8,0xf0,0x00,0x80,0x00,0x01,0xfe,0xfe,0x1f,0x0f,0xf8,0xf0,0x7f,0x7f,
    0xfc,0xfc,0x3f,0x7f,0x00,0x00,0x00,0x00,0xfc,0xfe,0x3f,0x3f,0xfe,0xfc,0x7f,0x3f,
    0x7f,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x01,0x00,0xff,0xff,0xff,0xff,0x01,0x00,0xff,0xff,0xff,0xff,0x80,0x00,0xf8,0xf8,
    0x1f,0xff,0x00,0x00,0x00,0xff,0xf8,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x80,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0x01,0x03,0xfc,0xfc,0xc0,0xc0,0xff,0xff,
    0xff,0xff,0xff,0xff,0x03,0x03,0x00,0x00,0x00,0x00,0xf8,0xfe,0x03,0x0f,0x00,0x00,
    0x00,0x00,0x00,0x00,0xf8,0xfe,0x03,0x0f,0xf0,0xf0,0xff,0x1f,0xff,0xff,0xff,0xff,
    0x00,0x00,0xff,0xff,0x01,0x01,0xc0,0x00,0x03,0x07,0x1f,0x1f,0xe0,0xe0,0x3f,0x3f,
    0x00,0x00,0x00,0x00,0xfe,0xfe,0x07,0x07,0x00,0x03,0x00,0x00,0xe0,0xe0,0x7f,0x7f,
    0xf0,0xc0,0xff,0xff,0xff,0xff,0x00,0x00,0xf0,0xc0,0xff,0xff,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0xe0,0xff,0xff,0xff,0xff,0x03,0x07,
    0x07,0x03,0xe0,0xc0,0xc0,0xe0,0x03,0x07,0xff,0xff,0x07,0x03,0xe0,0xc0,0xff,0xff,
    0xf8,0xf0,0xff,0xff,0x00,0x01,0x00,0x80,0xff,0xff,0x1f,0x0f,0xf8,0xf0,0x1f,0x0f,
    0x0f,0x03,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x00,0x00,0x08,0x00,0x00,0x00,0x3e,0x14,0x28,0x1e,0x04,0x62,0x2a,0x12,0x00,0x00,
    0x04,0x08,0x20,0x10,0x1c,0x2a,0x08,0x08,0x10,0x10,0x00,0x00,0x00,0x00,0x04,0x02,
    0x26,0x22,0x08,0x08,0x04,0x02,0x20,0x22,0x3e,0x10,0x20,0x22,0x22,0x22,0x04,0x04,
    0x22,0x22,0x20,0x10,0x08,0x00,0x08,0x08,0x04,0x08,0x3e,0x00,0x10,0x08,0x08,0x00,
    0x1a,0x02,0x3e,0x22,0x22,0x22,0x02,0x22,0x22,0x22,0x02,0x02,0x02,0x02,0x32,0x22,
    0x22,0x22,0x08,0x08,0x20,0x22,0x0a,0x12,0x02,0x02,0x22,0x22,0x32,0x22,0x22,0x22,
    0x02,0x02,0x2a,0x12,0x0a,0x12,0x20,0x22,0x08,0x08,0x22,0x22,0x22,0x14,0x2a,0x36,
    0x14,0x22,0x08,0x08,0x04,0x02,0x06,0x06,0x10,0x20,0x30,0x30,0x22,0x00,0x00,0x00,
    0x00,0x00,0x3c,0x22,0x22,0x22,0x02,0x02,0x22,0x22,0x3e,0x02,0x04,0x04,0x22,0x3c,
    0x22,0x22,0x08,0x08,0x10,0x10,0x0e,0x12,0x08,0x08,0x2a,0x2a,0x22,0x22,0x22,0x22,
    0x22,0x1e,0x22,0x3c,0x02,0x02,0x1c,0x20,0x04,0x24,0x22,0x32,0x22,0x14,0x2a,0x2a,
    0x08,0x14,0x22,0x3c,0x08,0x04,0x0c,0x0c,0x08,0x08,0x18,0x18,0x30,0x00,0x3e,0x77,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x90,0x3c,
    0xf0,0x3c,0xd8,0x78,0x20,0x40,0x01,0x00,0x01,0x00,0x80,0xc0,0x1f,0x3f,0x07,0x07,
    0x00,0x00,0x70,0x70,0x00,0x00,0x1e,0x3c,0x00,0x00,0x80,0xc0,0x07,0x03,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0xf8,0xf8,0x00,0x00,0x07,0x07,0x00,0x00,0x0f,0x0f,0x00,0x00,
    0x00,0x00,0x08,0x00,0x00,0x00,0x14,0x00,0x08,0x00,0x60,0x00,0x2c,0x00,0x00,0x00,
    0x10,0x00,0x08,0x00,0x08,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x1c,0x00,0x1c,0x00,0x3e,0x00,0x1c,0x00,0x10,0x00,0x1c,0x00,0x1c,0x00,0x04,0x00,
    0x1c,0x00,0x0e,0x00,0x00,0x00,0x04,0x00,0x10,0x00,0x00,0x00,0x04,0x00,0x08,0x00,
    0x3c,0x00,0x22,0x00,0x1e,0x00,0x1c,0x00,0x1e,0x00,0x3e,0x00,0x02,0x00,0x3c,0x00,
    0x22,0x00,0x1c,0x00,0x1c,0x00,0x22,0x00,0x3e,0x00,0x22,0x00,0x22,0x00,0x1c,0x00,
    0x02,0x00,0x2c,0x00,0x22,0x00,0x1c,0x00,0x08,0x00,0x1c,0x00,0x08,0x00,0x22,0x00,
    0x22,0x00,0x08,0x00,0x3e,0x00,0x3e,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x00,0x7f,
    0x00,0x00,0x3c,0x00,0x1e,0x00,0x3c,0x00,0x3c,0x00,0x3c,0x00,0x04,0x00,0x20,0x1c,
    0x22,0x00,0x1c,0x00,0x12,0x0c,0x22,0x00,0x1c,0x00,0x22,0x00,0x22,0x00,0x1c,0x00,
    0x02,0x02,0x20,0x20,0x02,0x00,0x1e,0x00,0x18,0x00,0x2c,0x00,0x08,0x00,0x36,0x00,
    0x22,0x00,0x20,0x1c,0x3e,0x00,0x38,0x00,0x08,0x08,0x0e,0x00,0x00,0x00,0x63,0x00,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x10,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0xe0,0xf0,0x79,0xf0,0x07,0x07,
    0x00,0x00,0x70,0x70,0x00,0x00,0x78,0xf0,0x00,0x00,0xe0,0xf0,0x01,0x00,0x00,0x00,
    0x3c,0x00,0x24,0x00,0xf8,0x78,0x00,0x00,0x07,0x00,0x04,0x00,0x0f,0x0f,0x00,0x00,
    0xff,0xff,0x00,0x00,0x7f,0x7f,0x00,0x00,0x18,0x3c,0x18,0x00,0x06,0x00,0xff,0xff,
    0x00,0x00,0xff,0xff,0x00,0x00,0xbc,0xbc,0x00,0x00,0xff,0xff,0xf7,0xf7,0x00,0x00,
    0xff,0xff,0x00,0x00,0xfc,0xfc,0x00,0x00,0xff,0xff,0xf3,0xf3,0x00,0x00,0x0f,0x0f,
    0x00,0x00,0x78,0x3c,0x00,0x04,0x00,0x00,0x1e,0x3c,0x00,0x20,0xff,0xff,0x00,0x00,
    0xff,0xff,0x00,0x00,0x3c,0x3c,0x78,0x78,0xfc,0xfc,0xff,0xff,0xf3,0xf3,0x00,0x00,
    0x00,0x00,0xff,0x7e,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0xff,0xff,0x00,0x00,0xfc,0xfc,0x00,0x00,
    0xf3,0xf3,0x00,0x00,0x0f,0x0f,0x00,0x00,0x00,0xc0,0x00,0xff,0x00,0x03,0x60,0x60,
    0x1e,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x18,0x08,0x04,0x00,0xc0,0x00,0x01,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x68,0x60,0x00,0x00,0xc0,0xc0,0x00,0x00,
    0x68,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0xf0,0xf0,0x0f,0x0f,0x1e,0x1e,0xc0,0x00,0xff,0xe0,0xff,0x01,0x03,0x00,
    0xff,0x00,0x00,0xe0,0x00,0x01,0x00,0x00,0x1e,0x0f,0xc0,0x00,0x7f,0xff,0x00,0x01,
    0xe0,0xf0,0x01,0x00,0xe0,0xe0,0x03,0x01,0xe0,0x80,0x3f,0xff,0x00,0x00,0x3e,0x1e,
    0x00,0x00,0xe0,0x00,0x01,0x00,0xe0,0x00,0x00,0x00,0xf0,0xf8,0xc3,0x81,0x0f,0x1f,
    0xe0,0xf0,0x03,0x01,0xc0,0x80,0x07,0x0f,0x00,0x00,0x7e,0xfc,0x00,0x00,0x7e,0x3f,
    0xff,0x00,0x01,0x00,0x7f,0x00,0x40,0x00,0x7e,0xff,0x00,0x00,0x00,0x00,0xff,0x0f,
    0x00,0x00,0xff,0x00,0x80,0x00,0xbc,0x3c,0x80,0x00,0xff,0x78,0xf7,0x00,0x14,0x00,
    0xff,0x0f,0x80,0x00,0xfc,0x3c,0x00,0x00,0xff,0xc0,0xf3,0xf3,0x00,0x00,0x0f,0x0f,
    0x00,0x00,0x3c,0x78,0x04,0x00,0x00,0x00,0x3c,0x1e,0x20,0x00,0xff,0x00,0x01,0x00,
    0xff,0xf0,0x00,0x00,0x3c,0x3c,0x78,0x78,0xfc,0x3c,0xff,0x00,0xf3,0xf0,0x02,0x00,
    0x00,0x00,0x3c,0x18,0x00,0x18,0x00,0x00,0xff,0x00,0x01,0x00,0xff,0x00,0x80,0x00,
    0x3c,0x00,0x24,0x00,0x78,0x00,0x48,0x00,0xff,0x00,0x81,0x00,0xfc,0x00,0x04,0x00,
    0xf3,0x00,0x12,0x00,0x0f,0x00,0x08,0x00,0xe0,0x60,0xff,0x00,0x07,0x06,0x60,0x60,
    0x1e,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0xc6,0x82,0x48,0xe3,0x61,0x03,0x03,
    0x00,0xc0,0x80,0x40,0xc6,0xc6,0x00,0x48,0x60,0x61,0x01,0x00,0xc0,0xc0,0x00,0x40,
    0x60,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0xf8,0x78,0x1f,0x1e,0x1e,0x1e,0x00,0x00,0xf0,0xf8,0x07,0x1f,0x00,0x00,
    0x00,0x00,0xf0,0xf8,0x07,0x1f,0x00,0x80,0x0f,0x07,0x00,0x00,0xfc,0xf0,0x03,0x07,
    0xf0,0xf8,0x00,0x00,0xf0,0xf0,0x01,0x00,0x00,0x00,0xfe,0xf8,0x03,0x0f,0x1f,0x0f,
    0x00,0x00,0x18,0x7e,0x00,0x00,0x00,0x00,0x18,0x7e,0xfc,0x7e,0x00,0x00,0x3f,0x7e,
    0xf0,0xe0,0x01,0x03,0x80,0xc0,0x0f,0x07,0x00,0x00,0xf8,0xf0,0x81,0xc3,0x1f,0x0f,
    0x00,0x00,0x7e,0x18,0xff,0x1f,0x00,0x00,0xff,0x00,0xff,0xf8,0x00,0x00,0xf8,0xf8,
    0xff,0xff,0x00,0x01,0xff,0xff,0xff,0xff,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
    0xc0,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0x03,0x03,0xfc,0xfc,0xc0,0x80,0xff,0xff,
    0xff,0xff,0xff,0xff,0x03,0x01,0x00,0x00,0x00,0x80,0xff,0xff,0x3f,0xff,0x00,0x00,
    0x00,0x00,0x00,0x80,0xff,0xff,0x3f,0xff,0xf8,0xf8,0x1f,0x0f,0xfc,0xf0,0xff,0xff,
    0x80,0x80,0xff,0xff,0x00,0x00,0x00,0x00,0x0f,0x1f,0x0f,0x0f,0xf0,0xf0,0x3f,0x1f,
    0x80,0x80,0x00,0x00,0xff,0xff,0x03,0x03,0x0f,0x3f,0x00,0x00,0xf0,0xf0,0x3f,0x3f,
    0x00,0x00,0xff,0xfc,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x3f,0x3f,0xc0,0xf0,
    0x03,0x0f,0x00,0x00,0x00,0x00,0x03,0x0f,0xf0,0xf8,0xff,0xff,0xff,0xff,0x0f,0x1f,
    0x01,0x00,0x80,0x00,0xf0,0xf8,0x0f,0x1f,0xff,0xff,0x03,0x07,0xc0,0xe0,0xff,0xff,
    0xe0,0xc0,0xff,0xff,0x03,0x07,0xc0,0xe0,0xff,0xff,0x07,0x03,0xe0,0xc0,0x07,0x03,
    0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x1f,0x1f,0x00,0x00,0x00,0x00,0xf8,0xf8,0x00,0x00,0xf8,0xf8,
    0xff,0xff,0x01,0x07,0xff,0xff,0xff,0xff,0x80,0xe0,0xf8,0xfe,0xff,0xff,0x1f,0x7f,
    0xc0,0xc0,0x3f,0x3f,0x00,0x00,0xfc,0xfc,0x03,0x03,0xfc,0xfc,0x80,0x00,0xff,0xff,
    0xff,0xff,0xff,0xff,0x01,0x00,0x00,0x00,0xc0,0xc0,0xff,0xff,0xff,0xff,0x03,0x0f,
    0x00,0x00,0xc0,0xc0,0xff,0xff,0xff,0xff,0xfc,0xfc,0x07,0x07,0xc0,0x00,0xff,0xff,
    0xc0,0xc0,0x7f,0x7f,0x00,0x00,0x00,0x00,0x1f,0x3f,0x07,0x07,0xf8,0xf8,0x1f,0x1f,
    0x80,0xc0,0x80,0x80,0xff,0xff,0x01,0x01,0xff,0xff,0x00,0x03,0xf8,0xf8,0x1f,0x1f,
    0x00,0x00,0xf0,0xc0,0xff,0xff,0x80,0x83,0x00,0x00,0xff,0xff,0x1f,0x0f,0xfc,0xfe,
    0x3f,0x7f,0x00,0x00,0x00,0x00,0x3f,0x7f,0xfc,0xfe,0x7f,0x3f,0xfe,0xfc,0x3f,0x7f,
    0x00,0x00,0x00,0x00,0xfc,0xfc,0x3f,0x3f,0xfe,0xfe,0x0f,0x1f,0xf0,0xf8,0x7f,0x7f,
    0x80,0x00,0xff,0xff,0x0f,0x1f,0xf0,0xf8,0xff,0xff,0x01,0x00,0x80,0x00,0x01,0x00,
    0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
};
};  // namespace CPU
};  // namespace Cube
