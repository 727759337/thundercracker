/* -*- mode: C; c-basic-offset: 4; intent-tabs-mode: nil -*-
 *
 * Data for the Thundercracker emulator.
 * This file is AUTOMATICALLY GENERATED.
 *
 * Copyright <c> 2011 Sifteo, Inc. All rights reserved.
 */

#include <stdint.h>
#include <cube_cpu_opcodes.h>

namespace Cube {
namespace CPU {

static int FASTCALL sbt_exception(em8051 *aCPU) {
	except(aCPU, EXCEPTION_SBT);
	return 1;
}

static int FASTCALL sbt_block_0000(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0000;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x55,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x81,0xd7);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x00,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0003(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0003;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_000b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x000b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0013(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0013;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_001b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x001b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0x64);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0023(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0023;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_002b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x002b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0x72);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0033(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0033;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_003b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x003b;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0043(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0043;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_004b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x004b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0053(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0053;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0x88);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0056(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0056;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0059(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0059;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x21,0x61);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x2e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x23,0x0f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c6;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xaf,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0x6c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00cb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x49);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00ce;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00d1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00d3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x90,0x0c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00dc;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x93,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x94,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00e5;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x96,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x52);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x53);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x30);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x31);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x35);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x37);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00fb;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0102(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0102;
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x49,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0108(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0108;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3c,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x01,0x12);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0112(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0112;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0115(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0115;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0116(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0116;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xad);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0119(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0119;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1c,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0121(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0121;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0122(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0122;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1b,0xdf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0125(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0125;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0126(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0126;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1c,0x79);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0129(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0129;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0131(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0131;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0132(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0132;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0135(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0135;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0136(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0136;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xcb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0139(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0139;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0141(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0141;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0142(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0142;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0145(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0145;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0146(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0146;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0149(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0149;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0151(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0151;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0152(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0152;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0166(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0166;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x1b,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_017e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x017e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_018a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x018a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1a,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0192(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0192;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_019c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x019c;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x0f,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01a0;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01b0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01bc;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1c,0x80);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c2;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xdc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c8;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01db;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01e7;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1c,0x80);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01ec;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01f6;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01f7;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfa);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfb);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1c,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6d,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x03,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x07,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x19,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x19,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x18,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x1c,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1a,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x12,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9c,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1b,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0277(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0277;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_027f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x027f;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x24,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1d,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x88,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1e,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0295(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0295;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1d,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x78,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1e,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xfd,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02a1;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02a2;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ac;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02af;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b1;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b9;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02bd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02c0;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ca;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02cd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x88);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d0;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d2;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d5;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02da;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02de;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02e3;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02e5;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x2f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ed;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02f1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02f4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x5c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02fa;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xa8,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x83,0x03);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe9,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_030a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x030a;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_030d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x030d;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xea,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xeb,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xec,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x00,0x1f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0319(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0319;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x27,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x28,0x85);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x22,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0323(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0323;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe9,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_032d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x032d;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_032f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x032f;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xf2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0331(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0331;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0338(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0338;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x01,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_033b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x033b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x22,0xef);
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0340(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0340;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x27,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x28,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0346(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0346;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x05,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe9,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_034c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x034c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xea,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0350(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0350;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xeb,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x01,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0356(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0356;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0358(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0358;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0359(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0359;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x01,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x83,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2a,0xde);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x59,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x59,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x01,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0388(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0388;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xf8);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xf9);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x26,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x25,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9a,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x02,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xe1,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x03,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xe2,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x04,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x1c,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x23,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x24,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x01,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03dc;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9c,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x22,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x01,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03e6;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03e9;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x22,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03ed;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x27,0x88);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x28,0x02);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x26,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03f9;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03fb;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x26,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03ff;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0401(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0401;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xa8,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0418(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0418;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x82,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x27,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x27,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x28,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x28,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0429(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0429;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x28,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_042c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x042c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_042f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x042f;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x25,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x25,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0437(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0437;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_043a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x043a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x26,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0444(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0444;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x04,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0447(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0447;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xea,0x83);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0450(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0450;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x84,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x27,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x85,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0459(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0459;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_045c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x045c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0470(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0470;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0487(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0487;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_048a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x048a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0491(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0491;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0494(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0494;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_049b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x049b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_049e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x049e;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04a5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04a8;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04af;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04b2;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04b9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04bc;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04c3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04c6;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04cd;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04e1;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04f6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04f9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04fe;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0501(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0501;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0506(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0506;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0509(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0509;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_050e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x050e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0511(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0511;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0516(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0516;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0519(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0519;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_051e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x051e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0521(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0521;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0526(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0526;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0529(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0529;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_052e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x052e;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0531(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0531;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0534(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0534;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_053e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x053e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0541(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0541;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0557(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0557;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0558(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0558;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_055b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x055b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_055e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x055e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0564(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0564;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0567(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0567;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_056a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x056a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x8e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_056d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x056d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0570(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0570;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0573(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0573;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0576(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0576;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0578(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0578;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0580(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0580;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0583(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0583;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0589(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0589;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_058c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x058c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_058f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x058f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x8e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0592(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0592;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0595(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0595;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0598(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0598;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_059b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x059b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_059d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x059d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05a5;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05a8;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05ae;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x8e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05c0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05c2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05ca;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05cd;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x8e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05dc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05df;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e7;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05ef;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05f2;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05f8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05fb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05fe;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x8e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0601(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0601;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0604(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0604;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0607(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0607;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_060a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x060a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_060c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x060c;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0614(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0614;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0617(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0617;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_061d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x061d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0620(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0620;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0623(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0623;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x8e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0626(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0626;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0629(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0629;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_062c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x062c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_062f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x062f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0631(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0631;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0639(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0639;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_063c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x063c;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0642(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0642;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0645(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0645;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0648(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0648;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x8e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_064b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x064b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_064e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x064e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0651(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0651;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0654(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0654;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0656(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0656;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_065e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x065e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0661(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0661;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0667(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0667;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_066a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x066a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_066d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x066d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x8e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0670(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0670;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0673(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0673;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0676(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0676;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0679(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0679;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_067b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x067b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0683(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0683;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_068b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x068b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x05,0x34);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_068e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x068e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0693(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0693;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0696(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0696;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06aa;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0xd1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ad;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b0;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b7;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xcc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ca;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06cb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ce;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x07,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d4;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d7;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06dd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ec;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ef;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06f1;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06f9;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06fc;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0702(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0702;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0705(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0705;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0708(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0708;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_070b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x070b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_070e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x070e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0711(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0711;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0714(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0714;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0716(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0716;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_071e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x071e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0721(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0721;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0727(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0727;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_072a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x072a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_072d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x072d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0730(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0730;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0733(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0733;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0736(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0736;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0739(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0739;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_073b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x073b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0743(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0743;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0746(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0746;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_074c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x074c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_074f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x074f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0752(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0752;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0755(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0755;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0758(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0758;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_075b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x075b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_075e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x075e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0760(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0760;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0768(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0768;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_076b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x076b;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0771(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0771;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0774(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0774;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0777(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0777;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_077a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x077a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_077d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x077d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0780(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0780;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0783(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0783;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0785(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0785;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_078d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x078d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0790(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0790;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0796(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0796;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0799(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0799;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_079c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x079c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_079f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x079f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07a2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07a5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07a8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07aa;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07b2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07b5;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07bb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07be;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07c1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x17);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07c4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07c7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ca;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07cd;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07cf;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07d7;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07df;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e2;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e4;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e6;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ed;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07fd;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_080e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x080e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0xd1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0811(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0811;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0814(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0814;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0xad);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0817(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0817;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_081a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x081a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xbb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_081c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x081c;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_081f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x081f;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0828(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0828;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_082e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x082e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x55);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0831(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0831;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0834(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0834;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0838(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0838;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_083b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x083b;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_084e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x084e;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_084f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x084f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0852(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0852;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0855(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0855;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0858(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0858;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_085b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x085b;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0861(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0861;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0864(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0864;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0867(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0867;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xaa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_086a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x086a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_086d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x086d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0870(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0870;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0873(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0873;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0875(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0875;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_087d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x087d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0880(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0880;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0886(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0886;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0889(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0889;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_088c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x088c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xaa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_088f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x088f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0892(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0892;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0895(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0895;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0898(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0898;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_089a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x089a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08a2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08a5;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ab;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ae;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08b1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xaa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08b4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08b7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08bd;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08bf;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08c7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ca;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xaa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08dc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08df;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08e2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08e4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ec;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ef;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08f5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08f8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08fb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xaa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08fe;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0901(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0901;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0904(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0904;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0907(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0907;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0909(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0909;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0911(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0911;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0914(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0914;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_091a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x091a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_091d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x091d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0920(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0920;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xaa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0923(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0923;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0926(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0926;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0929(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0929;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_092c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x092c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_092e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x092e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0936(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0936;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_093e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x093e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0941(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0941;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0943(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0943;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0945(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0945;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0946(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0946;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0949(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0949;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_094f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x094f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0952(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0952;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0955(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0955;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xb0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0958(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0958;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_095b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x095b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_095e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x095e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0961(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0961;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0963(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0963;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_096b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x096b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_096e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x096e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0974(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0974;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0977(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0977;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_097a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x097a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xb0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_097d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x097d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0980(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0980;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0983(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0983;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0986(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0986;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0988(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0988;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0990(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0990;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09a1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x55);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09a4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09a7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09aa;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ad;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x36);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b5;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b8;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09c1;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09c7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xee);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ca;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09cd;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d4;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09e7;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09e8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09eb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ee;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09f1;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09f4;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09fa;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09fd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a00;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a03(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a03;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a06(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a06;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a09;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a0c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a0c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a0e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a0e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a16;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a19(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a19;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a1f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a1f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a22(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a22;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a25;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a28(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a28;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a2b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a2e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a31;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a33(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a33;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a3b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a3b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a3e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a44(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a44;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a47(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a47;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a4a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a4a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a4d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a50;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a53;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a56;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a58(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a58;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a60;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a63;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a69;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a6c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a6f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a6f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a72;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a75;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a78;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a7b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a7b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a7d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a7d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a85;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a88;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a8e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a91(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a91;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a94(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a94;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a97(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a97;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a9a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a9d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aaa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aaa;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ab2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ab2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ab5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ab5;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ab7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ab7;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ab9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ab9;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aba;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0abd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0abd;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x49);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0acc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0acc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0acf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0acf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad7;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0adf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0adf;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ae2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ae2;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ae8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ae8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aeb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aeb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aee;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x49);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0afa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0afa;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0afc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0afc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b04;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b07;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b0d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b0d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b10(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b10;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b13(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b13;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x49);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b16;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b19(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b19;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b1c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b1c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b1f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b1f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b21(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b21;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b29(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b29;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b3a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b3a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xee);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b3d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b3d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b40;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xca);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b43;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b46;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0xaa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b49(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b49;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b4c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b4c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b4e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b4e;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b51;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b5a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b5a;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b60;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b63;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b66;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b6a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b6a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b6d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b6d;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b80;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b81;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b84(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b84;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x2e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b87;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b8a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b8a;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b8d;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b93(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b93;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b96(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b96;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b99(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b99;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xdc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b9c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b9c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b9f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba7;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0baf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0baf;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bb2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bb2;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bb8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bb8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bbb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bbb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bbe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bbe;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xdc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bca;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bcc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bcc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bd4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bd4;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bd7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bd7;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bdd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bdd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xdc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bec;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bef;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bf1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bf1;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bf9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bf9;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bfc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bfc;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c02(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c02;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c05(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c05;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c08(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c08;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xdc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c0b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c0b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c0e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c0e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c11;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c14;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c16;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c1e;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c26(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c26;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c29(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c29;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c2b;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c2d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c2d;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c2e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c31;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c37(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c37;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c3a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c3a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c3d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c3d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c40;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c43;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c46;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c49(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c49;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c4b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c53;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c56;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c5c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c5c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c5f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c62(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c62;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c65(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c65;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c68;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c6b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c6b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c6e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c6e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c70;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c78;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c7b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c7b;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c81;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c84(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c84;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c87;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c8a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c8a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c8d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c90;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c93(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c93;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c95;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c9d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca0;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cac;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0caf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0caf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cba;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cc2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cc2;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cd3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cd3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cd6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cd6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cd9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cd9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x63);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cdc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cdc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cdf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cdf;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ce2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ce2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ce5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ce5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ce7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ce7;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cea;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cf3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cf3;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cf9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cf9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cfc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cfc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cff;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d03(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d03;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d06(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d06;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d19(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d19;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d1a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d1d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d20;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d23(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d23;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d26(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d26;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d2c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d2c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d2f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d2f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d32(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d32;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x75);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d35(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d35;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d38(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d38;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d3b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d3b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d3e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d40;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d48(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d48;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d4b;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d51;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d54(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d54;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d57(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d57;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x75);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d5a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d5a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d5d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d5d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d60;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d63;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d65(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d65;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d6d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d6d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d70;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d76(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d76;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d79(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d79;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d7c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d7c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x75);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d7f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d7f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d82(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d82;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d85;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d88;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d8a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d8a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d92(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d92;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d9a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d9d;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d9f;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da1;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da5;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dab;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dae;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x7b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dbd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dbd;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dbf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dbf;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dc7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dc7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dca;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x7b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ddc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ddc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ddf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ddf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0de2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0de2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0de4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0de4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dec;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0def(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0def;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0df5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0df5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0df8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0df8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dfb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dfb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x7b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dfe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dfe;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e01;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e04;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e07;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e09;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e11;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e14;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e1a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e1d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e20;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x7b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e23(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e23;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e26(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e26;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e29(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e29;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e2c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e2c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e2e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e36;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e39;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e3f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e3f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e42(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e42;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e45(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e45;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x7b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e48(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e48;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e4b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e4e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e4e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e51;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e53;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e5b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e5b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e6c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e6f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e6f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e72;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e75;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e78;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x92);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e7b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e7b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e7e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e80;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e83(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e83;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e8c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e8c;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e92(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e92;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e95;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e98(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e98;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e9c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e9c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e9f;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eb2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eb2;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eb3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eb3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eb6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eb6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0f,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eb9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eb9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ebc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ebc;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ebf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ebf;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ec5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ec5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ec8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ec8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ecb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ecb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ece(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ece;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed7;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed9;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ee1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ee1;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ee4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ee4;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eed;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0efc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0efc;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0efe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0efe;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f06(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f06;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f0e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f0e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f11;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f13(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f13;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f15(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f15;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f16;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f19(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f19;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f1f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f1f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f22(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f22;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f25;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f28(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f28;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f2b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f2e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f31;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f33(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f33;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f3b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f3b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f3e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f44(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f44;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f47(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f47;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f4a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f4a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f4d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f50;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f53;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f56;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f58(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f58;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f60;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f63;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f69;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f6c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f6f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f6f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f72;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f75;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f78;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f7b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f7b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f7d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f7d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f85;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f88;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f8e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f91(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f91;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f94(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f94;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f97(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f97;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f9a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f9d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0faa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0faa;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fad;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fbc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fbc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fbf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fbf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fc2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fc2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fc5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fc5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fc7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fc7;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fcf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fcf;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fd2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fd2;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fd8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fd8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fdb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fdb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fde(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fde;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fea;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fec;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ff4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ff4;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1005(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1005;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1008(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1008;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_100b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x100b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x95);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_100e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x100e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1011(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1011;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0f,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1014(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1014;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1017(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1017;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1019(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1019;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_101c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x101c;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1025(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1025;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_102b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x102b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x57);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_102e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x102e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_103a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x103a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_103d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x103d;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xcc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1050(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1050;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1051(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1051;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1054(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1054;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x80);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1057(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1057;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_105a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x105a;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_105d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x105d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1060(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1060;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1063(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1063;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1066(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1066;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1068(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1068;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1070(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1070;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1078(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1078;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_107b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x107b;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_107d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x107d;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_107f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x107f;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1080(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1080;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1083(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1083;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1089(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1089;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_108c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x108c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xea);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_108f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x108f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1092(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1092;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1095(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1095;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1098(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1098;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_109b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x109b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_109d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x109d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10a5;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10a8;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ae;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ca;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10cd;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10d3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10d6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10d9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10dc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10df;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10e2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10e5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10e7;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ef;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10f2;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10f8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10fb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10fe;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1101(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1101;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1104(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1104;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1107(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1107;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_110a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x110a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_110c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x110c;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1114(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1114;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1117(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1117;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_111d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x111d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1120(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1120;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1123(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1123;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1126(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1126;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1129(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1129;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_112c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x112c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_112f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x112f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1131(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1131;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1139(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1139;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_113c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x113c;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1142(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1142;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1145(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1145;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1148(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1148;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_114b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x114b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_114e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x114e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1151(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1151;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1154(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1154;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1156(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1156;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_115e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x115e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1161(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1161;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1167(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1167;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_116a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x116a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_116d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x116d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x11,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1170(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1170;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1173(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1173;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1176(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1176;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1179(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1179;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_117b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x117b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1183(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1183;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1194(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1194;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x57);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1197(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1197;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_119a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x119a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x2e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_119d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x119d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a5;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x25,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x04,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11aa;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x03,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11ad;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11b0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11b3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x80);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11b6;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11b9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11bc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x4e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11bf;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x03,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11c2;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11c5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0xb5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11c8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11cb;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11ce;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x93);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11d1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x05,0x2e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11d4;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11d7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11da;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11dd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11e0;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11f0;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11fb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11fe;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1206(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1206;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1213(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1213;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_121b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x121b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_121e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x121e;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xb4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1220(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1220;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1221(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1221;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1a,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x23,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x18,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x18);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_123b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x123b;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xd4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_123f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x123f;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x0f,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1244(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1244;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x24,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x19,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xd4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1251(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1251;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1253(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1253;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x10,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1258(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1258;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_125c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x125c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_125f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x125f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1262(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1262;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x88);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1265(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1265;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x95);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1268(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1268;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_126c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x126c;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_126f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x126f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x15,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1272(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1272;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1274(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1274;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x16,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1277(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1277;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1279(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1279;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_127c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x127c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_127f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x127f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1281(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1281;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1284(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1284;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1287(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1287;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x2f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_128a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x128a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0xa1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_128d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x128d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3e,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x3d,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1292(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1292;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1295(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1295;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x3d,0xff);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x3e,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xa1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12a1;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3d,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x3f,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xc8);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x29,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x08,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x3d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12af;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x6d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12b2;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5c,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x6a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12bd;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5d,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12c3;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x80,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x67,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12c8;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xf0,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf6,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12d9;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf5,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12dc;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf4,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12df;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf3,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e4;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e5;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e6;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e7;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e8;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5d,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12ed;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12f4;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0xf0,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0xf1,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1302(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1302;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1304(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1304;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf1,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1307(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1307;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1309(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1309;
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3f,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3f,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0x04,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_131b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x131b;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x92,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_131d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x131d;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_131f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x131f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x06,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1327(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1327;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xec,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_132f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x132f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1337(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1337;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1338(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1338;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2b,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2c,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_134e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x134e;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x2d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2b,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2b,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_135a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x135a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_135e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x135e;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1361(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1361;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x2d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1368(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1368;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x30,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x31,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2f,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_137e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x137e;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x32,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x30,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x30,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_138a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x138a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_138e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x138e;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1391(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1391;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x32,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1398(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1398;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x35,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x36,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x34,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ae;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x37,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x35,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x35,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ba;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13be;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13c1;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x37,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13c8;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x3a,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x3b,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x39,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13de;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x3c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3a,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x3a,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ea;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ee;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13f1;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x3c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13f8;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2a,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1400(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1400;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1401(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1401;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1407(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1407;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2b,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2b,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_140f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x140f;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1414(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1414;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2f,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_141c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x141c;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_141d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x141d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2f,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1423(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1423;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x30,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x30,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_142b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x142b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1430(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1430;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x34,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x34,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1438(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1438;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1439(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1439;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x34,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_143f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x143f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x35,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x35,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1447(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1447;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_144c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x144c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x39,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x39,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1454(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1454;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1455(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1455;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x39,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_145b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x145b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3a,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x3a,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1463(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1463;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1468(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1468;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2a,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1470(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1470;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1473(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1473;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xe9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1476(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1476;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2f,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_147e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x147e;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1481(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1481;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xe9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1484(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1484;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x34,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x34,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_148c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x148c;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_148f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x148f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xe9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1492(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1492;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x39,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x39,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x26,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_149a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x149a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x4d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_149c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x149c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_149f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x149f;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14a2;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14a5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xcc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14a8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x68);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ab;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ae;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14b1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14b4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x98);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14b7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ba;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x8c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14bd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xde);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0xc8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14c3;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14c6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xe9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14c9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14cc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14cc;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14cf;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14d2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14d5;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14d8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14db;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14de;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14e1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14e4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x4c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14e7;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14e9;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14fa;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_150a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x150a;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1515(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1515;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1518(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1518;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_151a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x151a;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_151b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x151b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x68);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_151e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x151e;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1521(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1521;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1524(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1524;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x65);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1527(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1527;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2a,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_152f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x152f;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1532(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1532;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1535(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1535;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2f,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_153d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x153d;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1540(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1540;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1543(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1543;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x34,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x34,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_154b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x154b;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_154e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x154e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1551(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1551;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x39,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x39,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x27,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1559(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1559;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_155c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x155c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_155f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x155f;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1562(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1562;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x2f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1565(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1565;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x8f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1568(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1568;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x68);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_156b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x156b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_156e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x156e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x3d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1571(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1571;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x98);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1574(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1574;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0x98);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1577(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1577;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_157a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x157a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x4b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_157d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x157d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xa1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1580(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1580;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0xc8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1583(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1583;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1586(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1586;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1589(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1589;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_158c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x158c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x13,0xf8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_158f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x158f;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1592(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1592;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1595(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1595;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1598(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1598;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_159b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x159b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_159e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x159e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15a1;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15a4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15a7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x14,0x4c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15aa;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ac;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15af;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15bf;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ca;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15cd;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15d5;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15e2;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ea;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ed;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ef;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15f3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15f6;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1a,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x3f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x68);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_160a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x160a;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1a,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x23,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x3f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1626(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1626;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x06,0x01);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x06,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x06,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x07,0xf9);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x07,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1639(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1639;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_163c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x163c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6b,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1645(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1645;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2f,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_164e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x164e;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_164f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x164f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x16,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1652(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1652;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x84,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0x85,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe3,0x67);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1661(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1661;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1663(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1663;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xe4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_166b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x166b;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_166c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x166c;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x08,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1675(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1675;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x02,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_167c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x167c;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1681(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1681;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_168e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x168e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1690(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1690;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_169f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x169f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16a1;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16a6;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16b5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16b7;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16c6;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x9b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16c8;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x5b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16d0;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16d3;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16de;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x63,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16e9;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x67,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16f4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x6b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16ff;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x6f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_170a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x170a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x73,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1715(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1715;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x77,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1720(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1720;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x63);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_172b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x172b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0xc9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_172e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x172e;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x69,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_173d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x173d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x5f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_174c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x174c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x55,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_175b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x175b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x4b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_176a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x176a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x41,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1779(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1779;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x37,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1788(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1788;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x2d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1797(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1797;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x63);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17a6;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xde);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17ab;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xe9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17b0;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17b5;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17ba;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17bf;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17c4;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17c9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17cc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17cc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x63);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17cf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x16,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17d2;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x84,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0x85,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17e1;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x00,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17e4;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17eb;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17f0;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xee);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17fd;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17ff;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_180e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x180e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1815(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1815;
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1d,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x11,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1820(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1820;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x02,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1827(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1827;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_182c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x182c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1839(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1839;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_183b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x183b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_184a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x184a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_184c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x184c;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1851(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1851;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1860(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1860;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1862(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1862;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1871(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1871;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x9b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1873(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1873;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x06,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x30,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x18,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x19,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x17,0xcf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1899(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1899;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x0f,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x16,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_189e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x189e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18a2;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x09,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x17,0xcf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18a9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18ad;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18b7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18ba;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18bc;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x18,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18c1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18c4;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18c8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18cb;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x48,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18d4;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x02);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x04);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x40,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x41,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x06);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x42,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x43,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x08);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x0a);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x46,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x47,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x0c);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x44,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x45,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x16,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x48,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1943(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1943;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x10,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x11,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x12,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x13,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x17,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x48,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_195c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x195c;
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1968(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1968;
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x3c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_196b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x196b;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4c,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1971(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1971;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1988(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1988;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19a1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19a4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0x16);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19a7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19aa;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x4c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19b4;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19b9;
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x56,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19c8;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4c,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19ce;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19e5;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19fe;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x5c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a00;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x96,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a14;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x46,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a16;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a1e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x24,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a26(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a26;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x19,0x68);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a36;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0xdc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a4a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a4a;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x45,0xa0);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x44,0xa0);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xdc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a5a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a5a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a5c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a5c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x46,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x47,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a72;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a74(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a74;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x19,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a77(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a77;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a7a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a7a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x85,0x03);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a7f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a7f;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0x81,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1afe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1afe;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1aff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1aff;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b11;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b1a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1a,0x7a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b27;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x50,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b31;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1a,0x7a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b3e;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x39,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b48(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b48;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1a,0x7a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b55(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b55;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b5f;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1a,0x7a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b6c;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x10,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x03,0xf0);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x04,0x01);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x99,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b81;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b87;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b9d;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ba1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ba1;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ba4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ba4;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bbe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bbe;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xdd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bc0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bc0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bc2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bc2;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xc5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bdc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bdc;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xbf,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bde(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bde;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bdf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bdf;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bf1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bf1;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bfa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bfa;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1b,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c07;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c11;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1b,0x87);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c1e;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x03,0xf8);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x04,0x01);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xc7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c33(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c33;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c39;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c4f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c4f;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c53;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x12,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c56;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xef,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c64(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c64;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c66;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c68;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xdd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c76(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c76;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c78;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c79(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c79;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c8b;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c94(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c94;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x39);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ca1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ca1;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x10,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x03,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cb4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cb4;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x00,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cb7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cb7;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cbb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cbb;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cbd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cbd;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cc3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cc3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cc6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cc6;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cd5;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cd7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cd7;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ce5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ce5;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xee,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ce7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ce7;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ced(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ced;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x83,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cf4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cf4;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x3e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cfe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cfe;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d02(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d02;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d03(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d03;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d07;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x81,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x29,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d13(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d13;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d19(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d19;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x04,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d20;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x83,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d36;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x02,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x03,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d3c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d3c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d40;
	clk += Opcodes::jbc_bitaddr_offset  (aCPU, pc, 0x10,0x06,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d43;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d44(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d44;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2b,0x4b);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1c,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d4a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d4a;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfc);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x06,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d5b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d5b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x06,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2a,0xee);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d6a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d6a;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d6e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d6e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x36);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x2b);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x7f);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x01);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x2c);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dcf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dcf;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa0,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dd2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dd2;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dd3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dd3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2b,0x52);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0xed);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ddc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ddc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x49,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x01);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1de2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1de2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dea;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1df2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1df2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dfa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dfa;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e02(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e02;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e0a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e0a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e12(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e12;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e1a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e23(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e23;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e28(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e28;
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x23,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e2b;
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e2e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xda,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e3e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e4e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e4e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e5e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e5e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfe,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e6c;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x09,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf9,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe7,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e78;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e87;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e89(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e89;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xe5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e93(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e93;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x1f,0x57);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e99(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e99;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ea8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ea8;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eaa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eaa;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xe5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eb4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eb4;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x1f,0x57);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eba;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x84,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x85,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x08);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x52,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x53,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ed1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ed1;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x07,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ed4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ed4;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x85,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ede(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ede;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x60);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ee6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ee6;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eeb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eeb;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xf1,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ef2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ef2;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ef7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ef7;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1efe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1efe;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f03(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f03;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f09;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbf,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f0f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f0f;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x07,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f16;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f1b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f1b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f20;
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f23(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f23;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f25;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f2d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f2d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f32(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f32;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x1f,0x57);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f3a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f3a;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f3e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f3e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f42(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f42;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f47(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f47;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f4c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f4c;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f4f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f4f;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f55(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f55;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x37,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f57(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f57;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f5c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f5c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x6e,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xd8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f62(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f62;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f65(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f65;
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x04,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f68;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x0b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f71(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f71;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xc7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f73(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f73;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f76(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f76;
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x08,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f79(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f79;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x0b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x3c,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xbb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f7f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f7f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f82(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f82;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xc0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x45,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f8e;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xaa,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f90;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f93(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f93;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x07,0xb6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f99(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f99;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0x7a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f9c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f9c;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x4d,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fa4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fa4;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x57,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fae;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3e,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4a,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fc5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fc5;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0c,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fca;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x09,0x0f);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fd0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fd0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x57);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fd3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fd3;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x1f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fd7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fd7;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x98,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ff6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ff6;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ff9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ff9;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x30,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xab,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2000(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2000;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x8c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2002(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2002;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x6a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2004(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2004;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2008(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2008;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x01,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xb9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2010(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2010;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xc1,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2018(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2018;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_202f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x202f;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2032(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2032;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xdf,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xca,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2036(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2036;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xe7,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_203e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x203e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xf1,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2048(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2048;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xf9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2050(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2050;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x0a,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x96,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_206a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x206a;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_206e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x206e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x23);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2078(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2078;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x86,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_207a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x207a;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x0b,0x03);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbb,0x00,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2080(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2080;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x8c,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x8a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2088(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2088;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_208d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x208d;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x8c);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2095(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2095;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2097(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2097;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_209d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x209d;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_209e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x209e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20a3;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x60,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x75,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x60,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x60,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xec,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20b7;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20b9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x60,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20bc;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20c1;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20c3;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x27);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20cd;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20d2;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xf1,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20d9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20de;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xd1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20e5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20ea;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20ee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20ee;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x51,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x20,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20f2;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0xa8);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x49,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20fd;
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0xe7,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2100(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2100;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2105(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2105;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xde,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2109(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2109;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_210e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x210e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2112(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2112;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x52);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x53);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x85,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x84,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2127(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2127;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_212b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x212b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2135(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2135;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2139(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2139;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_213a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x213a;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x04,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x05,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2142(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2142;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe7,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_214f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x214f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2154(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2154;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2158(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2158;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x02,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x03,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xcb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2160(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2160;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2161(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2161;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xea,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2b,0x56);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x21,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2169(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2169;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe8,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_216e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x216e;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2176(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2176;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_217b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x217b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_217d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x217d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2182(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2182;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x82);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2188(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2188;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe1,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x5a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_219a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x219a;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x47);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_219d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x219d;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x21,0xa3);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x56,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21a3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21a6;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x08);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ab;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x10);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x55,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x01,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21b4;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x16);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21b9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x1b);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21be;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xda,0x57);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21c1;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x26);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21c9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xda,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x4a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21cf;
	clk += Opcodes::xrl_mem_a           (aCPU, pc, 0x62,0x4a,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21d4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x57,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x4b,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21da;
	clk += Opcodes::xrl_mem_a           (aCPU, pc, 0x62,0x4b,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21df;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21e4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x55,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x2f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x55,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21f4;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ff;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x01,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x16,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_220e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x220e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8a,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xec,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2214(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2214;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x08,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5b,0x59);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5c,0x5a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x58,0x12);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcc,0xee);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xc8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2224(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2224;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x6d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2226(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2226;
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::mov_indir_rx_imm    (aCPU, pc, 0x76,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x01,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2234(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2234;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfd,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x71,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_223b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x223b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_223d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x223d;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x4c,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x71,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x9f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_224a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x224a;
	clk += Opcodes::xrl_a_indir_rx      (aCPU, pc, 0x66,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_224f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x224f;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x6b,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x49,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x71,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2259(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2259;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x54,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x01,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2264(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2264;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xfc);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcc,0xef);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xc8,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x58,0x0f);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x09,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2272(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2272;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x08,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2279(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2279;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8b,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xff,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x94,0xa3);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x09,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2286(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2286;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xde);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_228b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x228b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5a,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x59,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x21,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2297(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2297;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x8e,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_229e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x229e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x90,0xa3);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22a4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5a,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x59,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22b1;
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0xe0,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22b4;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x90,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22b8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22b8;
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x58,0x4d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22bb;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xc8,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x94,0xa3);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x08,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22c3;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xe0,0x00);
	clk += Opcodes::cpl_a               (aCPU, pc, 0xf4,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x5a,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x32,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22cc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22cc;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x6d,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x80,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22e3;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x90,0x0c);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xf3);
	clk += Opcodes::xrl_mem_imm         (aCPU, pc, 0x63,0x90,0x04);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22f2;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22f5;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22f8;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22fb;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x55,0xda);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22fe;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8b,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8d,0xff);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x08,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2308(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2308;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xc6,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_230f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x230f;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa6,0x04);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xc8,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xc0,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x04);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xba,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8c,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xa9,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x89,0x50);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x08);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xb9,0x08);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xab,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcb,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xca,0xee);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xc8,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcd,0xff);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x20);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xb9,0x20);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xad,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x21,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2343(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2343;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5b,0x00);
	clk += Opcodes::cpl_a               (aCPU, pc, 0xf4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x5c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_234e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x234e;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5d,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2356(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2356;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0x1b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2359(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2359;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5e,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_235d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x235d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0x1b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2360(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2360;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2366(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2366;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0x1b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2369(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2369;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x1f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23cc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23cc;
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ce;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23d2;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ea;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ed;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x23,0x69);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23f0;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5f,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x75);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x30);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2408(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2408;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_240b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x240b;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_240e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x240e;
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x23,0x69);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2418(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2418;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_241b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x241b;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_241e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x241e;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5f,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xa7,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2429(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2429;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_242c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x242c;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_242f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x242f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2431(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2431;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2434(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2434;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2438(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2438;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_243b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x243b;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_243e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x243e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2440(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2440;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2443(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2443;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5e,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5d,0x80);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x83,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x5d,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x5d,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24a5;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24a8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24aa;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24ad;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5e,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5d,0x80);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x82,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5d,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5d,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2509(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2509;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_250a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x250a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5e,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5e,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2512(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2512;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2513(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2513;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_251c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x251c;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_251f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x251f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2521(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2521;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2524(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2524;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x75);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xa7,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_252e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x252e;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xb5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2536(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2536;
	clk += Opcodes::mov_indir_rx_imm    (aCPU, pc, 0x76,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xfb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_253b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x253b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x60,0x63);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x99);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x25);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2549(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2549;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_254e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x254e;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_254f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x254f;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xff,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2554(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2554;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2556(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2556;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x65);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2559(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2559;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x60,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x2e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_255f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x255f;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x50,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x08);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2565(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2565;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x03,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x54,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x67,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_256e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x256e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x54,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x67,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2573(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2573;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2575(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2575;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_257a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x257a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_257d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x257d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x75,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x66,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x63,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x50,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x08);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x68,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x69,0x83);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2598(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2598;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2599(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2599;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x64);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe0,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25a3;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x20,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25a6;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25a8;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x40,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25ab;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25ad;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x60,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25b0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25b3;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x80,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25b6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25b9;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25bc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25bf;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xc0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25c2;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x24);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25c5;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xe0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25c8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25cb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x53);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25ce;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xa2);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25d7;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xcd);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25e0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x40,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25ef;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f2;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xfb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f7;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x43);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2606(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2606;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xc4);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2615(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2615;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x41);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2624(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2624;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xaf);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2630(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2630;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe1,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x64,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2635(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2635;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2637(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2637;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe2,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x64,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_263c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x263c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_263e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x263e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x56);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2647(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2647;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x77);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2650(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2650;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2653(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2653;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2656(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2656;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x5d,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xfe,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5e,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x68);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2668(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2668;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xfe,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x99);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x25);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2677(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2677;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x65);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x83);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2683(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2683;
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x5e,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x5f,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0xff,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x66,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2693(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2693;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x65,0x82);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x23,0x4e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2699(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2699;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x99);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x25);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26a2;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xb7);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26b7;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x99);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x25);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26cd;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xd9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26d9;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x62);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xe8);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26e8;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26ed;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x62,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26ff;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x12);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2712(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2712;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x65,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x65,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x62,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x62,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2732(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2732;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xe8,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x26,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2738(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2738;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x99,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_273c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x273c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x68,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x69,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2743(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2743;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_274a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x274a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x1b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_274f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x274f;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x61,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_275e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x275e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_276a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x276a;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x04,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_277a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x277a;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x01,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_278c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x278c;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2791(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2791;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2795(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2795;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_279a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x279a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27a0;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27aa;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x99);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x25);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27b3;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27b6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27b9;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27c4;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27cb;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27d0;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x61,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27df;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27ea;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x02,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27f6;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x03,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2808(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2808;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_280e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x280e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2812(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2812;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2817(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2817;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_281d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x281d;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2827(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2827;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x99);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x25);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2830(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2830;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2833(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2833;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2836(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2836;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0xcb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2841(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2841;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2848(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2848;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_284d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x284d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_285d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x285d;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_285f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x285f;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x01,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2869(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2869;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x04,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x05,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2874(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2874;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_287b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x287b;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xf7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_287d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x287d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2881(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2881;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2886(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2886;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_288c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x288c;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2896(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2896;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x99);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x25);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_289f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x289f;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28a2;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28a5;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x99,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28af;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x62,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28b5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28ba;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x05);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28c3;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28cd;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28db;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28e1;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xaf);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28e9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28ef;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xaf);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28fc;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x99);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x25);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2902(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2902;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2905(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2905;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x12);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2912(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2912;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd6,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2920(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2920;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2928(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2928;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_292e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x292e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2933(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2933;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x05);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_293c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x293c;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2946(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2946;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2954(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2954;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_295a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x295a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xaf);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2962(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2962;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2968(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2968;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xaf);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2975(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2975;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x99);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x25);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_297b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x297b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_297e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x297e;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2982(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2982;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x04,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x14,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2986(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2986;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2988(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2988;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xfc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_298a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x298a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x03,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_298e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x298e;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_298f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x298f;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2992(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2992;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x83,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29a0;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x80,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6a,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29bb;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29c1;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x85);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29d3;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x89,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29d5;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29e3;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xe6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29ef;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x14,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29f1;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xd0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a05(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a05;
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x12,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x99,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x84,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xbd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a16;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a1d;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a23(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a23;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x15,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a27;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x6c,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a3c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a3c;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a43;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x83);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a4f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a4f;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xd6,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::da_a                (aCPU, pc, 0xd4,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe4,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a58(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a58;
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a59(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a59;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a65(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a65;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x82,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x83,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a6c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x29,0x8f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a6f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a6f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0xb2);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x01);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x40);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2b,0x76);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0x1d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a7e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x20);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2b,0x7e);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0x1d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a87;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0xb6);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x67);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x29,0xc1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a96(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a96;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6a,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x55);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x29,0xc1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2aa1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2aa1;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x26);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x19);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x29,0xc1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2aad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2aad;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x18);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x46);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x29,0xc1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ab9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ab9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x18);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x1f);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x29,0xc1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ac5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ac5;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x38);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x02);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x50);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x21,0x6e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ad1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ad1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ad4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ad4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ad7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ad7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x29,0xbb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f00;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x49,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x4a,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xb2,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0x94,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f10(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f10;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xb6,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f20;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xd5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xfe,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f30;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x50,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f40;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xb0,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x08,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xca,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xf7,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xed,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f50;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xef,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x7b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x14,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xa5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x59,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xce,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f60;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xb2,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x94,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x49,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0x4a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f70;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xef,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x59,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xce,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x14,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xa5,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f80;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x96,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x2f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xfe,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x5f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xdf,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f90;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x2f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfe,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x96,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x5a,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fa0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fb0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fc0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fc0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fd0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fd0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fe0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fe0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ff0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ff0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}
const sbt_block_t sbt_rom_code[] = {
	&sbt_block_0000,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0003,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_000b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0013,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_001b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0023,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_002b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0033,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_003b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0043,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_004b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0053,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0056,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0059,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00d1,
	&sbt_exception,
	&sbt_block_00d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0102,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0108,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0112,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0115,
	&sbt_block_0116,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0119,
	&sbt_block_011a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_011d,
	&sbt_block_011e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0121,
	&sbt_block_0122,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0125,
	&sbt_block_0126,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0129,
	&sbt_block_012a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_012d,
	&sbt_block_012e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0131,
	&sbt_block_0132,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0135,
	&sbt_block_0136,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0139,
	&sbt_block_013a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_013d,
	&sbt_block_013e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0141,
	&sbt_block_0142,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0145,
	&sbt_block_0146,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0149,
	&sbt_block_014a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_014d,
	&sbt_block_014e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0151,
	&sbt_block_0152,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0166,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_017e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_018a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0192,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_019c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01c2,
	&sbt_exception,
	&sbt_block_01c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01db,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01f6,
	&sbt_block_01f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0277,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_027f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0295,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02a1,
	&sbt_block_02a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02af,
	&sbt_exception,
	&sbt_block_02b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02d0,
	&sbt_exception,
	&sbt_block_02d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02de,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02e3,
	&sbt_exception,
	&sbt_block_02e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_030a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_030d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0319,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0323,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_032d,
	&sbt_exception,
	&sbt_block_032f,
	&sbt_exception,
	&sbt_block_0331,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0338,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_033b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0340,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0346,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_034c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0350,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0356,
	&sbt_exception,
	&sbt_block_0358,
	&sbt_block_0359,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0388,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03f9,
	&sbt_exception,
	&sbt_block_03fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03ff,
	&sbt_exception,
	&sbt_block_0401,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0418,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0429,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_042c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_042f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0437,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_043a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0444,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0447,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0450,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0459,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_045c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0470,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0487,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_048a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0491,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0494,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_049b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_049e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04af,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04b2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04f6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0501,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0506,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0509,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_050e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0511,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0516,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0519,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_051e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0521,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0526,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0529,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_052e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0531,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0534,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_053e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0541,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0557,
	&sbt_block_0558,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_055b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_055e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0564,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0567,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_056a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_056d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0570,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0573,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0576,
	&sbt_exception,
	&sbt_block_0578,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0580,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0583,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0589,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_058c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_058f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0592,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0595,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0598,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_059b,
	&sbt_exception,
	&sbt_block_059d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05c0,
	&sbt_exception,
	&sbt_block_05c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e5,
	&sbt_exception,
	&sbt_block_05e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0601,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0604,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0607,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_060a,
	&sbt_exception,
	&sbt_block_060c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0614,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0617,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_061d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0620,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0623,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0626,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0629,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_062c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_062f,
	&sbt_exception,
	&sbt_block_0631,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0639,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_063c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0642,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0645,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0648,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_064b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_064e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0651,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0654,
	&sbt_exception,
	&sbt_block_0656,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_065e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0661,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0667,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_066a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_066d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0670,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0673,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0676,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0679,
	&sbt_exception,
	&sbt_block_067b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0683,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_068b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_068e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0693,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0696,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ca,
	&sbt_block_06cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ef,
	&sbt_exception,
	&sbt_block_06f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0702,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0705,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0708,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_070b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_070e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0711,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0714,
	&sbt_exception,
	&sbt_block_0716,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_071e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0721,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0727,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_072a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_072d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0730,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0733,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0736,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0739,
	&sbt_exception,
	&sbt_block_073b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0743,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0746,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_074c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_074f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0752,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0755,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0758,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_075b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_075e,
	&sbt_exception,
	&sbt_block_0760,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0768,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_076b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0771,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0774,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0777,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_077a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_077d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0780,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0783,
	&sbt_exception,
	&sbt_block_0785,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_078d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0790,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0796,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0799,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_079c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_079f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07a8,
	&sbt_exception,
	&sbt_block_07aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07b2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07be,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07cd,
	&sbt_exception,
	&sbt_block_07cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07e2,
	&sbt_exception,
	&sbt_block_07e4,
	&sbt_exception,
	&sbt_block_07e6,
	&sbt_block_07e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07f3,
	&sbt_exception,
	&sbt_block_07f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_080e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0811,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0814,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0817,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_081a,
	&sbt_exception,
	&sbt_block_081c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_081f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0828,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_082e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0831,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0834,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0838,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_083b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_084e,
	&sbt_block_084f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0852,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0855,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0858,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_085b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0861,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0864,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0867,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_086a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_086d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0870,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0873,
	&sbt_exception,
	&sbt_block_0875,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_087d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0880,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0886,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0889,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_088c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_088f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0892,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0895,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0898,
	&sbt_exception,
	&sbt_block_089a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08bd,
	&sbt_exception,
	&sbt_block_08bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08e2,
	&sbt_exception,
	&sbt_block_08e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0901,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0904,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0907,
	&sbt_exception,
	&sbt_block_0909,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0911,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0914,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_091a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_091d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0920,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0923,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0926,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0929,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_092c,
	&sbt_exception,
	&sbt_block_092e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0936,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_093e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0941,
	&sbt_exception,
	&sbt_block_0943,
	&sbt_exception,
	&sbt_block_0945,
	&sbt_block_0946,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0949,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_094f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0952,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0955,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0958,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_095b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_095e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0961,
	&sbt_exception,
	&sbt_block_0963,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_096b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_096e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0974,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0977,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_097a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_097d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0980,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0983,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0986,
	&sbt_exception,
	&sbt_block_0988,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0990,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09b3,
	&sbt_exception,
	&sbt_block_09b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09b8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09e7,
	&sbt_block_09e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09eb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ee,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a00,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a03,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a06,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a09,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a0c,
	&sbt_exception,
	&sbt_block_0a0e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a16,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a19,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a1f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a22,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a25,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a28,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a31,
	&sbt_exception,
	&sbt_block_0a33,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a3b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a44,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a47,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a4a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a50,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a56,
	&sbt_exception,
	&sbt_block_0a58,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a60,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a63,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a69,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a6f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a72,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a75,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a78,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a7b,
	&sbt_exception,
	&sbt_block_0a7d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a85,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a88,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a8e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a91,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a94,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a97,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aa0,
	&sbt_exception,
	&sbt_block_0aa2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aaa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ab2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ab5,
	&sbt_exception,
	&sbt_block_0ab7,
	&sbt_exception,
	&sbt_block_0ab9,
	&sbt_block_0aba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0abd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0acc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0acf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ad2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ad5,
	&sbt_exception,
	&sbt_block_0ad7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0adf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ae2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ae8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aeb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aee,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0afa,
	&sbt_exception,
	&sbt_block_0afc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b04,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b07,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b0d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b10,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b13,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b16,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b19,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b1c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b1f,
	&sbt_exception,
	&sbt_block_0b21,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b29,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b3a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b3d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b40,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b43,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b46,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b49,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b4c,
	&sbt_exception,
	&sbt_block_0b4e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b51,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b5a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b60,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b63,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b66,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b6a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b6d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b80,
	&sbt_block_0b81,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b84,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b87,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b8a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b93,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b96,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b99,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b9c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b9f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ba2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ba5,
	&sbt_exception,
	&sbt_block_0ba7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0baf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bb2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bb8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bbb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bbe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bc1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bc4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bc7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bca,
	&sbt_exception,
	&sbt_block_0bcc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bd4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bd7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bdd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bef,
	&sbt_exception,
	&sbt_block_0bf1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bf9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bfc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c02,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c05,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c08,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c0b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c0e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c11,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c14,
	&sbt_exception,
	&sbt_block_0c16,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c26,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c29,
	&sbt_exception,
	&sbt_block_0c2b,
	&sbt_exception,
	&sbt_block_0c2d,
	&sbt_block_0c2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c31,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c37,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c3a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c3d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c40,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c43,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c46,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c49,
	&sbt_exception,
	&sbt_block_0c4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c56,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c5c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c62,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c65,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c68,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c6b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c6e,
	&sbt_exception,
	&sbt_block_0c70,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c78,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c7b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c81,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c84,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c87,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c8a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c90,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c93,
	&sbt_exception,
	&sbt_block_0c95,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ca0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ca6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ca9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0caf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb8,
	&sbt_exception,
	&sbt_block_0cba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cc2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cd3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cd6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cd9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cdc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cdf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ce2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ce5,
	&sbt_exception,
	&sbt_block_0ce7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cf3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cf9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cfc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d03,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d06,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d19,
	&sbt_block_0d1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d20,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d23,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d26,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d2c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d2f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d32,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d35,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d38,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d3b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d3e,
	&sbt_exception,
	&sbt_block_0d40,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d48,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d51,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d54,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d57,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d5a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d5d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d60,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d63,
	&sbt_exception,
	&sbt_block_0d65,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d6d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d70,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d76,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d79,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d7c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d7f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d82,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d85,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d88,
	&sbt_exception,
	&sbt_block_0d8a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d92,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d9d,
	&sbt_exception,
	&sbt_block_0d9f,
	&sbt_exception,
	&sbt_block_0da1,
	&sbt_block_0da2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0da5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dab,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0db1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0db4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0db7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dbd,
	&sbt_exception,
	&sbt_block_0dbf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dc7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ddc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ddf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0de2,
	&sbt_exception,
	&sbt_block_0de4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0def,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0df5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0df8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dfb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dfe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e01,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e04,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e07,
	&sbt_exception,
	&sbt_block_0e09,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e11,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e14,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e20,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e23,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e26,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e29,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e2c,
	&sbt_exception,
	&sbt_block_0e2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e36,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e39,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e3f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e42,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e45,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e48,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e4e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e51,
	&sbt_exception,
	&sbt_block_0e53,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e5b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e6f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e72,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e75,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e78,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e7b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e7e,
	&sbt_exception,
	&sbt_block_0e80,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e83,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e8c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e92,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e95,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e98,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e9c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e9f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eb2,
	&sbt_block_0eb3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eb6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eb9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ebc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ebf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ec5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ec8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ecb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ece,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed7,
	&sbt_exception,
	&sbt_block_0ed9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ee1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ee4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eed,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0efc,
	&sbt_exception,
	&sbt_block_0efe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f06,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f0e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f11,
	&sbt_exception,
	&sbt_block_0f13,
	&sbt_exception,
	&sbt_block_0f15,
	&sbt_block_0f16,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f19,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f1f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f22,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f25,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f28,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f31,
	&sbt_exception,
	&sbt_block_0f33,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f3b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f44,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f47,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f4a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f50,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f56,
	&sbt_exception,
	&sbt_block_0f58,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f60,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f63,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f69,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f6f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f72,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f75,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f78,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f7b,
	&sbt_exception,
	&sbt_block_0f7d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f85,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f88,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f8e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f91,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f94,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f97,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fa0,
	&sbt_exception,
	&sbt_block_0fa2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0faa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fbc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fbf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fc2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fc5,
	&sbt_exception,
	&sbt_block_0fc7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fcf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fd2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fd8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fdb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fde,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fe1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fe4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fe7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fea,
	&sbt_exception,
	&sbt_block_0fec,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ff4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1005,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1008,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_100b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_100e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1011,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1014,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1017,
	&sbt_exception,
	&sbt_block_1019,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_101c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1025,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_102b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_102e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_103a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_103d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1050,
	&sbt_block_1051,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1054,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1057,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_105a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_105d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1060,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1063,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1066,
	&sbt_exception,
	&sbt_block_1068,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1070,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1078,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_107b,
	&sbt_exception,
	&sbt_block_107d,
	&sbt_exception,
	&sbt_block_107f,
	&sbt_block_1080,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1083,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1089,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_108c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_108f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1092,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1095,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1098,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_109b,
	&sbt_exception,
	&sbt_block_109d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10c0,
	&sbt_exception,
	&sbt_block_10c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10e5,
	&sbt_exception,
	&sbt_block_10e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1101,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1104,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1107,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_110a,
	&sbt_exception,
	&sbt_block_110c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1114,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1117,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_111d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1120,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1123,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1126,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1129,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_112c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_112f,
	&sbt_exception,
	&sbt_block_1131,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1139,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_113c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1142,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1145,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1148,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_114b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_114e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1151,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1154,
	&sbt_exception,
	&sbt_block_1156,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_115e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1161,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1167,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_116a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_116d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1170,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1173,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1176,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1179,
	&sbt_exception,
	&sbt_block_117b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1183,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1194,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1197,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_119a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_119d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11a0,
	&sbt_exception,
	&sbt_block_11a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11da,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1206,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1213,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_121b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_121e,
	&sbt_exception,
	&sbt_block_1220,
	&sbt_block_1221,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_123b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_123f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1244,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1251,
	&sbt_exception,
	&sbt_block_1253,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1258,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_125c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_125f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1262,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1265,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1268,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_126c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_126f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1272,
	&sbt_exception,
	&sbt_block_1274,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1277,
	&sbt_exception,
	&sbt_block_1279,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_127c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_127f,
	&sbt_exception,
	&sbt_block_1281,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1284,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1287,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_128a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_128d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1292,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1295,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12af,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12b2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12e2,
	&sbt_exception,
	&sbt_block_12e4,
	&sbt_block_12e5,
	&sbt_block_12e6,
	&sbt_block_12e7,
	&sbt_block_12e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1302,
	&sbt_exception,
	&sbt_block_1304,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1307,
	&sbt_exception,
	&sbt_block_1309,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_131b,
	&sbt_exception,
	&sbt_block_131d,
	&sbt_exception,
	&sbt_block_131f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1327,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_132f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1337,
	&sbt_block_1338,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_134e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_135a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_135e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1361,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1368,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_137e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_138a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_138e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1391,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1398,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13be,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13de,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ee,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1400,
	&sbt_block_1401,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1407,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_140f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1414,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_141c,
	&sbt_block_141d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1423,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_142b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1430,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1438,
	&sbt_block_1439,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_143f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1447,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_144c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1454,
	&sbt_block_1455,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_145b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1463,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1468,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1470,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1473,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1476,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_147e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1481,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1484,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_148c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_148f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1492,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_149a,
	&sbt_exception,
	&sbt_block_149c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_149f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14cc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14db,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14de,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14e7,
	&sbt_exception,
	&sbt_block_14e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_150a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1515,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1518,
	&sbt_exception,
	&sbt_block_151a,
	&sbt_block_151b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_151e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1521,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1524,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1527,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_152f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1532,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1535,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_153d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1540,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1543,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_154b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_154e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1551,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1559,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_155c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_155f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1562,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1565,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1568,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_156b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_156e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1571,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1574,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1577,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_157a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_157d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1580,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1583,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1586,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1589,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_158c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_158f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1592,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1595,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1598,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_159b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_159e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15aa,
	&sbt_exception,
	&sbt_block_15ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15af,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ed,
	&sbt_exception,
	&sbt_block_15ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15f6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_160a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1626,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1639,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_163c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1645,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_164e,
	&sbt_block_164f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1652,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1661,
	&sbt_exception,
	&sbt_block_1663,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_166b,
	&sbt_block_166c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1675,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_167c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1681,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_168e,
	&sbt_exception,
	&sbt_block_1690,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_169f,
	&sbt_exception,
	&sbt_block_16a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16b5,
	&sbt_exception,
	&sbt_block_16b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16c6,
	&sbt_exception,
	&sbt_block_16c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16de,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_170a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1715,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1720,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_172b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_172e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_173d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_174c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_175b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_176a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1779,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1788,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1797,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17cc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17eb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17fd,
	&sbt_exception,
	&sbt_block_17ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_180e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1815,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1820,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1827,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_182c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1839,
	&sbt_exception,
	&sbt_block_183b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_184a,
	&sbt_exception,
	&sbt_block_184c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1851,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1860,
	&sbt_exception,
	&sbt_block_1862,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1871,
	&sbt_exception,
	&sbt_block_1873,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1899,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_189e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18ba,
	&sbt_exception,
	&sbt_block_18bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1943,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_195c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1968,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_196b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1971,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1988,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19fe,
	&sbt_exception,
	&sbt_block_1a00,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a14,
	&sbt_exception,
	&sbt_block_1a16,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a26,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a36,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a4a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a5a,
	&sbt_exception,
	&sbt_block_1a5c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a72,
	&sbt_exception,
	&sbt_block_1a74,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a77,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a7a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a7f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1afe,
	&sbt_block_1aff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b11,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b27,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b31,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b48,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b55,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b81,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b87,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ba1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ba4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bbe,
	&sbt_exception,
	&sbt_block_1bc0,
	&sbt_exception,
	&sbt_block_1bc2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bdc,
	&sbt_exception,
	&sbt_block_1bde,
	&sbt_block_1bdf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bf1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bfa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c07,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c11,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c33,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c39,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c4f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c56,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c64,
	&sbt_exception,
	&sbt_block_1c66,
	&sbt_exception,
	&sbt_block_1c68,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c76,
	&sbt_exception,
	&sbt_block_1c78,
	&sbt_block_1c79,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c94,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ca1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cb4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cb7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cbb,
	&sbt_exception,
	&sbt_block_1cbd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cc3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cc6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cd5,
	&sbt_exception,
	&sbt_block_1cd7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ce5,
	&sbt_exception,
	&sbt_block_1ce7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ced,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cf4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cfe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d02,
	&sbt_block_1d03,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d07,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d13,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d19,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d20,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d36,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d3c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d40,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d43,
	&sbt_block_1d44,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d4a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d5b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d6a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d6e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dcf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dd2,
	&sbt_block_1dd3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ddc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1de2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1df2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dfa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e02,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e0a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e12,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e23,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e28,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e4e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e5e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e78,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e87,
	&sbt_exception,
	&sbt_block_1e89,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e93,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e99,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ea8,
	&sbt_exception,
	&sbt_block_1eaa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eb4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ed1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ed4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ede,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ee6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eeb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ef2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ef7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1efe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f03,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f09,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f0f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f16,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f1b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f20,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f23,
	&sbt_exception,
	&sbt_block_1f25,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f2d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f32,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f3a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f3e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f42,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f47,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f4c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f4f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f55,
	&sbt_exception,
	&sbt_block_1f57,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f5c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f62,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f65,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f68,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f71,
	&sbt_exception,
	&sbt_block_1f73,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f76,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f79,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f7f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f82,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f8e,
	&sbt_exception,
	&sbt_block_1f90,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f93,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f99,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f9c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fa4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fc5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fd0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fd3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fd7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ff6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ff9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2000,
	&sbt_exception,
	&sbt_block_2002,
	&sbt_exception,
	&sbt_block_2004,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2008,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2010,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2018,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_202f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2032,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2036,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_203e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2048,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2050,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_206a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_206e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2078,
	&sbt_exception,
	&sbt_block_207a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2080,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2088,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_208d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2095,
	&sbt_exception,
	&sbt_block_2097,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_209d,
	&sbt_block_209e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20a3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20b7,
	&sbt_exception,
	&sbt_block_20b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20c1,
	&sbt_exception,
	&sbt_block_20c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20de,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20ee,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2100,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2105,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2109,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_210e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2112,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2127,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_212b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2135,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2139,
	&sbt_block_213a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2142,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_214f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2154,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2158,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2160,
	&sbt_block_2161,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2169,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_216e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2176,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_217b,
	&sbt_exception,
	&sbt_block_217d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2182,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2188,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_219a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_219d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21a3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21be,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_220e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2214,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2224,
	&sbt_exception,
	&sbt_block_2226,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2234,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_223b,
	&sbt_exception,
	&sbt_block_223d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_224a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_224f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2259,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2264,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2272,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2279,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2286,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_228b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2297,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_229e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22b8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22cc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2308,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_230f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2343,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_234e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2356,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2359,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_235d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2360,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2366,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2369,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23cc,
	&sbt_exception,
	&sbt_block_23ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2408,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_240b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_240e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2418,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_241b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_241e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2429,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_242c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_242f,
	&sbt_exception,
	&sbt_block_2431,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2434,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2438,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_243b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_243e,
	&sbt_exception,
	&sbt_block_2440,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2443,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24a8,
	&sbt_exception,
	&sbt_block_24aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2509,
	&sbt_block_250a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2512,
	&sbt_block_2513,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_251c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_251f,
	&sbt_exception,
	&sbt_block_2521,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2524,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_252e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2536,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_253b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2549,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_254e,
	&sbt_block_254f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2554,
	&sbt_exception,
	&sbt_block_2556,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2559,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_255f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2565,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_256e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2573,
	&sbt_exception,
	&sbt_block_2575,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_257a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_257d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2598,
	&sbt_block_2599,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25a3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25a6,
	&sbt_exception,
	&sbt_block_25a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25ab,
	&sbt_exception,
	&sbt_block_25ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25f2,
	&sbt_exception,
	&sbt_block_25f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2606,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2615,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2624,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2630,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2635,
	&sbt_exception,
	&sbt_block_2637,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_263c,
	&sbt_exception,
	&sbt_block_263e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2647,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2650,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2653,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2656,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2668,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2677,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2683,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2693,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2699,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2712,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2732,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2738,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_273c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2743,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_274a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_274f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_275e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_276a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_277a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_278c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2791,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2795,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_279a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27f6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2808,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_280e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2812,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2817,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_281d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2827,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2830,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2833,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2836,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2841,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2848,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_284d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_285d,
	&sbt_exception,
	&sbt_block_285f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2869,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2874,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_287b,
	&sbt_exception,
	&sbt_block_287d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2881,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2886,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_288c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2896,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_289f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28af,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28db,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2902,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2905,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2912,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2920,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2928,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_292e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2933,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_293c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2946,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2954,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_295a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2962,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2968,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2975,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_297b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_297e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2982,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2986,
	&sbt_exception,
	&sbt_block_2988,
	&sbt_exception,
	&sbt_block_298a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_298e,
	&sbt_block_298f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2992,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29d3,
	&sbt_exception,
	&sbt_block_29d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29ef,
	&sbt_exception,
	&sbt_block_29f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a05,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a16,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a23,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a27,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a3c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a43,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a4f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a58,
	&sbt_block_2a59,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a65,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a6f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a7e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a87,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a96,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2aa1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2aad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ab9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ac5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ad1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ad4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ad7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f00,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f10,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f20,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f40,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f50,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f60,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f70,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f80,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f90,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fa0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fb0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fc0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fd0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fe0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ff0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
};

extern const uint8_t sbt_rom_data[] = {
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
    0x01,0x02,0x01,0x02,0x02,0x03,0x01,0x02,0x02,0x03,0x02,0x03,0x03,0x04,0x02,0x01,
    0x00,0x80,0x02,0xec,0x1b,0x02,0x11,0x00,0x80,0x03,0xb1,0x0c,0x03,0x03,0xb6,0x07,
    0x02,0x03,0xc0,0x08,0x00,0x02,0xc1,0x03,0x03,0xc2,0x03,0x03,0x03,0xc5,0x4a,0x3e,
    0x02,0xc7,0x40,0x02,0x26,0x01,0x02,0xf2,0x01,0x10,0xe0,0x3f,0x2a,0x27,0x2d,0x26,
    0x0c,0x53,0xf4,0x3f,0x16,0x1d,0x15,0x0f,0x06,0x00,0x10,0xe1,0x00,0x15,0x18,0x11,
    0x19,0x13,0x2b,0x63,0x40,0x09,0x22,0x2a,0x30,0x39,0x3f,0x02,0x35,0x00,0x02,0x13,
    0x00,0x05,0x2a,0x00,0x00,0x00,0x7f,0x02,0x3a,0x05,0x00,0x01,0x10,0x00,0x01,0x28,
    0x00,0x00,0x01,0x29,0x00,0x00,0x02,0x3d,0x07,0x02,0x3c,0x01,0x02,0x22,0x01,0x02,
    0x21,0x01,0x02,0x31,0x20,0x01,0xe2,0x01,0xe1,0x02,0x23,0x03,0x02,0x26,0x0e,0x02,
    0x27,0x70,0x02,0x20,0x3f,0x00,0x54,0x68,0x75,0x6e,0x64,0x65,0x72,0x00,0x63,0x72,
    0x61,0x63,0x6b,0x65,0x72,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x01,0x02,0x67,0x69,0x6b,0x02,
    0x03,0xff,0xc4,0x02,0xc6,0x00,0xca,0x02,0xcc,0x02,0xd1,0x02,0xd3,0x00,0x02,0x03,
    0xff,0xc8,0x02,0xc6,0x00,0xce,0x02,0xcc,0x02,0xd6,0x02,0xd3,0x00,0x02,0x03,0x00,
    0x00,0xbc,0x00,0xd0,0x00,0xd8,0x04,0x03,0x00,0x00,0xbc,0xbd,0xc7,0x00,0xbf,0x00,
    0x61,0x00,0xd8,0xd4,0xd5,0x05,0x03,0x00,0xbc,0xbd,0xbd,0xbd,0xbe,0xbf,0x00,0x00,
    0x00,0xc0,0xc1,0xc2,0xc2,0xc2,0xc3,0x0f,0x05,0xff,0x00,0x00,0x00,0x00,0x6d,0x08,
    0x6e,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6f,0x06,0x71,0x06,0x73,0x0a,0x75,0x08,
    0x76,0x0a,0x00,0x00,0x78,0x06,0x7a,0x06,0x7c,0x06,0x7e,0x06,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x06,0x82,0x06,0x84,0x06,0x86,0x08,0x87,0x06,
    0x89,0x06,0x8b,0x06,0x8d,0x04,0x8e,0x06,0x90,0x06,0x92,0x06,0x94,0x04,0x95,0x06,
    0x89,0x04,0x97,0x06,0x00,0x00,0x99,0x06,0x9b,0x04,0x9c,0x06,0x9e,0x06,0xa0,0x06,
    0xa2,0x04,0xa3,0x04,0x00,0x00,0x63,0x04,0xa4,0x04,0xa5,0x04,0xa6,0x06,0x00,0x00,
    0x63,0x04,0x00,0x00,0xa8,0x04,0xa9,0x06,0xab,0x04,0xac,0x06,0xae,0x06,0xb0,0x06,
    0xb2,0x06,0x00,0x00,0xb4,0x06,0xb6,0x06,0x89,0x04,0xb8,0x06,0x89,0x04,0xba,0x06,
    0x78,0xff,0x7a,0x00,0x7b,0x00,0x7c,0x49,0x7d,0x4a,0x7e,0xb2,0x7f,0x94,0x22,0x00,
    0x78,0xff,0x7a,0xbf,0x7b,0x25,0x7c,0x80,0x7d,0xfc,0x7e,0xdf,0x7f,0xb6,0x22,0x00,
    0x78,0xff,0x7a,0x80,0x7b,0xfc,0x7c,0xbf,0x7d,0x25,0x7e,0xd5,0x7f,0xfe,0x22,0x00,
    0x78,0x50,0x7a,0x80,0x7b,0xfc,0x7c,0xbf,0x7d,0x25,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0x00,0x7b,0xb0,0x7c,0x08,0x7d,0xca,0x7e,0xf7,0x7f,0xed,0x22,0x00,
    0x78,0xff,0x7a,0xef,0x7b,0x7b,0x7c,0x14,0x7d,0xa5,0x7e,0x59,0x7f,0xce,0x22,0x00,
    0x78,0x00,0x7a,0xff,0x7b,0xff,0x7c,0xb2,0x7d,0x94,0x7e,0x49,0x7f,0x4a,0x22,0x00,
    0x78,0xef,0x7a,0xff,0x7b,0xff,0x7c,0x59,0x7d,0xce,0x7e,0x14,0x7f,0xa5,0x22,0x00,
    0x78,0xff,0x7a,0xdf,0x7b,0x96,0x7c,0x2f,0x7d,0xfe,0x7e,0x5f,0x7f,0xdf,0x22,0x00,
    0x78,0xff,0x7a,0x2f,0x7b,0xfe,0x7c,0xdf,0x7d,0x96,0x7e,0x5a,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x00,0x00,0x08,0x08,0x14,0x14,0x14,0x14,0x08,0x3c,0x03,0x23,0x04,0x0a,0x08,0x08,
    0x10,0x08,0x08,0x10,0x08,0x2a,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,
    0x1c,0x22,0x08,0x0c,0x1c,0x22,0x3e,0x20,0x10,0x18,0x3e,0x02,0x38,0x04,0x3e,0x20,
    0x1c,0x22,0x1c,0x22,0x00,0x00,0x00,0x00,0x10,0x08,0x00,0x00,0x04,0x08,0x1c,0x22,
    0x1c,0x22,0x08,0x14,0x1e,0x22,0x1c,0x22,0x1e,0x22,0x3e,0x02,0x3e,0x02,0x3c,0x02,
    0x22,0x22,0x1c,0x08,0x20,0x20,0x22,0x12,0x02,0x02,0x22,0x36,0x22,0x22,0x1c,0x22,
    0x1e,0x22,0x1c,0x22,0x1e,0x22,0x1c,0x22,0x3e,0x08,0x22,0x22,0x22,0x22,0x22,0x22,
    0x22,0x22,0x22,0x22,0x3e,0x20,0x3e,0x06,0x00,0x02,0x3e,0x30,0x00,0x00,0x00,0x00,
    0x04,0x08,0x00,0x00,0x02,0x02,0x00,0x00,0x20,0x20,0x00,0x00,0x18,0x24,0x00,0x00,
    0x02,0x02,0x08,0x00,0x10,0x00,0x02,0x02,0x0c,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x0c,0x08,0x08,0x0e,0x18,0x00,0x00,0x63,0x77,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x00,0x04,0x00,0x1c,0x00,0x60,0x00,0x60,0x00,0x00,0x00,0x00,0xff,0xff,
    0x01,0x00,0x7f,0x7f,0x40,0x00,0x78,0x3c,0x00,0x00,0xe0,0xc0,0x01,0x03,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x08,0x08,0x14,0x00,0x3e,0x14,0x0a,0x1c,0x10,0x08,0x0a,0x04,0x08,0x00,
    0x04,0x04,0x20,0x20,0x1c,0x08,0x08,0x3e,0x00,0x00,0x00,0x3e,0x00,0x00,0x10,0x08,
    0x32,0x2a,0x08,0x08,0x20,0x18,0x10,0x18,0x14,0x12,0x1e,0x20,0x02,0x1e,0x10,0x08,
    0x22,0x1c,0x22,0x3c,0x08,0x00,0x08,0x00,0x04,0x02,0x3e,0x00,0x10,0x20,0x10,0x08,
    0x2a,0x3a,0x22,0x22,0x22,0x1e,0x02,0x02,0x22,0x22,0x02,0x1e,0x02,0x1e,0x02,0x02,
    0x22,0x3e,0x08,0x08,0x20,0x20,0x0a,0x06,0x02,0x02,0x2a,0x2a,0x26,0x2a,0x22,0x22,
    0x22,0x1e,0x22,0x22,0x22,0x1e,0x02,0x1c,0x08,0x08,0x22,0x22,0x22,0x22,0x22,0x2a,
    0x14,0x08,0x14,0x08,0x10,0x08,0x06,0x06,0x04,0x08,0x30,0x30,0x08,0x14,0x00,0x00,
    0x10,0x00,0x1c,0x20,0x1e,0x22,0x3c,0x02,0x3c,0x22,0x1c,0x22,0x04,0x1e,0x1c,0x22,
    0x1e,0x22,0x0c,0x08,0x18,0x10,0x22,0x12,0x08,0x08,0x36,0x2a,0x1e,0x22,0x1c,0x22,
    0x1e,0x22,0x3c,0x22,0x3a,0x06,0x3c,0x02,0x1e,0x04,0x22,0x22,0x22,0x22,0x22,0x22,
    0x22,0x14,0x22,0x22,0x3e,0x10,0x0c,0x06,0x08,0x08,0x18,0x30,0x06,0x49,0x3e,0x1c,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x40,
    0x00,0xc0,0x0e,0x8f,0x12,0x90,0x2c,0x08,0x3c,0x0f,0x00,0x00,0x06,0x0f,0xff,0x07,
    0x00,0x00,0x7f,0x70,0x00,0x00,0x1e,0x0f,0x00,0x01,0x80,0x00,0x07,0x0f,0x00,0x08,
    0x00,0x3c,0x00,0x24,0x00,0xf8,0x00,0x08,0x00,0x07,0x00,0x04,0x00,0x0f,0x00,0x09,
    0x07,0x07,0x00,0x00,0x70,0x70,0x00,0x00,0x00,0x00,0xe0,0xc0,0x79,0x3f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x78,0x00,0x00,0x00,0x00,
    0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x80,0xc0,0x00,0x00,0xe7,0xc3,0x01,0x03,0x00,0x00,0x0f,0x0f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x3c,0x3c,0x78,0x78,0x3c,0x3c,0xc0,0xc0,0xf3,0xf3,0x00,0x00,
    0xf0,0xe0,0x00,0x81,0x00,0x00,0x0f,0x07,0x00,0x00,0x00,0x00,0xf0,0xf0,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0x0f,0x0f,0x00,0x00,0x3c,0x3c,0x00,0x00,
    0xf0,0xf0,0x00,0x00,0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x60,
    0x06,0x1e,0x60,0xe0,0x00,0xff,0x06,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x60,0x60,0x01,0x00,0xc0,0xc0,0x00,0x00,
    0x60,0x60,0x0e,0x18,0x82,0x04,0xe3,0xc0,0xff,0xff,0x03,0x01,0x00,0x00,0x80,0x00,
    0xe0,0xc0,0x00,0x00,0x00,0x00,0x1e,0x1e,0x78,0xf8,0x00,0xff,0x00,0xff,0x1e,0x1f,
    0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xf8,0x7c,0x7f,0xff,0x00,0x01,0x00,0x00,
    0x80,0xc0,0x07,0x03,0xc0,0x80,0x07,0x07,0x78,0xf8,0x00,0x00,0x00,0x00,0xf8,0x78,
    0xe0,0x80,0xbf,0xff,0x0f,0x07,0xbf,0xff,0x00,0x00,0x00,0x80,0xff,0xff,0x00,0x01,
    0x00,0x80,0x3f,0x1f,0xfc,0xf8,0x00,0x01,0xe0,0xc0,0x07,0x0f,0x00,0x00,0xe0,0xf0,
    0x07,0x07,0x00,0x00,0x70,0x70,0x00,0x00,0x00,0x00,0x80,0x00,0x1f,0x0f,0x00,0xff,
    0x00,0x01,0x00,0xff,0x00,0x80,0x00,0xbc,0x00,0xa4,0x78,0xff,0x00,0xf7,0x00,0x14,
    0x0f,0xff,0x00,0x80,0x00,0xfc,0x00,0x04,0x00,0xff,0x00,0xf3,0x00,0x12,0x00,0x0f,
    0x00,0x08,0xe0,0xf0,0x00,0x00,0x81,0x00,0x07,0x0f,0x00,0x00,0x0f,0xff,0x00,0x00,
    0x00,0xff,0x00,0x80,0x3c,0x3c,0x78,0x78,0x3c,0xfc,0xc0,0xff,0xf3,0xf3,0x00,0x00,
    0xc0,0x80,0xc3,0xe7,0x00,0x00,0x03,0x01,0x00,0xff,0x00,0x01,0xf0,0xff,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0x0f,0xff,0x00,0x80,0x3c,0xfc,0x00,0x00,
    0xf0,0xf3,0x00,0x02,0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x60,
    0x1e,0x1e,0xc0,0x00,0xff,0x00,0x03,0x00,0x00,0x60,0x00,0x10,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x68,0x6c,0x00,0x00,0xc0,0xc0,0x00,0x00,
    0x68,0x6c,0x30,0x60,0x08,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0xc0,0x00,0x03,0x1e,0x1e,0xf0,0xf0,0xff,0xff,0xff,0xff,0x0f,0x0f,
    0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x1e,0xfc,0xf0,0x07,0x1f,0x00,0x00,
    0xc0,0xe0,0x03,0x01,0xc0,0xc0,0x07,0x03,0xf8,0xf0,0x03,0x0f,0x00,0x00,0x7c,0x3c,
    0x00,0x00,0xfe,0xf8,0x07,0x03,0xfe,0xf8,0x00,0x00,0xc0,0xe0,0xff,0xe7,0x03,0x07,
    0xc0,0xe0,0x0f,0x07,0xf0,0xe0,0x03,0x07,0x80,0x00,0x1f,0x3f,0x00,0x00,0xf8,0xfc,
    0x07,0x03,0xe7,0xff,0xff,0xff,0x07,0x01,0xff,0xff,0xff,0xff,0xe0,0x80,0xf8,0xf8,
    0x1f,0x1f,0x00,0x00,0x00,0x00,0xf8,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x80,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x01,0xfc,0xfc,0xc0,0xc0,0x3f,0x3f,
    0x00,0x00,0xfc,0xfc,0x03,0x03,0xfe,0xf8,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x7f,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0xe0,0xff,0xff,0xff,0xff,0x3f,0xff,
    0x00,0x00,0xfe,0xfe,0x03,0x03,0xfc,0xf0,0x00,0x00,0x3f,0x3f,0xfc,0xf0,0x3f,0x3f,
    0x00,0x00,0x00,0x00,0xfc,0xfc,0x0f,0x0f,0x00,0x00,0x00,0x00,0xc0,0xc0,0xff,0xff,
    0xfe,0xfc,0xff,0xff,0x0f,0x3f,0x00,0x00,0xff,0xfc,0xcf,0xff,0xff,0xff,0x00,0x00,
    0xff,0xf8,0x07,0x01,0xff,0xf8,0x00,0x00,0x00,0x80,0xff,0xff,0xff,0xff,0x00,0x01,
    0x1f,0x0f,0xf8,0xf0,0x00,0x80,0x00,0x01,0xfe,0xfe,0x1f,0x0f,0xf8,0xf0,0x7f,0x7f,
    0xfc,0xfc,0x3f,0x7f,0x00,0x00,0x00,0x00,0xfc,0xfe,0x3f,0x3f,0xfe,0xfc,0x7f,0x3f,
    0x7f,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x01,0x00,0xff,0xff,0xff,0xff,0x01,0x00,0xff,0xff,0xff,0xff,0x80,0x00,0xf8,0xf8,
    0x1f,0xff,0x00,0x00,0x00,0xff,0xf8,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x80,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0x01,0x03,0xfc,0xfc,0xc0,0xc0,0xff,0xff,
    0xff,0xff,0xff,0xff,0x03,0x03,0x00,0x00,0x00,0x00,0xf8,0xfe,0x03,0x0f,0x00,0x00,
    0x00,0x00,0x00,0x00,0xf8,0xfe,0x03,0x0f,0xf0,0xf0,0xff,0x1f,0xff,0xff,0xff,0xff,
    0x00,0x00,0xff,0xff,0x01,0x01,0xc0,0x00,0x03,0x07,0x1f,0x1f,0xe0,0xe0,0x3f,0x3f,
    0x00,0x00,0x00,0x00,0xfe,0xfe,0x07,0x07,0x00,0x03,0x00,0x00,0xe0,0xe0,0x7f,0x7f,
    0xf0,0xc0,0xff,0xff,0xff,0xff,0x00,0x00,0xf0,0xc0,0xff,0xff,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0xe0,0xff,0xff,0xff,0xff,0x03,0x07,
    0x07,0x03,0xe0,0xc0,0xc0,0xe0,0x03,0x07,0xff,0xff,0x07,0x03,0xe0,0xc0,0xff,0xff,
    0xf8,0xf0,0xff,0xff,0x00,0x01,0x00,0x80,0xff,0xff,0x1f,0x0f,0xf8,0xf0,0x1f,0x0f,
    0x0f,0x03,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x00,0x00,0x08,0x00,0x00,0x00,0x3e,0x14,0x28,0x1e,0x04,0x62,0x2a,0x12,0x00,0x00,
    0x04,0x08,0x20,0x10,0x1c,0x2a,0x08,0x08,0x10,0x10,0x00,0x00,0x00,0x00,0x04,0x02,
    0x26,0x22,0x08,0x08,0x04,0x02,0x20,0x22,0x3e,0x10,0x20,0x22,0x22,0x22,0x04,0x04,
    0x22,0x22,0x20,0x10,0x08,0x00,0x08,0x08,0x04,0x08,0x3e,0x00,0x10,0x08,0x08,0x00,
    0x1a,0x02,0x3e,0x22,0x22,0x22,0x02,0x22,0x22,0x22,0x02,0x02,0x02,0x02,0x32,0x22,
    0x22,0x22,0x08,0x08,0x20,0x22,0x0a,0x12,0x02,0x02,0x22,0x22,0x32,0x22,0x22,0x22,
    0x02,0x02,0x2a,0x12,0x0a,0x12,0x20,0x22,0x08,0x08,0x22,0x22,0x22,0x14,0x2a,0x36,
    0x14,0x22,0x08,0x08,0x04,0x02,0x06,0x06,0x10,0x20,0x30,0x30,0x22,0x00,0x00,0x00,
    0x00,0x00,0x3c,0x22,0x22,0x22,0x02,0x02,0x22,0x22,0x3e,0x02,0x04,0x04,0x22,0x3c,
    0x22,0x22,0x08,0x08,0x10,0x10,0x0e,0x12,0x08,0x08,0x2a,0x2a,0x22,0x22,0x22,0x22,
    0x22,0x1e,0x22,0x3c,0x02,0x02,0x1c,0x20,0x04,0x24,0x22,0x32,0x22,0x14,0x2a,0x2a,
    0x08,0x14,0x22,0x3c,0x08,0x04,0x0c,0x0c,0x08,0x08,0x18,0x18,0x30,0x00,0x3e,0x77,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x90,0x3c,
    0xf0,0x3c,0xd8,0x78,0x20,0x40,0x01,0x00,0x01,0x00,0x80,0xc0,0x1f,0x3f,0x07,0x07,
    0x00,0x00,0x70,0x70,0x00,0x00,0x1e,0x3c,0x00,0x00,0x80,0xc0,0x07,0x03,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0xf8,0xf8,0x00,0x00,0x07,0x07,0x00,0x00,0x0f,0x0f,0x00,0x00,
    0x00,0x00,0x08,0x00,0x00,0x00,0x14,0x00,0x08,0x00,0x60,0x00,0x2c,0x00,0x00,0x00,
    0x10,0x00,0x08,0x00,0x08,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x1c,0x00,0x1c,0x00,0x3e,0x00,0x1c,0x00,0x10,0x00,0x1c,0x00,0x1c,0x00,0x04,0x00,
    0x1c,0x00,0x0e,0x00,0x00,0x00,0x04,0x00,0x10,0x00,0x00,0x00,0x04,0x00,0x08,0x00,
    0x3c,0x00,0x22,0x00,0x1e,0x00,0x1c,0x00,0x1e,0x00,0x3e,0x00,0x02,0x00,0x3c,0x00,
    0x22,0x00,0x1c,0x00,0x1c,0x00,0x22,0x00,0x3e,0x00,0x22,0x00,0x22,0x00,0x1c,0x00,
    0x02,0x00,0x2c,0x00,0x22,0x00,0x1c,0x00,0x08,0x00,0x1c,0x00,0x08,0x00,0x22,0x00,
    0x22,0x00,0x08,0x00,0x3e,0x00,0x3e,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x00,0x7f,
    0x00,0x00,0x3c,0x00,0x1e,0x00,0x3c,0x00,0x3c,0x00,0x3c,0x00,0x04,0x00,0x20,0x1c,
    0x22,0x00,0x1c,0x00,0x12,0x0c,0x22,0x00,0x1c,0x00,0x22,0x00,0x22,0x00,0x1c,0x00,
    0x02,0x02,0x20,0x20,0x02,0x00,0x1e,0x00,0x18,0x00,0x2c,0x00,0x08,0x00,0x36,0x00,
    0x22,0x00,0x20,0x1c,0x3e,0x00,0x38,0x00,0x08,0x08,0x0e,0x00,0x00,0x00,0x63,0x00,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x10,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0xe0,0xf0,0x79,0xf0,0x07,0x07,
    0x00,0x00,0x70,0x70,0x00,0x00,0x78,0xf0,0x00,0x00,0xe0,0xf0,0x01,0x00,0x00,0x00,
    0x3c,0x00,0x24,0x00,0xf8,0x78,0x00,0x00,0x07,0x00,0x04,0x00,0x0f,0x0f,0x00,0x00,
    0xff,0xff,0x00,0x00,0x7f,0x7f,0x00,0x00,0x18,0x3c,0x18,0x00,0x06,0x00,0xff,0xff,
    0x00,0x00,0xff,0xff,0x00,0x00,0xbc,0xbc,0x00,0x00,0xff,0xff,0xf7,0xf7,0x00,0x00,
    0xff,0xff,0x00,0x00,0xfc,0xfc,0x00,0x00,0xff,0xff,0xf3,0xf3,0x00,0x00,0x0f,0x0f,
    0x00,0x00,0x78,0x3c,0x00,0x04,0x00,0x00,0x1e,0x3c,0x00,0x20,0xff,0xff,0x00,0x00,
    0xff,0xff,0x00,0x00,0x3c,0x3c,0x78,0x78,0xfc,0xfc,0xff,0xff,0xf3,0xf3,0x00,0x00,
    0x00,0x00,0xff,0x7e,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0xff,0xff,0x00,0x00,0xfc,0xfc,0x00,0x00,
    0xf3,0xf3,0x00,0x00,0x0f,0x0f,0x00,0x00,0x00,0xc0,0x00,0xff,0x00,0x03,0x60,0x60,
    0x1e,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x18,0x08,0x04,0x00,0xc0,0x00,0x01,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x68,0x60,0x00,0x00,0xc0,0xc0,0x00,0x00,
    0x68,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0xf0,0xf0,0x0f,0x0f,0x1e,0x1e,0xc0,0x00,0xff,0xe0,0xff,0x01,0x03,0x00,
    0xff,0x00,0x00,0xe0,0x00,0x01,0x00,0x00,0x1e,0x0f,0xc0,0x00,0x7f,0xff,0x00,0x01,
    0xe0,0xf0,0x01,0x00,0xe0,0xe0,0x03,0x01,0xe0,0x80,0x3f,0xff,0x00,0x00,0x3e,0x1e,
    0x00,0x00,0xe0,0x00,0x01,0x00,0xe0,0x00,0x00,0x00,0xf0,0xf8,0xc3,0x81,0x0f,0x1f,
    0xe0,0xf0,0x03,0x01,0xc0,0x80,0x07,0x0f,0x00,0x00,0x7e,0xfc,0x00,0x00,0x7e,0x3f,
    0xff,0x00,0x01,0x00,0x7f,0x00,0x40,0x00,0x7e,0xff,0x00,0x00,0x00,0x00,0xff,0x0f,
    0x00,0x00,0xff,0x00,0x80,0x00,0xbc,0x3c,0x80,0x00,0xff,0x78,0xf7,0x00,0x14,0x00,
    0xff,0x0f,0x80,0x00,0xfc,0x3c,0x00,0x00,0xff,0xc0,0xf3,0xf3,0x00,0x00,0x0f,0x0f,
    0x00,0x00,0x3c,0x78,0x04,0x00,0x00,0x00,0x3c,0x1e,0x20,0x00,0xff,0x00,0x01,0x00,
    0xff,0xf0,0x00,0x00,0x3c,0x3c,0x78,0x78,0xfc,0x3c,0xff,0x00,0xf3,0xf0,0x02,0x00,
    0x00,0x00,0x3c,0x18,0x00,0x18,0x00,0x00,0xff,0x00,0x01,0x00,0xff,0x00,0x80,0x00,
    0x3c,0x00,0x24,0x00,0x78,0x00,0x48,0x00,0xff,0x00,0x81,0x00,0xfc,0x00,0x04,0x00,
    0xf3,0x00,0x12,0x00,0x0f,0x00,0x08,0x00,0xe0,0x60,0xff,0x00,0x07,0x06,0x60,0x60,
    0x1e,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0xc6,0x82,0x48,0xe3,0x61,0x03,0x03,
    0x00,0xc0,0x80,0x40,0xc6,0xc6,0x00,0x48,0x60,0x61,0x01,0x00,0xc0,0xc0,0x00,0x40,
    0x60,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0xf8,0x78,0x1f,0x1e,0x1e,0x1e,0x00,0x00,0xf0,0xf8,0x07,0x1f,0x00,0x00,
    0x00,0x00,0xf0,0xf8,0x07,0x1f,0x00,0x80,0x0f,0x07,0x00,0x00,0xfc,0xf0,0x03,0x07,
    0xf0,0xf8,0x00,0x00,0xf0,0xf0,0x01,0x00,0x00,0x00,0xfe,0xf8,0x03,0x0f,0x1f,0x0f,
    0x00,0x00,0x18,0x7e,0x00,0x00,0x00,0x00,0x18,0x7e,0xfc,0x7e,0x00,0x00,0x3f,0x7e,
    0xf0,0xe0,0x01,0x03,0x80,0xc0,0x0f,0x07,0x00,0x00,0xf8,0xf0,0x81,0xc3,0x1f,0x0f,
    0x00,0x00,0x7e,0x18,0xff,0x1f,0x00,0x00,0xff,0x00,0xff,0xf8,0x00,0x00,0xf8,0xf8,
    0xff,0xff,0x00,0x01,0xff,0xff,0xff,0xff,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
    0xc0,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0x03,0x03,0xfc,0xfc,0xc0,0x80,0xff,0xff,
    0xff,0xff,0xff,0xff,0x03,0x01,0x00,0x00,0x00,0x80,0xff,0xff,0x3f,0xff,0x00,0x00,
    0x00,0x00,0x00,0x80,0xff,0xff,0x3f,0xff,0xf8,0xf8,0x1f,0x0f,0xfc,0xf0,0xff,0xff,
    0x80,0x80,0xff,0xff,0x00,0x00,0x00,0x00,0x0f,0x1f,0x0f,0x0f,0xf0,0xf0,0x3f,0x1f,
    0x80,0x80,0x00,0x00,0xff,0xff,0x03,0x03,0x0f,0x3f,0x00,0x00,0xf0,0xf0,0x3f,0x3f,
    0x00,0x00,0xff,0xfc,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x3f,0x3f,0xc0,0xf0,
    0x03,0x0f,0x00,0x00,0x00,0x00,0x03,0x0f,0xf0,0xf8,0xff,0xff,0xff,0xff,0x0f,0x1f,
    0x01,0x00,0x80,0x00,0xf0,0xf8,0x0f,0x1f,0xff,0xff,0x03,0x07,0xc0,0xe0,0xff,0xff,
    0xe0,0xc0,0xff,0xff,0x03,0x07,0xc0,0xe0,0xff,0xff,0x07,0x03,0xe0,0xc0,0x07,0x03,
    0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x1f,0x1f,0x00,0x00,0x00,0x00,0xf8,0xf8,0x00,0x00,0xf8,0xf8,
    0xff,0xff,0x01,0x07,0xff,0xff,0xff,0xff,0x80,0xe0,0xf8,0xfe,0xff,0xff,0x1f,0x7f,
    0xc0,0xc0,0x3f,0x3f,0x00,0x00,0xfc,0xfc,0x03,0x03,0xfc,0xfc,0x80,0x00,0xff,0xff,
    0xff,0xff,0xff,0xff,0x01,0x00,0x00,0x00,0xc0,0xc0,0xff,0xff,0xff,0xff,0x03,0x0f,
    0x00,0x00,0xc0,0xc0,0xff,0xff,0xff,0xff,0xfc,0xfc,0x07,0x07,0xc0,0x00,0xff,0xff,
    0xc0,0xc0,0x7f,0x7f,0x00,0x00,0x00,0x00,0x1f,0x3f,0x07,0x07,0xf8,0xf8,0x1f,0x1f,
    0x80,0xc0,0x80,0x80,0xff,0xff,0x01,0x01,0xff,0xff,0x00,0x03,0xf8,0xf8,0x1f,0x1f,
    0x00,0x00,0xf0,0xc0,0xff,0xff,0x80,0x83,0x00,0x00,0xff,0xff,0x1f,0x0f,0xfc,0xfe,
    0x3f,0x7f,0x00,0x00,0x00,0x00,0x3f,0x7f,0xfc,0xfe,0x7f,0x3f,0xfe,0xfc,0x3f,0x7f,
    0x00,0x00,0x00,0x00,0xfc,0xfc,0x3f,0x3f,0xfe,0xfe,0x0f,0x1f,0xf0,0xf8,0x7f,0x7f,
    0x80,0x00,0xff,0xff,0x0f,0x1f,0xf0,0xf8,0xff,0xff,0x01,0x00,0x80,0x00,0x01,0x00,
    0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
};
};  // namespace CPU
};  // namespace Cube
