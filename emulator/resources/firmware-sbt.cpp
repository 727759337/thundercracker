/* -*- mode: C; c-basic-offset: 4; intent-tabs-mode: nil -*-
 *
 * Data for the Thundercracker emulator.
 * This file is AUTOMATICALLY GENERATED.
 *
 * Copyright <c> 2011 Sifteo, Inc. All rights reserved.
 */

#include <stdint.h>
#include <cube_cpu_opcodes.h>

namespace Cube {
namespace CPU {

static int FASTCALL sbt_exception(em8051 *aCPU) {
	except(aCPU, EXCEPTION_SBT);
	return 1;
}

static int FASTCALL sbt_block_0000(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0000;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x55,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x81,0xd7);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x00,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0003(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0003;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_000b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x000b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0xe0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0013(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0013;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_001b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x001b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x23,0x45);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0023(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0023;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_002b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x002b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x23,0x53);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0033(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0033;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_003b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x003b;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0043(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0043;
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_004b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x004b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0x9b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0053(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0053;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x22,0x69);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0056(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0056;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xba);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0059(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0059;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x22,0x42);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x0f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x23,0xf0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00c6;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xaf,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x4d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00cb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x2a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00ce;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00d1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00d3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x90,0x0c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00dc;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x93,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x94,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00e5;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x96,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x52);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x53);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x30);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x31);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x35);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x9f,0x37);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_00fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x00fb;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0102(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0102;
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x49,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0108(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0108;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3c,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x01,0x12);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0112(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0112;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0115(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0115;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0116(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0116;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x19,0x8e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0119(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0119;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_011e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x011e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1b,0xe0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0121(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0121;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0122(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0122;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1c,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0125(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0125;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0126(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0126;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0x5a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0129(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0129;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_012e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x012e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0131(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0131;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0132(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0132;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0135(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0135;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0136(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0136;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x19,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0139(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0139;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_013e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x013e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0141(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0141;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0142(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0142;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0145(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0145;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0146(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0146;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0149(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0149;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014d;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_014e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x014e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0151(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0151;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0152(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0152;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0166(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0166;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x1b,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_017e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x017e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_018a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x018a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1a,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0192(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0192;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_019c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x019c;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x0f,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01a0;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01b0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01bc;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1c,0x80);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c2;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xdc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01c8;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01db;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01e7;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1c,0x80);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01ec;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01f6;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_01f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x01f7;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfa);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfb);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1c,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_mem           (aCPU, pc, 0xc5,0x1d,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6d,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcd,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x03,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xcb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x07,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x19,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x19,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x18,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x1c,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1a,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x12,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9c,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1b,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0277(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0277;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_027f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x027f;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x24,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x1e,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1d,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x88,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1e,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0295(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0295;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1d,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x78,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1d,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1e,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xfd,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02a1;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02a2;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ac;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02af;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b1;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02b9;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02bd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02c0;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ca;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02cd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x88);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d0;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d2;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02d5;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02da;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02de;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x10,0x62);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02e3;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02e5;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ea;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x32);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02ed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02ed;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02f1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02f4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x5c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_02fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x02fa;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xa8,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x83,0x03);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe9,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_030a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x030a;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_030d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x030d;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xea,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xeb,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xec,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x00,0x1f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0319(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0319;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x27,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x28,0x85);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x22,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0323(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0323;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe9,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_032d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x032d;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_032f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x032f;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xf2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0331(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0331;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0338(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0338;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x01,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_033b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x033b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x22,0xef);
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0340(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0340;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x27,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x28,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0346(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0346;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x05,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe9,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_034c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x034c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xea,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0350(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0350;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xeb,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x01,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0356(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0356;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0358(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0358;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0359(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0359;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x01,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x83,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2b,0xbf);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x59,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x59,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x01,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0388(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0388;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xf8);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xf9);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x26,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x25,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9a,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x02,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xe1,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x03,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xe2,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x04,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x1c,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x23,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x1c,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5b,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x24,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x01,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03df;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9c,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x22,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x01,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03e9;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03ec;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x22,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03f0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x27,0x88);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x28,0x02);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xf0,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x26,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03fc;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_03fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x03fe;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x26,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0402(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0402;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0404(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0404;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xa8,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_041b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x041b;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x82,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x27,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x27,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x28,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x28,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_042c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x042c;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x28,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_042f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x042f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0432(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0432;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x20,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x25,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x25,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_043a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x043a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_043d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x043d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x26,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x26,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0447(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0447;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x04,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_044a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x044a;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xea,0x83);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x59);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0453(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0453;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x84,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x27,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x85,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_045c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x045c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x02,0xf4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_045f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x045f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0473(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0473;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_048a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x048a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_048d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x048d;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0494(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0494;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0497(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0497;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_049e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x049e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04a1;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04a8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04ab;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04b2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04b5;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04bc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04bf;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04c6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04c9;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04d0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04e4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04e4;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04f9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_04fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x04fc;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0501(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0501;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0504(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0504;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0509(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0509;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_050c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x050c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x0c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0511(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0511;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0514(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0514;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0519(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0519;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_051c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x051c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x14,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0521(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0521;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0524(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0524;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x18,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0529(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0529;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_052c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x052c;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x1c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0531(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0531;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0534(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0534;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0537(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0537;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0541(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0541;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0544(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0544;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_055a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x055a;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_055b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x055b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_055e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x055e;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0561(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0561;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0567(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0567;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_056a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x056a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_056d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x056d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0570(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0570;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0573(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0573;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0576(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0576;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0579(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0579;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_057b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x057b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0583(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0583;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0586(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0586;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_058c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x058c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_058f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x058f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xcb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0592(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0592;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0595(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0595;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0598(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0598;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_059b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x059b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_059e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x059e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05a0;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05a8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05a8;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05ab;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05b7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05ba;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05c3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05c5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05cd;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d0;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05d9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xdb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05dc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05df;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05e8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05ea;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05f2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05f5;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05fb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_05fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x05fe;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0601(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0601;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0604(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0604;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0607(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0607;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_060a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x060a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_060d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x060d;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_060f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x060f;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0617(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0617;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_061a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x061a;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0620(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0620;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0623(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0623;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0626(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0626;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0629(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0629;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_062c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x062c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_062f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x062f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0632(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0632;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0634(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0634;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_063c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x063c;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_063f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x063f;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0645(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0645;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0648(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0648;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_064b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x064b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_064e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x064e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0651(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0651;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0654(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0654;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0657(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0657;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0659(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0659;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0661(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0661;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0664(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0664;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_066a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x066a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_066d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x066d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0670(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0670;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0673(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0673;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0676(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0676;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0679(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0679;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_067c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x067c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_067e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x067e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0686(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0686;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_068e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x068e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x05,0x37);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0691(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0691;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0696(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0696;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0699(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0699;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ad;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0xd4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xcb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b3;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06b7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ba;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xcc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06cd;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ce;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x07,0xae);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06d7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06da;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xcb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x07,0xde);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06e9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ec;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ef;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06f2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06f4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06fc;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_06ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x06ff;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0702(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0702;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0705(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0705;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0708(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0708;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_070a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x070a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0712(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0712;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0715(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0715;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_071b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x071b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_071e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x071e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xdb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0721(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0721;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x07,0xde);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0724(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0724;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0727(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0727;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_072a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x072a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_072d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x072d;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_072f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x072f;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0737(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0737;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_073a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x073a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_073d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x073d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0740(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0740;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0743(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0743;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0745(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0745;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_074d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x074d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0750(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0750;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0756(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0756;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0759(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0759;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_075c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x075c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x07,0xde);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_075f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x075f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0762(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0762;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0765(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0765;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0768(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0768;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_076a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x076a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0772(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0772;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0775(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0775;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0778(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0778;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_077b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x077b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_077e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x077e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0780(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0780;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0788(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0788;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_078b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x078b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_078e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x078e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0791(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0791;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0794(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0794;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0796(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0796;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_079e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x079e;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07a6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07a9;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ab;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ad;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ae;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07b1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07b4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07b7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ba;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07bc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07c4;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07d5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0xd4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07d8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07db;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0xb0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07de;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xbb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e3;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07e6;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ef;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07f8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07fb;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_07ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x07ff;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0802(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0802;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0815(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0815;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0816(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0816;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0819(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0819;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0xe0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_081c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x081c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_081f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x081f;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0822(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0822;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0828(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0828;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_082b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x082b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_082e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x082e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0831(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0831;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0834(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0834;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0837(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0837;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_083a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x083a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_083c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x083c;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0844(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0844;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0847(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0847;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_084a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x084a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_084d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x084d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0850(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0850;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0852(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0852;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_085a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x085a;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_085d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x085d;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0863(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0863;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0866(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0866;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0869(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0869;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_086c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x086c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_086f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x086f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0872(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0872;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0875(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0875;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0877(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0877;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_087f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x087f;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0882(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0882;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0885(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0885;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0888(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0888;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_088b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x088b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_088d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x088d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0895(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0895;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0898(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0898;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_089e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x089e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08a1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08a4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08a7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08aa;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ad;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08b0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08b2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ba;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08c3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08c6;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08c8;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d0;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08d8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08db;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08dd;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08df;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08e0;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08e3;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08e9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ec;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08ef;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x3b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08f2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08f5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08f8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08fb;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_08fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x08fd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0905(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0905;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0908(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0908;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_090b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x090b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_090e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x090e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0911(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0911;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0913(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0913;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_091b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x091b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_092c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x092c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0x1c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_092f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x092f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0932(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0932;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x07,0xf8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0935(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0935;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0938(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0938;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x08,0xd0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_093b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x093b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_093e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x093e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0940(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0940;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0943(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0943;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_094c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x094c;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0952(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0952;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x79);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0955(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0955;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xdb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0958(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0958;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_095c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x095c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_095f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x095f;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0972(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0972;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0973(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0973;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0976(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0976;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x18);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0979(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0979;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_097c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x097c;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_097f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x097f;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0985(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0985;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0988(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0988;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xdb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_098b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x098b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x83);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_098e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x098e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0991(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0991;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0994(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0994;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0997(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0997;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0999(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0999;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09a1;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09a4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09a7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09aa;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ad;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09af;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09b7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09b7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ba;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09c0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09c3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09c3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09c6;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x83);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09c9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09cc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09cc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09cf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d2;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09d4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09dc;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09df;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09e2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09e5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09e8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09ea;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09f2;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09f5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09f8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09fb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_09fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x09fe;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a00;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a08(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a08;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a10(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a10;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a13(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a13;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a15(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a15;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a17(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a17;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a18(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a18;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a1b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a1b;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a21(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a21;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a24(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a24;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a27;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x89);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a2a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a2a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a2d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a2d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a30;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a33(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a33;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a35(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a35;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a3d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a3d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a40;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a43;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a46;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a49(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a49;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a4b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a53;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a56;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a59(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a59;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a5c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a5c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a5f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a61(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a61;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a69;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a7a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a7a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x79);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a7d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a7d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a80;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x55);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a83(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a83;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a86(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a86;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a89(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a89;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a8c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a8c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a8e;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a91(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a91;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0a9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0a9a;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0xc7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aa6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aa6;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aaa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aaa;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aad;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac0;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x50);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ac7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ac7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aca;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0acd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0acd;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ad9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ad9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0xe0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0adc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0adc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0adf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0adf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ae2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ae2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ae5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ae5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ae7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ae7;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0aef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0aef;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0af8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0af8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0afb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0afb;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0afd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0afd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b05(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b05;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b08(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b08;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b0e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b0e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b11(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b11;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b14;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0xe0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b17(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b17;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b1a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b1d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b20;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b22(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b22;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b2a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b2a;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b2d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b2d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b30;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b33(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b33;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b36;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b38(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b38;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b40;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b48(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b48;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b4b;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b4d;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b4f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b4f;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b50;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b53;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b59(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b59;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b5c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b5c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b5f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0xe6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b62(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b62;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b65(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b65;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b68;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b6b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b6b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b6d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b6d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b75;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b78;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b7b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b7b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b7e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b81;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b83(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b83;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b8b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b8e;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b94(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b94;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b97(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b97;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b9a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0xe6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0b9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0b9d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba6;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ba8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ba8;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bb0;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bb3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bb3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bb6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bb6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bb9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bb9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bbc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bbc;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bbe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bbe;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bc6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bc6;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bd7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bd7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0xc7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bda(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bda;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bdd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bdd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0xa3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0be9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0be9;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0beb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0beb;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bee;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xdb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bf7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bf7;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0bfd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0bfd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x24);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c00;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c03(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c03;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c07;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c0a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c0a;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c1d;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c1e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c1e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c21(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c21;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x88);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c24(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c24;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c27;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c2a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c2a;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c30;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c33(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c33;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c36;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x2e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c39;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c3c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c3c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c3f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c3f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c42(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c42;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c44(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c44;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c4c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c4c;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c4f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c4f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c52(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c52;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c55(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c55;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c58(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c58;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c5a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c5a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c62(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c62;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c65(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c65;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c68;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c6b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c6b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c6e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c6e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c70;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c78;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c80;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c83(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c83;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c85;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c87;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c88;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c8b;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c91(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c91;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c94(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c94;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xdb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c97(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c97;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x34);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c9a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0c9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0c9d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ca5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ca5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cad;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cb9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cb9;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cbb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cbb;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cc3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cc3;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cc6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cc6;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ccc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ccc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ccf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ccf;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cd2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cd2;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x34);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cd5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cd8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cd8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cdb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cdb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cde(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cde;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ce0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ce0;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ce8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ce8;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ceb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ceb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cee;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cf1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cf1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cf4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cf4;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cf6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cf6;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0cfe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0cfe;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d01;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d04;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d07;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d0a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d0a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d0c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d0c;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d14;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d25;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x24);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d28(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d28;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d2b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d2e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d31(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d31;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0c,0x78);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d34(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d34;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d37(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d37;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d39;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d3c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d3c;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d45(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d45;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d4b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x72);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d4e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d4e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d51;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d55(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d55;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d58(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d58;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d6b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d6b;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d6c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d6f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d6f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d72(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d72;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d75;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d78(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d78;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d7e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d81;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d84(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d84;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x8b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d87(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d87;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d8a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d8a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d8d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d8d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d90;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d92(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d92;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d9a;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0d9d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0d9d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da6;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0da8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0da8;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db0;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0db8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0db8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dbb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dbb;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dbd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dbd;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dbf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dbf;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dc0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dc0;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dc3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dc3;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dc9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dc9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dcc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dcc;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xd3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dcf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dcf;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dd8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dd8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ddb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ddb;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ddd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ddd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0de5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0de5;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0de8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0de8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0deb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0deb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dee;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0df1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0df1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0df3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0df3;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dfb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dfb;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0dfe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0dfe;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e04;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e07;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e0a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e0a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e0d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e0d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e10(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e10;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e13(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e13;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e16(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e16;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e18(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e18;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e20;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e23(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e23;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e26(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e26;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e29(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e29;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e2c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e2c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e2e;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e36;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e39;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e3f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e3f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e42(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e42;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e45(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e45;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x91);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e48(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e48;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e4b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e4e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e4e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e51(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e51;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e53;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e5b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e5b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e5e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e5e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e61(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e61;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e64(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e64;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e67(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e67;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e69;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e71(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e71;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e82(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e82;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x72);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e85;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e88;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x4e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e8b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e8e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0xb0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e91(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e91;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e94(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e94;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e96(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e96;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xf0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0e99(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0e99;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xcb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ea2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ea2;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ea8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ea8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xd4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eab;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eb7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eb7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eba;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xcc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ecd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ecd;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ece(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ece;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ed7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ed7;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eda(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eda;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0edd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0edd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ee0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ee0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x8a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ee3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ee3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ee5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ee5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0eed(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0eed;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ef8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ef8;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0efa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0efa;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0efc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0efc;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0efd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0efd;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f00;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f06(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f06;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f09;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xcb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f0c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f0c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0f,0xde);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f0f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f0f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f12(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f12;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f15(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f15;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x94);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f18(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f18;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f1a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f22(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f22;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f25;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xf9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f28(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f28;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f2b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x9e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f2e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f2e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f30;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f38(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f38;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f3b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f3b;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f41(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f41;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f44(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f44;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xdb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f47(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f47;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0f,0xde);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f4a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f4a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f4d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f50;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xa8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f53;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f55(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f55;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f5d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f5d;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f60;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f63;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f66(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f66;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f69;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f6b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f6b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f73(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f73;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f76(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f76;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x80,0x02);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa6,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f7c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f7c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f7f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f7f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f82(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f82;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0f,0xde);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f85;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f88;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f8b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xbc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f8e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f90;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f98(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f98;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f9b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f9b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0f9e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0f9e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xc6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa4;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fa6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fa6;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fae;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fb7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fb7;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fba;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fbc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fbc;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fc4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fc4;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fd5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xd4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fd8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fd8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x05,0x29);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fdb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fdb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0xab);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fde(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fde;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fe6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fe6;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x25,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x04,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0feb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0feb;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x03,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0fee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0fee;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ff1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ff1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0e,0x96);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ff4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ff4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0d,0x39);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ff7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ff7;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ffa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ffa;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0b,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_0ffd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x0ffd;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x0a,0x8e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1000(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1000;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x03,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1003(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1003;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1006(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1006;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x09,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1009(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1009;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x07,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_100c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x100c;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_100f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x100f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x06,0x96);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1012(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1012;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x05,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1015(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1015;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1018(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1018;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_101b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x101b;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_101e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x101e;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1021(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1021;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1031(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1031;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_103c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x103c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_103f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x103f;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1047(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1047;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1054(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1054;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_105c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x105c;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_105f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x105f;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xb4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1061(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1061;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1062(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1062;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1a,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x23,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x18,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x18);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_107c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x107c;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x10,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1080(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1080;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x0f,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x0f,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1085(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1085;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x24,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x19,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x10,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1092(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1092;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1094(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1094;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x10,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x0f,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1099(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1099;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_109d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x109d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10a0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10a3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x03,0x88);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10a6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x10,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10a9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ad;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x16,0xca);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x16,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10b8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10b8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ba;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x05,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10bd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10bd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x66);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x10,0x62);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10c8;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x32);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10cb;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x10,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10ce;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3e,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x3d,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10d3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10d6;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x3d,0xff);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x3e,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x10,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10e2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10e2;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3d,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x3f,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xc8);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x29,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x08,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x3d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10f0;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x6d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10f3;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5c,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x6a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_10fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x10fe;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5d,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1104(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1104;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x7f,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x67,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1109(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1109;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xf0,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf6,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_111a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x111a;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf5,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_111d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x111d;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf4,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1120(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1120;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf3,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1123(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1123;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1125(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1125;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1126(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1126;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1127(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1127;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1128(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1128;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1129(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1129;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5d,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_112e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x112e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1135(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1135;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0xf0,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0xf1,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1143(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1143;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1145(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1145;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf1,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1148(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1148;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_114a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x114a;
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3f,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3f,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0x04,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_115c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x115c;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x92,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_115e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x115e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1160(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1160;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x06,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1168(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1168;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xec,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1170(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1170;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1178(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1178;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1179(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1179;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2b,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2c,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_118f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x118f;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x2d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2b,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2b,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_119b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x119b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_119f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x119f;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a2;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x2d,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11a9;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x30,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x31,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2f,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11bf;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x32,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x30,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x30,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11cb;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11cf;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11d2;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x32,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11d9;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x35,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x36,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x34,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11ef;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x37,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x35,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x35,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11fb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11fb;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_11ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x11ff;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1202(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1202;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x37,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1209(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1209;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x3a,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x3b,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x39,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x1c,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_121f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x121f;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x3c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3a,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x3a,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_122b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x122b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_122f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x122f;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1232(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1232;
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x3c,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1239(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1239;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2a,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1241(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1241;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1242(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1242;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1248(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1248;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2b,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2b,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1250(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1250;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1255(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1255;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2f,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_125d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x125d;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_125e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x125e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2f,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1264(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1264;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x30,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x30,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_126c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x126c;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x31,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1271(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1271;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x34,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x34,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1279(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1279;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_127a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x127a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x34,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1280(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1280;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x35,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x35,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1288(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1288;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x36,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_128d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x128d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x39,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x39,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1295(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1295;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1296(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1296;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x39,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_129c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x129c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x3a,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x3a,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xf1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12a4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x3b,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12a9;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12ae;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12b1;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2a,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12b9;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12bc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x32);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12bf;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2f,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12c7;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12ca;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x32);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12cd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12cd;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x34,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x34,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x28,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12d5;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12d8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x32);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12db(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12db;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x39,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x39,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x26,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x4d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0x79);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12e8;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12eb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xb9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12ee(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12ee;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12f1;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xa9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12f4;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12f7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12f7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xc7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12fa;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_12fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x12fd;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xd9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1300(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1300;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1303(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1303;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1306(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1306;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1309(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1309;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_130c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x130c;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_130f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x130f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x32);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1312(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1312;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1315(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1315;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1318(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1318;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_131b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x131b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x55);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_131e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x131e;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1321(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1321;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1324(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1324;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x71);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1327(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1327;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_132a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x132a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x43);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_132d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x132d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x8d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1330(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1330;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1332(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1332;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1343(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1343;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1d,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x52,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1354(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1354;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1358(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1358;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_135c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x135c;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_135f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x135f;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x2a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x40,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1366(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1366;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_136b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x136b;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_136e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x136e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0xa1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1371(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1371;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x2f,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1378(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1378;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_137d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x137d;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1380(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1380;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0xa1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1383(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1383;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x34,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_138a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x138a;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_138f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x138f;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1392(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1392;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0xa1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1395(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1395;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x39,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_139c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x139c;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13a1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13a1;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf8,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13a6;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13a9;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13aa;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xb1);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ad;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13c2;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2a,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13cb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0xec);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ce;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2f,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13d7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0xec);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13da;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x34,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x34,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13e3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0xec);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13e6;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x39,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x39,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ec;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0xba,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13ef;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0x58);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13f2;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaf,0x2a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5f,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x12,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_13f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x13f9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2f,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x2d,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x14,0x80);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_140b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x140b;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::cpl_a               (aCPU, pc, 0xf4,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x80,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x98,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x18,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_142b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x142b;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1435(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1435;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x40,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1437(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1437;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_143a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x143a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0xe0,0xf5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1445(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1445;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1447(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1447;
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_144b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x144b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_144e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x144e;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf8,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1464(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1464;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1468(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1468;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_146a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x146a;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_146d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x146d;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1477(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1477;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x2a,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x29,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x2d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1480(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1480;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2b,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2c,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_148e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x148e;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x80,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x4f,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x2a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1495(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1495;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x82,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2b,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2c,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14be;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14bf;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14c9;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14ca;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14d2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14d2;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14da;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14dd;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14e5;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2b,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2b,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14f1;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_14f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x14f5;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2b,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x2c,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1501(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1501;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x88,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1506(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1506;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_150b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x150b;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_151b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x151b;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_151e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x151e;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1521(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1521;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1525(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1525;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_152f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x152f;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1530(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1530;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xed,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1534(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1534;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1536(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1536;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1546(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1546;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1549(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1549;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf8,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1550(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1550;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1554(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1554;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1556(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1556;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1559(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1559;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xf6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1563(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1563;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1564(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1564;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1569(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1569;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x3c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_156c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x156c;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_156f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x156f;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0x73);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1572(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1572;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x65);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1575(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1575;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2a,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_157d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x157d;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1580(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1580;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1583(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1583;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x2f,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x2f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_158b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x158b;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_158e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x158e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1591(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1591;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x34,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x34,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1599(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1599;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_159c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x159c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_159f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x159f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x39,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x39,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x27,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15a7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15aa;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0x79);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ad;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15b0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x7d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15b3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15b6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15b6;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xa9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15b9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15b9;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15bc;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x8b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15bf;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xe6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15c2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x11,0xd9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15c5;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15c8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15c8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x99);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15cb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xef);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ce;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15d1;
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15d4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15d4;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xfa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15d7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15da;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x39);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15dd;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15e0;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15e3;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x55);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15e6;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15e9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ec;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x71);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15ef;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15f2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15f2;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15f5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x12,0x8d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15f8;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15fa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15fa;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x04,0xe4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_15fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x15fd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1d,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x18,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_160e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x160e;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xf0,0xe9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xef,0x21);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xf0,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_161b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x161b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x85,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1623(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1623;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1626(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1626;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x55,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_162e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x162e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1632(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1632;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1639(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1639;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_163c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x163c;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x2a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x29,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x40,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1643(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1643;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1648(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1648;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_164b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x164b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_164e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x164e;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x2f,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2e,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1655(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1655;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_165a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x165a;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_165d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x165d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1660(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1660;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x34,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x33,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1667(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1667;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_166c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x166c;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_166f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x166f;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x7e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1672(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1672;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa8,0x39,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x38,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x58,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1679(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1679;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x28,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_167e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x167e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf8,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1683(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1683;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x00,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1686(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1686;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_168a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x168a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x6c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_168d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x168d;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x01,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x0f,0xe3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1693(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1693;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x24,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2a,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2a,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x01,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16a3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16a6;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x2f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x2f,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x02,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16af;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16b2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16b2;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x34,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x34,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x03,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16bb;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xc4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16be(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16be;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x39,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x39,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16c4;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0xbf,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16c7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16c7;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0x3c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16ca;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1a,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1c,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x01,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x3f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16dc;
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16de;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x16,0xe8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16e1;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x3f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x12,0xa9);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16e8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16e8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x13,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_16eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x16eb;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x1a,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x25,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x23,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe9,0xf0);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x3f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x15,0x64);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1707(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1707;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x06,0x01);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x06,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x06,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x07,0xf9);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x07,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_171a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x171a;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0x52);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_171d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x171d;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6b,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1726(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1726;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2f,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_172f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x172f;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1730(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1730;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x17,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1733(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1733;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x84,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0x85,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe3,0x67);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1742(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1742;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1744(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1744;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xe4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_174c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x174c;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_174d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x174d;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x08,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1756(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1756;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x02,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_175d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x175d;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1762(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1762;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_176f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x176f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1771(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1771;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1780(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1780;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1782(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1782;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1787(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1787;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1796(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1796;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1798(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1798;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17a7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17a7;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x9b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17a9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x5b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17b1;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17b4;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17bf;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x63,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17ca;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x67,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17d5;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x6b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17e0;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x6f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17eb;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x73,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_17f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x17f6;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x77,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1801(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1801;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x44);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_180c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x180c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0xaa);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_180f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x180f;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x69,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_181e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x181e;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x5f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_182d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x182d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x55,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_183c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x183c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x4b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_184b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x184b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x41,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_185a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x185a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x37,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1869(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1869;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x2d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1878(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1878;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x44);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1887(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1887;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0xbf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_188c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x188c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0xca);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1891(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1891;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0xd5);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1896(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1896;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0xe0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_189b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x189b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18a0;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18a5;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x18,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18aa;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0xc3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18ad;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x17,0x44);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18b0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x17,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18b3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x84,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0x85,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18c2;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x00,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18c5;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe3,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18cc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18cc;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18d1;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xee);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18de;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18e0;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xdd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18ef;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_18f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x18f6;
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1d,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x11,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x11,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1901(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1901;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x02,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x02,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1908(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1908;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x0f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_190d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x190d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_191a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x191a;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_191c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x191c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xd6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_192b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x192b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_192d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x192d;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1932(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1932;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xc0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1941(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1941;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1943(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1943;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x04,0xaf);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1952(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1952;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x9b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1954(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1954;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1d,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x1e,0x83);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xa9,0x1b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x1c,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x06,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x30,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x18,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x19,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x18,0xb0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_197a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x197a;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x0f,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x17,0x30);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_197f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x197f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x19,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1983(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1983;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x09,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x18,0xb0);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_198a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x198a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_198e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x198e;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1998(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1998;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x01,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_199b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x199b;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_199d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x199d;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x19,0x54);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19a2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x02,0x77);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19a5;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19a9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19ac;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x48,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_19b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x19b5;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xb9,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x02);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x04);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x40,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x41,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x06);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x42,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x43,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x08);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x0a);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x46,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x47,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x02,0x0c);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x44,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x45,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x16,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x48,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a24(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a24;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x10,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x11,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x12,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x13,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x17,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x10);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x48,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a3d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a3d;
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a49(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a49;
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x3c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a4c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a4c;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4c,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a52(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a52;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a69;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a82(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a82;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1b,0x3d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a85;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0xf7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a88(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a88;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a8b;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x4c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a95;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x5d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1a9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1a9a;
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x56,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1aa9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1aa9;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4c,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x17,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1aaf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1aaf;
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x6e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x33);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ac6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ac6;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1c,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xac,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1adf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1adf;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x5c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ae1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ae1;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0x96,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1af5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1af5;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x46,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1af7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1af7;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1aff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1aff;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x24,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b07(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b07;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0x49);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b17(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b17;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x40,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x41,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x42,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::addc_a_mem          (aCPU, pc, 0x35,0x43,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0xdc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b2b;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x45,0xa0);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x44,0xa0);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xdc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b3b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b3b;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b3d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b3d;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x46,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x47,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3e,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b53(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b53;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b55(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b55;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1a,0x24);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b58(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b58;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b5b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b5b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x85,0x03);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1b60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1b60;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0x81,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bdf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bdf;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1be0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1be0;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bf2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bf2;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1bfb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1bfb;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1b,0x5b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c08(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c08;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x50,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c12(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c12;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1b,0x5b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c1f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c1f;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x39,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c29(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c29;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1b,0x5b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c36(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c36;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c40;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1b,0x5b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c4d;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x10,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x03,0xf0);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x04,0x01);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0x99,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c62(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c62;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c68;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c7e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c7e;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c82(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c82;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c85(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c85;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe3,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1c9f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1c9f;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xdd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ca1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ca1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ca3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ca3;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xc5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cbd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cbd;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xbf,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cbf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cbf;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cc0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cc0;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cd2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cd2;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cdb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cdb;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x68);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ce8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ce8;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cf2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cf2;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1c,0x68);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1cff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1cff;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x03,0xf8);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x04,0x01);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xc7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d14;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d1a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d1a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d30;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d34(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d34;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x12,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d37(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d37;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xef,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d45(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d45;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d47(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d47;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d49(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d49;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8f,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xdd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d57(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d57;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d59(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d59;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d5a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d5a;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d6c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d6c;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d75(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d75;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x04,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d82(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d82;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x04,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x10,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2b,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::addc_a_rx           (aCPU, pc, 0x3c,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbd,0x03,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d95;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbe,0x00,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d98(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d98;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d9c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d9c;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xd7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1d9e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1d9e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1da4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1da4;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1e,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1da7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1da7;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1db6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1db6;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1db8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1db8;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x88,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dc6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dc6;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xee,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dc8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dc8;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1e,0xb4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dce;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x83,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dd5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dd5;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x3e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ddf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ddf;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1de3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1de3;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1de4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1de4;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1de8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1de8;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x81,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0x5f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1df4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1df4;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xdb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1dfa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1dfa;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x04,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e01;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x83,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e17(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e17;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x02,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x03,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e1d;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e21(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e21;
	clk += Opcodes::jbc_bitaddr_offset  (aCPU, pc, 0x10,0x06,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e24(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e24;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e25(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e25;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2c,0x2c);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1d,0xce);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e2b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e2b;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfc);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x06,0x13);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e3c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e3c;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x06,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2b,0xcf);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x03,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xce);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e4b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e4b;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x03,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1e4f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1e4f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x36);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe0,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0x08,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x2b);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x7f);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x70);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x01);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x2c);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eb0;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa0,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eb3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eb3;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eb4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eb4;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2c,0x33);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1d,0xce);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ebd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ebd;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x49,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x01);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ec3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ec3;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ecb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ecb;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ed3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ed3;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1edb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1edb;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ee3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ee3;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1eeb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1eeb;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ef3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ef3;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1efb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1efb;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x80,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f04;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f09;
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x23,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f0c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f0c;
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f0f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f0f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xda,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f1f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f1f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xdc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f2f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f2f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfc,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f3f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f3f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfe,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xff,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f4d;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x09,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xec,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xf9,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe7,0x21);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f59(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f59;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f68;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f6a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f6a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xe5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f74(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f74;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x20,0x38);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f7a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f7a;
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::movx_a_indir_dptr   (aCPU, pc, 0xe0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f89(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f89;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f8b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f8b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xe5,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f95(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f95;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x20,0x38);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1f9b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1f9b;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x84,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x85,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x08);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x52,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x53,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fb2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fb2;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x07,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fb5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fb5;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x84,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x85,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fbf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fbf;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x60);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fc7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fc7;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fcc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fcc;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xf1,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fd3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fd3;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fd8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fd8;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0xf3);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fdf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fdf;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fe4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fe4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1fea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1fea;
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xbf,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x11,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ff0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ff0;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x07,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0xe2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ff7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ff7;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_1ffc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x1ffc;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0xa4);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2001(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2001;
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2004(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2004;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2006(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2006;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_200e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x200e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2013(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2013;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x20,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_201b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x201b;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_201f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x201f;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2023(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2023;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2028(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2028;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_202d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x202d;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xed,0x00,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2030(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2030;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2036(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2036;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x37,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2038(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2038;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_203d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x203d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x6e,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xd8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2043(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2043;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2046(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2046;
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x04,0x0e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2049(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2049;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x0b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2052(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2052;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xc7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2054(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2054;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2057(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2057;
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x08,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_205a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x205a;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x0b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x3c,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xbb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2060(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2060;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2063(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2063;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xc0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x45,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_206f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x206f;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xaa,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2071(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2071;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0x9d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2074(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2074;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x07,0xb6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_207a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x207a;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x21,0x5b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_207d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x207d;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x4d,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2085(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2085;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x57,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_208f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x208f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3e,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x4a,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20a6;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0c,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20ab(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20ab;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x09,0x0f);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20b1;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x20,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20b4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20b4;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x1f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20b8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20b8;
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x07,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x84,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x29,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x98,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20d7;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x0b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20da(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20da;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x30,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xab,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20e1;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x8c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20e3;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x6a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20e5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20e5;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x27);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20e9;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x01,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xb9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xf0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20f1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20f1;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xc1,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_20f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x20f9;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0xf0,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xd1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2110(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2110;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x38);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2113(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2113;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xdf,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xca,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2117(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2117;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xe7,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xc2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_211f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x211f;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x09,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xf1,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2129(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2129;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xf9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xb0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2131(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2131;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::orl_mem_a           (aCPU, pc, 0x42,0x0a,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe9,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x07,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x96,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_214b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x214b;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x29,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_214f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x214f;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xee,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::orl_a_rx            (aCPU, pc, 0x49,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x1f,0x04);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2159(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2159;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x86,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_215b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x215b;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x0b,0x03);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xbb,0x00,0x15);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2161(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2161;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x8c,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x8a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2169(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2169;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_216e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x216e;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x8c);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2176(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2176;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x25,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2178(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2178;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xef,0x00,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_217e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x217e;
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xff,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_217f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x217f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2184(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2184;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x60,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x75,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x60,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x60,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdf,0xec,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2198(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2198;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_219a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x219a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x60,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_219d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x219d;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21a2;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21a4;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x27);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x40);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ae;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21b3;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xf1,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ba;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21bf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21bf;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x1f,0xb2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21c6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21c6;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21cb;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21cf(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21cf;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x51,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x20,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21d3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0xa8);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x49,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfe,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21de(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21de;
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0xe7,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21e1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21e1;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21e6;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xde,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ea;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21ef;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_21f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x21f3;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x52);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x53);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x85,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x84,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2208(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2208;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xab,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_220c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x220c;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfd,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2216(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2216;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0a,0x00,0x00);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x00,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_221a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x221a;
	clk += Opcodes::inc_rx              (aCPU, pc, 0x0b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_221b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x221b;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x04,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x05,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2223(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2223;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x83,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xe7,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xad,0x82,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xae,0x83,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2230(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2230;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2235(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2235;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2239(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2239;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x02,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8e,0x03,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xcb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2241(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2241;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2242(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2242;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xea,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2c,0x37);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x22,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_224a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x224a;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xb9,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe8,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_224f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x224f;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xe9,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2257(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2257;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_225c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x225c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_225e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x225e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe6,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe2,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2263(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2263;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xe7,0x82);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xe9,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2269(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2269;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x82,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x83,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x92,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xe1,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x5a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_227b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x227b;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe1,0x47);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_227e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x227e;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x22,0x84);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x56,0x00);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2284(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2284;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2287(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2287;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x08);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x49,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_228c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x228c;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x10);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x55,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x01,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2295(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2295;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x16);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x3b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_229a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x229a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x1b);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x36,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_229f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x229f;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0xda,0x57);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22a2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22a2;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x26);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22aa(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22aa;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0xda,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x4a,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22b0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22b0;
	clk += Opcodes::xrl_mem_a           (aCPU, pc, 0x62,0x4a,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22b5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22b5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x57,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x4b,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22bb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22bb;
	clk += Opcodes::xrl_mem_a           (aCPU, pc, 0x62,0x4b,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22c0;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22c5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22c5;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x55,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x2f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x55,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xe2,0x20);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22d5;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x92,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x83,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x82,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22e0;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x01,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8c,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x16,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22ef;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8a,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0xec,0x00);
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_22f5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x22f5;
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x08,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5b,0x59);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5c,0x5a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x58,0x12);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcc,0xee);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xc8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2305(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2305;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x6d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2307(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2307;
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::mov_indir_rx_imm    (aCPU, pc, 0x76,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x01,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2315(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2315;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xfd,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x71,0xeb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_231c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x231c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_231e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x231e;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x4c,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x71,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_indir_rx      (aCPU, pc, 0xe6,0x00,0x00);
	clk += Opcodes::xrl_a_rx            (aCPU, pc, 0x69,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x9f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_232b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x232b;
	clk += Opcodes::xrl_a_indir_rx      (aCPU, pc, 0x66,0x00,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x51,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2330(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2330;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x6b,0x00);
	clk += Opcodes::subb_a_imm          (aCPU, pc, 0x94,0x49,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::cjne_a_imm_offset   (aCPU, pc, 0xb4,0x71,0xcd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_233a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x233a;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x54,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x01,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2345(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2345;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xfc);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcc,0xef);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xc8,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x58,0x0f);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x09,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2353(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2353;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xe0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0xd0,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x08,0x1e);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_235a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x235a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x8b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8b,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xff,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x94,0xa3);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x09,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2367(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2367;
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xde);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_236c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x236c;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5a,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x59,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x21,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2378(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2378;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x8e,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_237f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x237f;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x90,0xa3);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2385(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2385;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5a,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x59,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2392(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2392;
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0xe0,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2395(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2395;
	clk += Opcodes::nop                 (aCPU, pc, 0x00,0x00,0x00);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x90,0x5c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2399(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2399;
	clk += Opcodes::djnz_mem_offset     (aCPU, pc, 0xd5,0x58,0x4d);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_239c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x239c;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xc8,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x94,0xa3);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x08,0x20);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23a4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xe0,0x00);
	clk += Opcodes::cpl_a               (aCPU, pc, 0xf4,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x5a,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x32,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23ad;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x6d,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xd0,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x59,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0x80,0x00);
	clk += Opcodes::mov_indir_rx_a      (aCPU, pc, 0xf6,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23c4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23c4;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x90,0x0c);
	clk += Opcodes::anl_mem_imm         (aCPU, pc, 0x53,0x94,0xf3);
	clk += Opcodes::xrl_mem_imm         (aCPU, pc, 0x63,0x90,0x04);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x56,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23d3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23d6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23d6;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe2,0x07);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23d9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23d9;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xe1,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23dc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23dc;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x55,0xda);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23df(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23df;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8b,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x8d,0xff);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x08,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23e9;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xc6,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xd0,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0xe0,0x00);
	clk += Opcodes::reti                (aCPU, pc, 0x32,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_23f0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x23f0;
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa6,0x04);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xc8,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xc0,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x04);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xba,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x8c,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xa9,0x00);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0x89,0x50);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x08);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xb9,0x08);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xab,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcb,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xca,0xee);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xc8,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xcd,0xff);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xa9,0x20);
	clk += Opcodes::orl_mem_imm         (aCPU, pc, 0x43,0xb9,0x20);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0xad,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x22,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2424(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2424;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::orl_a_imm           (aCPU, pc, 0x44,0xe0,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5b,0x00);
	clk += Opcodes::cpl_a               (aCPU, pc, 0xf4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x5c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_242f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x242f;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5d,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2437(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2437;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_243a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x243a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5e,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_243e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x243e;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2441(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2441;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x03,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2447(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2447;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0xfc);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_244a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x244a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x1f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24ad(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24ad;
	clk += Opcodes::jc_offset           (aCPU, pc, 0x40,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24af;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24b3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24b3;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x10);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24cb;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24ce;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24d1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24d1;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5f,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x75);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x30);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24e9;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24ec(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24ec;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24ef;
	clk += Opcodes::dec_rx              (aCPU, pc, 0x1a,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x04,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x24,0x4a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24f9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24f9;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24fc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24fc;
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_24ff(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x24ff;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5f,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x35);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xa7,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_250a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x250a;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_250d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x250d;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2510(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2510;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2512(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2512;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2515(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2515;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2519(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2519;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_251c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x251c;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_251f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x251f;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2521(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2521;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2524(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2524;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5e,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5d,0x80);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x83,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x5d,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x5d,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x83,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::jnc_offset          (aCPU, pc, 0x50,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2586(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2586;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2589(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2589;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_258b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x258b;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_258e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x258e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x14);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0xaa);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0x55);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x2a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x80,0x54);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xa0,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5e,0x80);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x73);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x5d,0x80);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x82,0xa0);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x51);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x71);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x95,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x31);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5d,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5d,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25ea(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25ea;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25eb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25eb;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5e,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5e,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x01,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f3;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25f4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25f4;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x5f,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x02,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0x0a,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_25fd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x25fd;
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2600(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2600;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2602(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2602;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xa7,0xfd);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2605(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2605;
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x80,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0xb0,0x75);
	clk += Opcodes::mov_c_bitaddr       (aCPU, pc, 0xa2,0xa7,0x00);
	clk += Opcodes::mov_bitaddr_c       (aCPU, pc, 0x92,0x0a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_260f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x260f;
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x02,0x00);
	clk += Opcodes::push_mem            (aCPU, pc, 0xc0,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xb5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x22,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2617(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2617;
	clk += Opcodes::mov_indir_rx_imm    (aCPU, pc, 0x76,0x00,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xfb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_261c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x261c;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x60,0x63);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x7a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x00,0x00);
	clk += Opcodes::pop_mem             (aCPU, pc, 0xd0,0x02,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_262a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x262a;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_262f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x262f;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2630(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2630;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xff,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2635(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2635;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x03,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2637(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2637;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x46);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_263a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x263a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x60,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x26,0x0f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2640(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2640;
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x50,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x08);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2646(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2646;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x03,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x54,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x67,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0xff);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_264f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x264f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x54,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x67,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2654(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2654;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2656(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2656;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x60,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_265b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x265b;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x25,0x0a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_265e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x265e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x75,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x66,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x63,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x3f,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x63,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x50,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x51,0x08);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x68,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x69,0x83);
	clk += Opcodes::jmp_indir_a_dptr    (aCPU, pc, 0x73,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2679(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2679;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_267a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x267a;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x64);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe0,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2684(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2684;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x20,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2687(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2687;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x2f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2689(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2689;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x40,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_268c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x268c;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_268e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x268e;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x60,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2691(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2691;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0xd8);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2694(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2694;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0x80,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2697(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2697;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0xe7);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_269a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x269a;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xa0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_269d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x269d;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0xf6);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26a0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26a0;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xc0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26a3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26a3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x05);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26a6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26a6;
	clk += Opcodes::cjne_rx_imm_offset  (aCPU, pc, 0xba,0xe0,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26a9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26a9;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x11);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26ac;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x27,0x34);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26af(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26af;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x83);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26b8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26b8;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xae);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26c1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26c1;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x40,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26d0;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26d3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26d3;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xfb,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26d5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26d5;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26d8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26d8;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x24);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26e7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26e7;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xa5);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x28);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_26f6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x26f6;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x40);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xff);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x22);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2705(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2705;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x90);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2711(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2711;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe1,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x64,0x02);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2716(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2716;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x07,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2718(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2718;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xe2,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x64,0x14);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_271d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x271d;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_271f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x271f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x37);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2728(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2728;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x58);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2731(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2731;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2734(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2734;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2737(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2737;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x5d,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xfe,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5e,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x49);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2749(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2749;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0xfe,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x5f,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x7a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2758(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2758;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x65);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x64);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2764(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2764;
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x5e,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_mem          (aCPU, pc, 0x95,0x5f,0x00);
	clk += Opcodes::xrl_a_imm           (aCPU, pc, 0x64,0xff,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x66,0x06);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2774(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2774;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x65,0x82);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x24,0x2f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_277a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x277a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x7a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2783(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2783;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x98);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2798(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2798;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x64,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x7a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27ae;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xba);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27ba(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27ba;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x62);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xc9);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27c9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27c9;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0xe0,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27ce(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27ce;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x62,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27e0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27e0;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xf3);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x27);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_27f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x27f3;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x65,0x00);
	clk += Opcodes::inc_mem             (aCPU, pc, 0x05,0x65,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::rrc_a               (aCPU, pc, 0x13,0x00,0x00);
	clk += Opcodes::xch_a_rx            (aCPU, pc, 0xca,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x62,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x62,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2813(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2813;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xc9,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x27,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x04,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2819(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2819;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x7a,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x26,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_281d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x281d;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x68,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x69,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2824(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2824;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_282b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x282b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x1b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2830(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2830;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x61,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x33,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_283f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x283f;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x10,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_284b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x284b;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x04,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_285b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x285b;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x01,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_286d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x286d;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe9,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2872(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2872;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2876(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2876;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_287b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x287b;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2881(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2881;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_288b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x288b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x7a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2894(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2894;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2897(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2897;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_289a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x289a;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x28,0x2b);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28a5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28a5;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28ac(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28ac;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x1a);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28b1(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28b1;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::orl_a_mem           (aCPU, pc, 0x45,0x61,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2f,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28c0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28c0;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9b,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28cb(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28cb;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x02,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28d7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28d7;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x03,0x00);
	clk += Opcodes::anl_a_rx            (aCPU, pc, 0x5a,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0xe0,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfc,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28e9(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28e9;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xe8,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28ef(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28ef;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28f3;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28f8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28f8;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_28fe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x28fe;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2908(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2908;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x7a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2911(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2911;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2914(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2914;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2917(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2917;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x28,0xac);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2922(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2922;
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x0f,0x00);
	clk += Opcodes::anl_a_mem           (aCPU, pc, 0x55,0x66,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::setb_bitaddr        (aCPU, pc, 0xd2,0x0b,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2929(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2929;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x61,0x12);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_292e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x292e;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x03,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x9a,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x61,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x61,0xf0);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0x0c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_293e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x293e;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x1e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2940(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2940;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x01,0x00);
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xac,0x61,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x62,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_294a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x294a;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xea,0x00,0x00);
	clk += Opcodes::add_a_rx            (aCPU, pc, 0x2a,0x00,0x00);
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xb5,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x04,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x05,0x00);
	clk += Opcodes::dec_rx              (aCPU, pc, 0x18,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2955(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2955;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x82,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8d,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_295c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x295c;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdb,0xf7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_295e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x295e;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x05,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2962(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2962;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe7,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2967(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2967;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0a,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_296d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x296d;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x40,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x65,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x65,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x09,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2977(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2977;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x7a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2980(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2980;
	clk += Opcodes::jb_bitaddr_offset   (aCPU, pc, 0x20,0x0b,0x03);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2983(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2983;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2986(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2986;
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0x0b,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x66,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x99,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2990(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2990;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x66,0x61);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x62,0x08);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2996(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2996;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_299b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x299b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xe6);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29a4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29a4;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29ae(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29ae;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29bc(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29bc;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29c2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29c2;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x90);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29ca(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29ca;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29d0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29d0;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x90);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29dd(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29dd;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x7a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29e3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29e3;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29e6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29e6;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xf3);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_29f3(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x29f3;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd6,0x00);
	clk += Opcodes::mov_indir_rx_mem    (aCPU, pc, 0xa6,0x66,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a01(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a01;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x2c,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a09(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a09;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a0f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a0f;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe0,0x09);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a14(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a14;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0xe6);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a1d;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xd5,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x82,0x00);
	clk += Opcodes::inc_rx              (aCPU, pc, 0x08,0x00,0x00);
	clk += Opcodes::mov_mem_indir_rx    (aCPU, pc, 0x86,0x83,0x00);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x25,0x19);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a27(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a27;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x61,0x00);
	clk += Opcodes::rr_a                (aCPU, pc, 0x03,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x61,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x62,0x00);
	clk += Opcodes::dec_a               (aCPU, pc, 0x14,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8a,0x62,0x00);
	clk += Opcodes::jnz_offset          (aCPU, pc, 0x70,0xda,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a35(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a35;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x65,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x65,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x08,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a3b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a3b;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x90);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x19,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a43(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a43;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x64,0x00);
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x1f,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0d,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a49(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a49;
	clk += Opcodes::dec_mem             (aCPU, pc, 0x15,0x64,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x65,0x08);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x90);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x29);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x06,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a56(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a56;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x68,0x7a);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x69,0x26);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a5c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a5c;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x26,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a5f;
	clk += Opcodes::mov_rx_mem          (aCPU, pc, 0xaa,0x82,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a63(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a63;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8b,0x04,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x14,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a67(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a67;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdc,0xfe,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a69(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a69;
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xdd,0xfc,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a6b(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a6b;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x8c,0x03,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xf4,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a6f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a6f;
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a70;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a73(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a73;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::cjne_a_mem_offset   (aCPU, pc, 0xb5,0x83,0xf2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a81(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a81;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfd);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x80,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xfe);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x04,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x08,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6a,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2a9c(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2a9c;
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x03,0xff);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2aa2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2aa2;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x85);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf9,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfa,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xfb,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ab4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ab4;
	clk += Opcodes::mov_mem_rx          (aCPU, pc, 0x89,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ab6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ab6;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x0e,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ac4(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ac4;
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xeb,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xe6,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ad0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ad0;
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0x14,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ad2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ad2;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::xrl_a_mem           (aCPU, pc, 0x65,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd8,0xd0,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ae6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ae6;
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::mov_a_imm           (aCPU, pc, 0x74,0x12,0x00);
	clk += Opcodes::subb_a_rx           (aCPU, pc, 0x99,0x00,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::add_a_mem           (aCPU, pc, 0x25,0x84,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x84,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x85,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x85,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xda,0xbd,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2af7(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2af7;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2afe(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2afe;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x84);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x85);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b04(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b04;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::movc_a_indir_a_dptr (aCPU, pc, 0x93,0x00,0x00);
	clk += Opcodes::jz_offset           (aCPU, pc, 0x60,0x15,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b08(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b08;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0xe0,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::rlc_a               (aCPU, pc, 0x33,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x01);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x6c,0x00);
	clk += Opcodes::addc_a_imm          (aCPU, pc, 0x34,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x92,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::sjmp_offset         (aCPU, pc, 0x80,0xe7,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b1d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b1d;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x84,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x85,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b24(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b24;
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x82,0x00);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6a,0x82);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x6b,0x83);
	clk += Opcodes::mov_rx_a            (aCPU, pc, 0xf8,0x00,0x00);
	clk += Opcodes::swap_a              (aCPU, pc, 0xc4,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x79,0x02,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b30;
	clk += Opcodes::anl_a_imm           (aCPU, pc, 0x54,0x0f,0x00);
	clk += Opcodes::clr_bitaddr         (aCPU, pc, 0xc2,0xd6,0x00);
	clk += Opcodes::clr_c               (aCPU, pc, 0xc3,0x00,0x00);
	clk += Opcodes::da_a                (aCPU, pc, 0xd4,0x00,0x00);
	clk += Opcodes::jnb_bitaddr_offset  (aCPU, pc, 0x30,0xe4,0x01);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b39(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b39;
	clk += Opcodes::inc_a               (aCPU, pc, 0x04,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b3a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b3a;
	clk += Opcodes::add_a_imm           (aCPU, pc, 0x24,0x10,0x00);
	clk += Opcodes::rl_a                (aCPU, pc, 0x23,0x00,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_mem           (aCPU, pc, 0xe5,0x6c,0x00);
	clk += Opcodes::movx_indir_dptr_a   (aCPU, pc, 0xf0,0x00,0x00);
	clk += Opcodes::inc_dptr            (aCPU, pc, 0xa3,0x00,0x00);
	clk += Opcodes::mov_a_rx            (aCPU, pc, 0xe8,0x00,0x00);
	clk += Opcodes::djnz_rx_offset      (aCPU, pc, 0xd9,0xea,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b46(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b46;
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x82,0x6a);
	clk += Opcodes::mov_mem_mem         (aCPU, pc, 0x85,0x83,0x6b);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b4d(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b4d;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0x70);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b50;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0xb2);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x01);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x40);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2c,0x57);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b5f(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b5f;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x20);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2c,0x5f);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0xfe);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b68(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b68;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0xb6);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x67);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b77(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b77;
	clk += Opcodes::clr_a               (aCPU, pc, 0xe4,0x00,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6a,0x00);
	clk += Opcodes::mov_mem_a           (aCPU, pc, 0xf5,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x55);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b82(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b82;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x26);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x19);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b8e(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b8e;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x18);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x46);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2b9a(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2b9a;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x18);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x00);
	clk += Opcodes::mov_dptr_imm        (aCPU, pc, 0x90,0x2e,0x1f);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2a,0xa2);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ba6(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ba6;
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6a,0x38);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6b,0x02);
	clk += Opcodes::mov_mem_imm         (aCPU, pc, 0x75,0x6c,0x50);
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x22,0x4f);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bb2(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bb2;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x2b,0x24);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bb5(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bb5;
	clk += Opcodes::lcall_address       (aCPU, pc, 0x12,0x00,0xfb);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2bb8(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2bb8;
	clk += Opcodes::ljmp_address        (aCPU, pc, 0x02,0x2a,0x9c);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f00(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f00;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x49,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x4a,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xb2,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0x94,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f10(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f10;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xb6,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f20(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f20;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xd5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xfe,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f30(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f30;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x50,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x80,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfc,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xbf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x25,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f40(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f40;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xb0,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x08,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xca,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xf7,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xed,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f50(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f50;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xef,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x7b,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x14,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xa5,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x59,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xce,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f60(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f60;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0x00,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xb2,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x94,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x49,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0x4a,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f70(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f70;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xef,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x59,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xce,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x14,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xa5,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f80(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f80;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0x96,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0x2f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xfe,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x5f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xdf,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2f90(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2f90;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0x2f,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xfe,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xdf,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0x96,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0x5a,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fa0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fa0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fb0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fb0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fc0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fc0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fd0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fd0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2fe0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2fe0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}

static int FASTCALL sbt_block_2ff0(em8051 *aCPU)
{
	unsigned clk = 0;
	unsigned pc = 0x2ff0;
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x78,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7a,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7b,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7c,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7d,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7e,0xff,0x00);
	clk += Opcodes::mov_rx_imm          (aCPU, pc, 0x7f,0xff,0x00);
	clk += Opcodes::ret                 (aCPU, pc, 0x22,0x00,0x00);
	aCPU->mPC = pc;
	return clk;
}
const sbt_block_t sbt_rom_code[] = {
	&sbt_block_0000,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0003,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_000b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0013,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_001b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0023,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_002b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0033,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_003b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0043,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_004b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0053,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0056,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0059,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00d1,
	&sbt_exception,
	&sbt_block_00d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_00fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0102,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0108,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0112,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0115,
	&sbt_block_0116,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0119,
	&sbt_block_011a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_011d,
	&sbt_block_011e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0121,
	&sbt_block_0122,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0125,
	&sbt_block_0126,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0129,
	&sbt_block_012a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_012d,
	&sbt_block_012e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0131,
	&sbt_block_0132,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0135,
	&sbt_block_0136,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0139,
	&sbt_block_013a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_013d,
	&sbt_block_013e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0141,
	&sbt_block_0142,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0145,
	&sbt_block_0146,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0149,
	&sbt_block_014a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_014d,
	&sbt_block_014e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0151,
	&sbt_block_0152,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0166,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_017e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_018a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0192,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_019c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01c2,
	&sbt_exception,
	&sbt_block_01c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01db,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_01f6,
	&sbt_block_01f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0277,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_027f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0295,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02a1,
	&sbt_block_02a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02af,
	&sbt_exception,
	&sbt_block_02b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02d0,
	&sbt_exception,
	&sbt_block_02d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02de,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02e3,
	&sbt_exception,
	&sbt_block_02e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02ed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_02fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_030a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_030d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0319,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0323,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_032d,
	&sbt_exception,
	&sbt_block_032f,
	&sbt_exception,
	&sbt_block_0331,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0338,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_033b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0340,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0346,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_034c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0350,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0356,
	&sbt_exception,
	&sbt_block_0358,
	&sbt_block_0359,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0388,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_03fc,
	&sbt_exception,
	&sbt_block_03fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0402,
	&sbt_exception,
	&sbt_block_0404,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_041b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_042c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_042f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0432,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_043a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_043d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0447,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_044a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0453,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_045c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_045f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0473,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_048a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_048d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0494,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0497,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_049e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04b2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04e4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_04fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0501,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0504,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0509,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_050c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0511,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0514,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0519,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_051c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0521,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0524,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0529,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_052c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0531,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0534,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0537,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0541,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0544,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_055a,
	&sbt_block_055b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_055e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0561,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0567,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_056a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_056d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0570,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0573,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0576,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0579,
	&sbt_exception,
	&sbt_block_057b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0583,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0586,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_058c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_058f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0592,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0595,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0598,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_059b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_059e,
	&sbt_exception,
	&sbt_block_05a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05a8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05c3,
	&sbt_exception,
	&sbt_block_05c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05e8,
	&sbt_exception,
	&sbt_block_05ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_05fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0601,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0604,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0607,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_060a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_060d,
	&sbt_exception,
	&sbt_block_060f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0617,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_061a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0620,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0623,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0626,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0629,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_062c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_062f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0632,
	&sbt_exception,
	&sbt_block_0634,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_063c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_063f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0645,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0648,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_064b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_064e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0651,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0654,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0657,
	&sbt_exception,
	&sbt_block_0659,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0661,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0664,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_066a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_066d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0670,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0673,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0676,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0679,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_067c,
	&sbt_exception,
	&sbt_block_067e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0686,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_068e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0691,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0696,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0699,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06cd,
	&sbt_block_06ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06f2,
	&sbt_exception,
	&sbt_block_06f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_06ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0702,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0705,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0708,
	&sbt_exception,
	&sbt_block_070a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0712,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0715,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_071b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_071e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0721,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0724,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0727,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_072a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_072d,
	&sbt_exception,
	&sbt_block_072f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0737,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_073a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_073d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0740,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0743,
	&sbt_exception,
	&sbt_block_0745,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_074d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0750,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0756,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0759,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_075c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_075f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0762,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0765,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0768,
	&sbt_exception,
	&sbt_block_076a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0772,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0775,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0778,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_077b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_077e,
	&sbt_exception,
	&sbt_block_0780,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0788,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_078b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_078e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0791,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0794,
	&sbt_exception,
	&sbt_block_0796,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_079e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07a9,
	&sbt_exception,
	&sbt_block_07ab,
	&sbt_exception,
	&sbt_block_07ad,
	&sbt_block_07ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ba,
	&sbt_exception,
	&sbt_block_07bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07db,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07de,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07e1,
	&sbt_exception,
	&sbt_block_07e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_07ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0802,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0815,
	&sbt_block_0816,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0819,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_081c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_081f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0822,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0828,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_082b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_082e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0831,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0834,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0837,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_083a,
	&sbt_exception,
	&sbt_block_083c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0844,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0847,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_084a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_084d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0850,
	&sbt_exception,
	&sbt_block_0852,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_085a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_085d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0863,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0866,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0869,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_086c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_086f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0872,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0875,
	&sbt_exception,
	&sbt_block_0877,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_087f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0882,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0885,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0888,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_088b,
	&sbt_exception,
	&sbt_block_088d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0895,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0898,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_089e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08b0,
	&sbt_exception,
	&sbt_block_08b2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08c6,
	&sbt_exception,
	&sbt_block_08c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08db,
	&sbt_exception,
	&sbt_block_08dd,
	&sbt_exception,
	&sbt_block_08df,
	&sbt_block_08e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_08fb,
	&sbt_exception,
	&sbt_block_08fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0905,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0908,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_090b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_090e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0911,
	&sbt_exception,
	&sbt_block_0913,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_091b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_092c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_092f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0932,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0935,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0938,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_093b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_093e,
	&sbt_exception,
	&sbt_block_0940,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0943,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_094c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0952,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0955,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0958,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_095c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_095f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0972,
	&sbt_block_0973,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0976,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0979,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_097c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_097f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0985,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0988,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_098b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_098e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0991,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0994,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0997,
	&sbt_exception,
	&sbt_block_0999,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ad,
	&sbt_exception,
	&sbt_block_09af,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09b7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09c3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09cc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09d2,
	&sbt_exception,
	&sbt_block_09d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09df,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09e8,
	&sbt_exception,
	&sbt_block_09ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_09fe,
	&sbt_exception,
	&sbt_block_0a00,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a08,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a10,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a13,
	&sbt_exception,
	&sbt_block_0a15,
	&sbt_exception,
	&sbt_block_0a17,
	&sbt_block_0a18,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a1b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a21,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a24,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a27,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a2a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a2d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a30,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a33,
	&sbt_exception,
	&sbt_block_0a35,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a3d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a40,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a43,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a46,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a49,
	&sbt_exception,
	&sbt_block_0a4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a53,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a56,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a59,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a5c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a5f,
	&sbt_exception,
	&sbt_block_0a61,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a69,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a7a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a7d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a80,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a83,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a86,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a89,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a8c,
	&sbt_exception,
	&sbt_block_0a8e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a91,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0a9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aa0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aa3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aa6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aaa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac0,
	&sbt_block_0ac1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ac7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0acd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ad3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ad6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ad9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0adc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0adf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ae2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ae5,
	&sbt_exception,
	&sbt_block_0ae7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0aef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0af8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0afb,
	&sbt_exception,
	&sbt_block_0afd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b05,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b08,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b0e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b11,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b14,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b17,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b20,
	&sbt_exception,
	&sbt_block_0b22,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b2a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b2d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b30,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b33,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b36,
	&sbt_exception,
	&sbt_block_0b38,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b40,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b48,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b4b,
	&sbt_exception,
	&sbt_block_0b4d,
	&sbt_exception,
	&sbt_block_0b4f,
	&sbt_block_0b50,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b53,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b59,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b5c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b62,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b65,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b68,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b6b,
	&sbt_exception,
	&sbt_block_0b6d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b75,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b78,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b7b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b7e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b81,
	&sbt_exception,
	&sbt_block_0b83,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b8e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b94,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b97,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0b9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ba0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ba3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ba6,
	&sbt_exception,
	&sbt_block_0ba8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bb0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bb3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bb6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bb9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bbc,
	&sbt_exception,
	&sbt_block_0bbe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bc6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bd7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bda,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bdd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0be9,
	&sbt_exception,
	&sbt_block_0beb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bee,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bf7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0bfd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c00,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c03,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c07,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c0a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c1d,
	&sbt_block_0c1e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c21,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c24,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c27,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c2a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c30,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c33,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c36,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c39,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c3c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c3f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c42,
	&sbt_exception,
	&sbt_block_0c44,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c4c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c4f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c52,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c55,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c58,
	&sbt_exception,
	&sbt_block_0c5a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c62,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c65,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c68,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c6b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c6e,
	&sbt_exception,
	&sbt_block_0c70,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c78,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c80,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c83,
	&sbt_exception,
	&sbt_block_0c85,
	&sbt_exception,
	&sbt_block_0c87,
	&sbt_block_0c88,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c91,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c94,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c97,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0c9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ca0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ca3,
	&sbt_exception,
	&sbt_block_0ca5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cb9,
	&sbt_exception,
	&sbt_block_0cbb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cc3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cc6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ccc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ccf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cd2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cd5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cd8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cdb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cde,
	&sbt_exception,
	&sbt_block_0ce0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ce8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ceb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cee,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cf1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cf4,
	&sbt_exception,
	&sbt_block_0cf6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0cfe,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d01,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d04,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d07,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d0a,
	&sbt_exception,
	&sbt_block_0d0c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d14,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d25,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d28,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d31,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d34,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d37,
	&sbt_exception,
	&sbt_block_0d39,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d3c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d45,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d4e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d51,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d55,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d58,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d6b,
	&sbt_block_0d6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d6f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d72,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d75,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d78,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d7e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d81,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d84,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d87,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d8a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d8d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d90,
	&sbt_exception,
	&sbt_block_0d92,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0d9d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0da0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0da3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0da6,
	&sbt_exception,
	&sbt_block_0da8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0db0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0db8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dbb,
	&sbt_exception,
	&sbt_block_0dbd,
	&sbt_exception,
	&sbt_block_0dbf,
	&sbt_block_0dc0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dc3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dc9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dcc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dcf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dd8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ddb,
	&sbt_exception,
	&sbt_block_0ddd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0de5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0de8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0deb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dee,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0df1,
	&sbt_exception,
	&sbt_block_0df3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dfb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0dfe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e04,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e07,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e0a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e0d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e10,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e13,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e16,
	&sbt_exception,
	&sbt_block_0e18,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e20,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e23,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e26,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e29,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e2c,
	&sbt_exception,
	&sbt_block_0e2e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e36,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e39,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e3f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e42,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e45,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e48,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e4e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e51,
	&sbt_exception,
	&sbt_block_0e53,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e5b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e5e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e61,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e64,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e67,
	&sbt_exception,
	&sbt_block_0e69,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e71,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e82,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e85,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e88,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e8e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e91,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e94,
	&sbt_exception,
	&sbt_block_0e96,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0e99,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ea2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ea8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eb7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ecd,
	&sbt_block_0ece,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ed7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eda,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0edd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ee0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ee3,
	&sbt_exception,
	&sbt_block_0ee5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0eed,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ef8,
	&sbt_exception,
	&sbt_block_0efa,
	&sbt_exception,
	&sbt_block_0efc,
	&sbt_block_0efd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f00,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f06,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f09,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f0c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f0f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f12,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f15,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f18,
	&sbt_exception,
	&sbt_block_0f1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f22,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f25,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f28,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f2e,
	&sbt_exception,
	&sbt_block_0f30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f38,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f3b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f41,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f44,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f47,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f4a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f50,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f53,
	&sbt_exception,
	&sbt_block_0f55,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f5d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f60,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f63,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f66,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f69,
	&sbt_exception,
	&sbt_block_0f6b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f73,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f76,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f7c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f7f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f82,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f85,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f88,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f8e,
	&sbt_exception,
	&sbt_block_0f90,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f98,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f9b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0f9e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fa1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fa4,
	&sbt_exception,
	&sbt_block_0fa6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fb7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fba,
	&sbt_exception,
	&sbt_block_0fbc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fc4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fd5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fd8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fdb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fde,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fe1,
	&sbt_exception,
	&sbt_block_0fe3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fe6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0feb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0fee,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ff1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ff4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ff7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ffa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_0ffd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1000,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1003,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1006,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1009,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_100c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_100f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1012,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1015,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1018,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_101b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_101e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1021,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1031,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_103c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_103f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1047,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1054,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_105c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_105f,
	&sbt_exception,
	&sbt_block_1061,
	&sbt_block_1062,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_107c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1080,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1085,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1092,
	&sbt_exception,
	&sbt_block_1094,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1099,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_109d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10a3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b3,
	&sbt_exception,
	&sbt_block_10b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10b8,
	&sbt_exception,
	&sbt_block_10ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10bd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10c0,
	&sbt_exception,
	&sbt_block_10c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10e2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_10fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1104,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1109,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_111a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_111d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1120,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1123,
	&sbt_exception,
	&sbt_block_1125,
	&sbt_block_1126,
	&sbt_block_1127,
	&sbt_block_1128,
	&sbt_block_1129,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_112e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1135,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1143,
	&sbt_exception,
	&sbt_block_1145,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1148,
	&sbt_exception,
	&sbt_block_114a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_115c,
	&sbt_exception,
	&sbt_block_115e,
	&sbt_exception,
	&sbt_block_1160,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1168,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1170,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1178,
	&sbt_block_1179,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_118f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_119b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_119f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11fb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_11ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1202,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1209,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_121f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_122b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_122f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1232,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1239,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1241,
	&sbt_block_1242,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1248,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1250,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1255,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_125d,
	&sbt_block_125e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1264,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_126c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1271,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1279,
	&sbt_block_127a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1280,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1288,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_128d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1295,
	&sbt_block_1296,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_129c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12cd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12db,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12e3,
	&sbt_exception,
	&sbt_block_12e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12eb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12ee,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12f7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_12fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1300,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1303,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1306,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1309,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_130c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_130f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1312,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1315,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1318,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_131b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_131e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1321,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1324,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1327,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_132a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_132d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1330,
	&sbt_exception,
	&sbt_block_1332,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1343,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1354,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1358,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_135c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_135f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1366,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_136b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_136e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1371,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1378,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_137d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1380,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1383,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_138a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_138f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1392,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1395,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_139c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13a1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13a9,
	&sbt_block_13aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_13f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_140b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_142b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1435,
	&sbt_exception,
	&sbt_block_1437,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_143a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1445,
	&sbt_exception,
	&sbt_block_1447,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_144b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_144e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1464,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1468,
	&sbt_exception,
	&sbt_block_146a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_146d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1477,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1480,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_148e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1495,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14be,
	&sbt_block_14bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14c9,
	&sbt_block_14ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14d2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14da,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_14f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1501,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1506,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_150b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_151b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_151e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1521,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1525,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_152f,
	&sbt_block_1530,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1534,
	&sbt_exception,
	&sbt_block_1536,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1546,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1549,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1550,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1554,
	&sbt_exception,
	&sbt_block_1556,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1559,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1563,
	&sbt_block_1564,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1569,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_156c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_156f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1572,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1575,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_157d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1580,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1583,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_158b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_158e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1591,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1599,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_159c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_159f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15a7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15b6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15b9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15c8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15d4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15da,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15f2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15f8,
	&sbt_exception,
	&sbt_block_15fa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_15fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_160e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_161b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1623,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1626,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_162e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1632,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1639,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_163c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1643,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1648,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_164b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_164e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1655,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_165a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_165d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1660,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1667,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_166c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_166f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1672,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1679,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_167e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1683,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1686,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_168a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_168d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1693,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16a3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16af,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16b2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16be,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16c7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16dc,
	&sbt_exception,
	&sbt_block_16de,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16e8,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_16eb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1707,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_171a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_171d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1726,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_172f,
	&sbt_block_1730,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1733,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1742,
	&sbt_exception,
	&sbt_block_1744,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_174c,
	&sbt_block_174d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1756,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_175d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1762,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_176f,
	&sbt_exception,
	&sbt_block_1771,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1780,
	&sbt_exception,
	&sbt_block_1782,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1787,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1796,
	&sbt_exception,
	&sbt_block_1798,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17a7,
	&sbt_exception,
	&sbt_block_17a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17eb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_17f6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1801,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_180c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_180f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_181e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_182d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_183c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_184b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_185a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1869,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1878,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1887,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_188c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1891,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1896,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_189b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18cc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18de,
	&sbt_exception,
	&sbt_block_18e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_18f6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1901,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1908,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_190d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_191a,
	&sbt_exception,
	&sbt_block_191c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_192b,
	&sbt_exception,
	&sbt_block_192d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1932,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1941,
	&sbt_exception,
	&sbt_block_1943,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1952,
	&sbt_exception,
	&sbt_block_1954,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_197a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_197f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1983,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_198a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_198e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1998,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_199b,
	&sbt_exception,
	&sbt_block_199d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_19b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a24,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a3d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a49,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a4c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a52,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a69,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a82,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a85,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a88,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a95,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1a9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1aa9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1aaf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ac6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1adf,
	&sbt_exception,
	&sbt_block_1ae1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1af5,
	&sbt_exception,
	&sbt_block_1af7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1aff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b07,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b17,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b3b,
	&sbt_exception,
	&sbt_block_1b3d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b53,
	&sbt_exception,
	&sbt_block_1b55,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b58,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b5b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1b60,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bdf,
	&sbt_block_1be0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bf2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1bfb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c08,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c12,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c1f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c29,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c36,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c40,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c62,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c68,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c7e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c82,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c85,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1c9f,
	&sbt_exception,
	&sbt_block_1ca1,
	&sbt_exception,
	&sbt_block_1ca3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cbd,
	&sbt_exception,
	&sbt_block_1cbf,
	&sbt_block_1cc0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cd2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cdb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ce8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cf2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1cff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d14,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d1a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d34,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d37,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d45,
	&sbt_exception,
	&sbt_block_1d47,
	&sbt_exception,
	&sbt_block_1d49,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d57,
	&sbt_exception,
	&sbt_block_1d59,
	&sbt_block_1d5a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d6c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d75,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d82,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d95,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d98,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1d9c,
	&sbt_exception,
	&sbt_block_1d9e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1da4,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1da7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1db6,
	&sbt_exception,
	&sbt_block_1db8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dc6,
	&sbt_exception,
	&sbt_block_1dc8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dd5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ddf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1de3,
	&sbt_block_1de4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1de8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1df4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1dfa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e01,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e17,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e21,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e24,
	&sbt_block_1e25,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e2b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e3c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e4b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1e4f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eb0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eb3,
	&sbt_block_1eb4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ebd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ec3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ecb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ed3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1edb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ee3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1eeb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ef3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1efb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f04,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f09,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f0c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f0f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f1f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f2f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f3f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f59,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f68,
	&sbt_exception,
	&sbt_block_1f6a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f74,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f7a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f89,
	&sbt_exception,
	&sbt_block_1f8b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f95,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1f9b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fb2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fb5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fbf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fc7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fcc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fd3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fd8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fdf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fe4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1fea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ff0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ff7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_1ffc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2001,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2004,
	&sbt_exception,
	&sbt_block_2006,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_200e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2013,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_201b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_201f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2023,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2028,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_202d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2030,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2036,
	&sbt_exception,
	&sbt_block_2038,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_203d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2043,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2046,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2049,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2052,
	&sbt_exception,
	&sbt_block_2054,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2057,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_205a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2060,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2063,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_206f,
	&sbt_exception,
	&sbt_block_2071,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2074,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_207a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_207d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2085,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_208f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20ab,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20b4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20b8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20da,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20e1,
	&sbt_exception,
	&sbt_block_20e3,
	&sbt_exception,
	&sbt_block_20e5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20f1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_20f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2110,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2113,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2117,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_211f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2129,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2131,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_214b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_214f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2159,
	&sbt_exception,
	&sbt_block_215b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2161,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2169,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_216e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2176,
	&sbt_exception,
	&sbt_block_2178,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_217e,
	&sbt_block_217f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2184,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2198,
	&sbt_exception,
	&sbt_block_219a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_219d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21a2,
	&sbt_exception,
	&sbt_block_21a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21bf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21c6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21cf,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21de,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21e1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21ea,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_21f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2208,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_220c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2216,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_221a,
	&sbt_block_221b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2223,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2230,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2235,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2239,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2241,
	&sbt_block_2242,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_224a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_224f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2257,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_225c,
	&sbt_exception,
	&sbt_block_225e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2263,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2269,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_227b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_227e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2284,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2287,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_228c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2295,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_229a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_229f,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22a2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22aa,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22b0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22b5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22bb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22c5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_22f5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2305,
	&sbt_exception,
	&sbt_block_2307,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2315,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_231c,
	&sbt_exception,
	&sbt_block_231e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_232b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2330,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_233a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2345,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2353,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_235a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2367,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_236c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2378,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_237f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2385,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2392,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2395,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2399,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_239c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23ad,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23c4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23d3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23d6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23d9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23dc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23df,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_23f0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2424,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_242f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2437,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_243a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_243e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2441,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2447,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_244a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24ad,
	&sbt_exception,
	&sbt_block_24af,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24b3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24d1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24ec,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24f9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24fc,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_24ff,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_250a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_250d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2510,
	&sbt_exception,
	&sbt_block_2512,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2515,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2519,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_251c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_251f,
	&sbt_exception,
	&sbt_block_2521,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2524,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2586,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2589,
	&sbt_exception,
	&sbt_block_258b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_258e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25ea,
	&sbt_block_25eb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25f3,
	&sbt_block_25f4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_25fd,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2600,
	&sbt_exception,
	&sbt_block_2602,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2605,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_260f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2617,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_261c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_262a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_262f,
	&sbt_block_2630,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2635,
	&sbt_exception,
	&sbt_block_2637,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_263a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2640,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2646,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_264f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2654,
	&sbt_exception,
	&sbt_block_2656,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_265b,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_265e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2679,
	&sbt_block_267a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2684,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2687,
	&sbt_exception,
	&sbt_block_2689,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_268c,
	&sbt_exception,
	&sbt_block_268e,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2691,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2694,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2697,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_269a,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_269d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26a0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26a3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26a6,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26a9,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26af,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26b8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26c1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26d3,
	&sbt_exception,
	&sbt_block_26d5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26d8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26e7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_26f6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2705,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2711,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2716,
	&sbt_exception,
	&sbt_block_2718,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_271d,
	&sbt_exception,
	&sbt_block_271f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2728,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2731,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2734,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2737,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2749,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2758,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2764,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2774,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_277a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2783,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2798,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27ba,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27c9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27ce,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27e0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_27f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2813,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2819,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_281d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2824,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_282b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2830,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_283f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_284b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_285b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_286d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2872,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2876,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_287b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2881,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_288b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2894,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2897,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_289a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28a5,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28ac,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28b1,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28c0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28cb,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28d7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28e9,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28ef,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28f8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_28fe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2908,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2911,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2914,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2917,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2922,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2929,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_292e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_293e,
	&sbt_exception,
	&sbt_block_2940,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_294a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2955,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_295c,
	&sbt_exception,
	&sbt_block_295e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2962,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2967,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_296d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2977,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2980,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2983,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2986,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2990,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2996,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_299b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29a4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29ae,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29bc,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29c2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29ca,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29d0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29dd,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29e3,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29e6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_29f3,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a01,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a09,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a0f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a14,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a27,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a35,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a3b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a43,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a49,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a56,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a5c,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a63,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a67,
	&sbt_exception,
	&sbt_block_2a69,
	&sbt_exception,
	&sbt_block_2a6b,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a6f,
	&sbt_block_2a70,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a73,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a81,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2a9c,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2aa2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ab4,
	&sbt_exception,
	&sbt_block_2ab6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ac4,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ad0,
	&sbt_exception,
	&sbt_block_2ad2,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ae6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2af7,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2afe,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b04,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b08,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b1d,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b24,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b39,
	&sbt_block_2b3a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b46,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b4d,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b50,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b5f,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b68,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b77,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b82,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b8e,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2b9a,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ba6,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bb2,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bb5,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2bb8,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f00,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f10,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f20,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f30,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f40,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f50,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f60,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f70,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f80,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2f90,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fa0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fb0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fc0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fd0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2fe0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_block_2ff0,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
	&sbt_exception,
};

extern const uint8_t sbt_rom_data[] = {
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x01,0x02,0x01,0x02,0x02,0x03,0x01,0x02,0x02,0x03,0x02,0x03,0x03,0x04,0x02,
    0x01,0x00,0x80,0x02,0xec,0x1b,0x02,0x11,0x00,0x80,0x03,0xb1,0x0c,0x03,0x03,0xb6,
    0x07,0x02,0x03,0xc0,0x08,0x00,0x02,0xc1,0x03,0x03,0xc2,0x03,0x03,0x03,0xc5,0x4a,
    0x3e,0x02,0xc7,0x40,0x02,0x26,0x01,0x02,0xf2,0x01,0x10,0xe0,0x3f,0x2a,0x27,0x2d,
    0x26,0x0c,0x53,0xf4,0x3f,0x16,0x1d,0x15,0x0f,0x06,0x00,0x10,0xe1,0x00,0x15,0x18,
    0x11,0x19,0x13,0x2b,0x63,0x40,0x09,0x22,0x2a,0x30,0x39,0x3f,0x02,0x35,0x00,0x02,
    0x13,0x00,0x05,0x2a,0x00,0x00,0x00,0x7f,0x02,0x3a,0x05,0x00,0x01,0x10,0x00,0x01,
    0x28,0x00,0x00,0x01,0x29,0x00,0x00,0x02,0x3d,0x07,0x02,0x3c,0x01,0x02,0x22,0x01,
    0x02,0x21,0x01,0x02,0x31,0x20,0x01,0xe2,0x01,0xe1,0x02,0x23,0x03,0x02,0x26,0x0e,
    0x02,0x27,0x70,0x02,0x20,0x3f,0x00,0x54,0x68,0x75,0x6e,0x64,0x65,0x72,0x00,0x63,
    0x72,0x61,0x63,0x6b,0x65,0x72,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x01,0x02,0x67,0x69,0x6b,0x02,
    0x03,0xff,0xc4,0x02,0xc6,0x00,0xca,0x02,0xcc,0x02,0xd1,0x02,0xd3,0x00,0x02,0x03,
    0xff,0xc8,0x02,0xc6,0x00,0xce,0x02,0xcc,0x02,0xd6,0x02,0xd3,0x00,0x02,0x03,0x00,
    0x00,0xbc,0x00,0xd0,0x00,0xd8,0x04,0x03,0x00,0x00,0xbc,0xbd,0xc7,0x00,0xbf,0x00,
    0x61,0x00,0xd8,0xd4,0xd5,0x05,0x03,0x00,0xbc,0xbd,0xbd,0xbd,0xbe,0xbf,0x00,0x00,
    0x00,0xc0,0xc1,0xc2,0xc2,0xc2,0xc3,0x0f,0x05,0xff,0x00,0x00,0x00,0x00,0x6d,0x08,
    0x6e,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6f,0x06,0x71,0x06,0x73,0x0a,0x75,0x08,
    0x76,0x0a,0x00,0x00,0x78,0x06,0x7a,0x06,0x7c,0x06,0x7e,0x06,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x06,0x82,0x06,0x84,0x06,0x86,0x08,0x87,0x06,
    0x89,0x06,0x8b,0x06,0x8d,0x04,0x8e,0x06,0x90,0x06,0x92,0x06,0x94,0x04,0x95,0x06,
    0x89,0x04,0x97,0x06,0x00,0x00,0x99,0x06,0x9b,0x04,0x9c,0x06,0x9e,0x06,0xa0,0x06,
    0xa2,0x04,0xa3,0x04,0x00,0x00,0x63,0x04,0xa4,0x04,0xa5,0x04,0xa6,0x06,0x00,0x00,
    0x63,0x04,0x00,0x00,0xa8,0x04,0xa9,0x06,0xab,0x04,0xac,0x06,0xae,0x06,0xb0,0x06,
    0xb2,0x06,0x00,0x00,0xb4,0x06,0xb6,0x06,0x89,0x04,0xb8,0x06,0x89,0x04,0xba,0x06,
    0x78,0xff,0x7a,0x00,0x7b,0x00,0x7c,0x49,0x7d,0x4a,0x7e,0xb2,0x7f,0x94,0x22,0x00,
    0x78,0xff,0x7a,0xbf,0x7b,0x25,0x7c,0x80,0x7d,0xfc,0x7e,0xdf,0x7f,0xb6,0x22,0x00,
    0x78,0xff,0x7a,0x80,0x7b,0xfc,0x7c,0xbf,0x7d,0x25,0x7e,0xd5,0x7f,0xfe,0x22,0x00,
    0x78,0x50,0x7a,0x80,0x7b,0xfc,0x7c,0xbf,0x7d,0x25,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0x00,0x7b,0xb0,0x7c,0x08,0x7d,0xca,0x7e,0xf7,0x7f,0xed,0x22,0x00,
    0x78,0xff,0x7a,0xef,0x7b,0x7b,0x7c,0x14,0x7d,0xa5,0x7e,0x59,0x7f,0xce,0x22,0x00,
    0x78,0x00,0x7a,0xff,0x7b,0xff,0x7c,0xb2,0x7d,0x94,0x7e,0x49,0x7f,0x4a,0x22,0x00,
    0x78,0xef,0x7a,0xff,0x7b,0xff,0x7c,0x59,0x7d,0xce,0x7e,0x14,0x7f,0xa5,0x22,0x00,
    0x78,0xff,0x7a,0xdf,0x7b,0x96,0x7c,0x2f,0x7d,0xfe,0x7e,0x5f,0x7f,0xdf,0x22,0x00,
    0x78,0xff,0x7a,0x2f,0x7b,0xfe,0x7c,0xdf,0x7d,0x96,0x7e,0x5a,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x78,0xff,0x7a,0xff,0x7b,0xff,0x7c,0xff,0x7d,0xff,0x7e,0xff,0x7f,0xff,0x22,0x00,
    0x00,0x00,0x08,0x08,0x14,0x14,0x14,0x14,0x08,0x3c,0x03,0x23,0x04,0x0a,0x08,0x08,
    0x10,0x08,0x08,0x10,0x08,0x2a,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,
    0x1c,0x22,0x08,0x0c,0x1c,0x22,0x3e,0x20,0x10,0x18,0x3e,0x02,0x38,0x04,0x3e,0x20,
    0x1c,0x22,0x1c,0x22,0x00,0x00,0x00,0x00,0x10,0x08,0x00,0x00,0x04,0x08,0x1c,0x22,
    0x1c,0x22,0x08,0x14,0x1e,0x22,0x1c,0x22,0x1e,0x22,0x3e,0x02,0x3e,0x02,0x3c,0x02,
    0x22,0x22,0x1c,0x08,0x20,0x20,0x22,0x12,0x02,0x02,0x22,0x36,0x22,0x22,0x1c,0x22,
    0x1e,0x22,0x1c,0x22,0x1e,0x22,0x1c,0x22,0x3e,0x08,0x22,0x22,0x22,0x22,0x22,0x22,
    0x22,0x22,0x22,0x22,0x3e,0x20,0x3e,0x06,0x00,0x02,0x3e,0x30,0x00,0x00,0x00,0x00,
    0x04,0x08,0x00,0x00,0x02,0x02,0x00,0x00,0x20,0x20,0x00,0x00,0x18,0x24,0x00,0x00,
    0x02,0x02,0x08,0x00,0x10,0x00,0x02,0x02,0x0c,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x0c,0x08,0x08,0x0e,0x18,0x00,0x00,0x63,0x77,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x00,0x04,0x00,0x1c,0x00,0x60,0x00,0x60,0x00,0x00,0x00,0x00,0xff,0xff,
    0x01,0x00,0x7f,0x7f,0x40,0x00,0x78,0x3c,0x00,0x00,0xe0,0xc0,0x01,0x03,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x08,0x08,0x14,0x00,0x3e,0x14,0x0a,0x1c,0x10,0x08,0x0a,0x04,0x08,0x00,
    0x04,0x04,0x20,0x20,0x1c,0x08,0x08,0x3e,0x00,0x00,0x00,0x3e,0x00,0x00,0x10,0x08,
    0x32,0x2a,0x08,0x08,0x20,0x18,0x10,0x18,0x14,0x12,0x1e,0x20,0x02,0x1e,0x10,0x08,
    0x22,0x1c,0x22,0x3c,0x08,0x00,0x08,0x00,0x04,0x02,0x3e,0x00,0x10,0x20,0x10,0x08,
    0x2a,0x3a,0x22,0x22,0x22,0x1e,0x02,0x02,0x22,0x22,0x02,0x1e,0x02,0x1e,0x02,0x02,
    0x22,0x3e,0x08,0x08,0x20,0x20,0x0a,0x06,0x02,0x02,0x2a,0x2a,0x26,0x2a,0x22,0x22,
    0x22,0x1e,0x22,0x22,0x22,0x1e,0x02,0x1c,0x08,0x08,0x22,0x22,0x22,0x22,0x22,0x2a,
    0x14,0x08,0x14,0x08,0x10,0x08,0x06,0x06,0x04,0x08,0x30,0x30,0x08,0x14,0x00,0x00,
    0x10,0x00,0x1c,0x20,0x1e,0x22,0x3c,0x02,0x3c,0x22,0x1c,0x22,0x04,0x1e,0x1c,0x22,
    0x1e,0x22,0x0c,0x08,0x18,0x10,0x22,0x12,0x08,0x08,0x36,0x2a,0x1e,0x22,0x1c,0x22,
    0x1e,0x22,0x3c,0x22,0x3a,0x06,0x3c,0x02,0x1e,0x04,0x22,0x22,0x22,0x22,0x22,0x22,
    0x22,0x14,0x22,0x22,0x3e,0x10,0x0c,0x06,0x08,0x08,0x18,0x30,0x06,0x49,0x3e,0x1c,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x40,
    0x00,0xc0,0x0e,0x8f,0x12,0x90,0x2c,0x08,0x3c,0x0f,0x00,0x00,0x06,0x0f,0xff,0x07,
    0x00,0x00,0x7f,0x70,0x00,0x00,0x1e,0x0f,0x00,0x01,0x80,0x00,0x07,0x0f,0x00,0x08,
    0x00,0x3c,0x00,0x24,0x00,0xf8,0x00,0x08,0x00,0x07,0x00,0x04,0x00,0x0f,0x00,0x09,
    0x07,0x07,0x00,0x00,0x70,0x70,0x00,0x00,0x00,0x00,0xe0,0xc0,0x79,0x3f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x78,0x00,0x00,0x00,0x00,
    0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x80,0xc0,0x00,0x00,0xe7,0xc3,0x01,0x03,0x00,0x00,0x0f,0x0f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x3c,0x3c,0x78,0x78,0x3c,0x3c,0xc0,0xc0,0xf3,0xf3,0x00,0x00,
    0xf0,0xe0,0x00,0x81,0x00,0x00,0x0f,0x07,0x00,0x00,0x00,0x00,0xf0,0xf0,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0x0f,0x0f,0x00,0x00,0x3c,0x3c,0x00,0x00,
    0xf0,0xf0,0x00,0x00,0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x60,
    0x06,0x1e,0x60,0xe0,0x00,0xff,0x06,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x60,0x60,0x01,0x00,0xc0,0xc0,0x00,0x00,
    0x60,0x60,0x0e,0x18,0x82,0x04,0xe3,0xc0,0xff,0xff,0x03,0x01,0x00,0x00,0x80,0x00,
    0xe0,0xc0,0x00,0x00,0x00,0x00,0x1e,0x1e,0x78,0xf8,0x00,0xff,0x00,0xff,0x1e,0x1f,
    0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xf8,0x7c,0x7f,0xff,0x00,0x01,0x00,0x00,
    0x80,0xc0,0x07,0x03,0xc0,0x80,0x07,0x07,0x78,0xf8,0x00,0x00,0x00,0x00,0xf8,0x78,
    0xe0,0x80,0xbf,0xff,0x0f,0x07,0xbf,0xff,0x00,0x00,0x00,0x80,0xff,0xff,0x00,0x01,
    0x00,0x80,0x3f,0x1f,0xfc,0xf8,0x00,0x01,0xe0,0xc0,0x07,0x0f,0x00,0x00,0xe0,0xf0,
    0x07,0x07,0x00,0x00,0x70,0x70,0x00,0x00,0x00,0x00,0x80,0x00,0x1f,0x0f,0x00,0xff,
    0x00,0x01,0x00,0xff,0x00,0x80,0x00,0xbc,0x00,0xa4,0x78,0xff,0x00,0xf7,0x00,0x14,
    0x0f,0xff,0x00,0x80,0x00,0xfc,0x00,0x04,0x00,0xff,0x00,0xf3,0x00,0x12,0x00,0x0f,
    0x00,0x08,0xe0,0xf0,0x00,0x00,0x81,0x00,0x07,0x0f,0x00,0x00,0x0f,0xff,0x00,0x00,
    0x00,0xff,0x00,0x80,0x3c,0x3c,0x78,0x78,0x3c,0xfc,0xc0,0xff,0xf3,0xf3,0x00,0x00,
    0xc0,0x80,0xc3,0xe7,0x00,0x00,0x03,0x01,0x00,0xff,0x00,0x01,0xf0,0xff,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0x0f,0xff,0x00,0x80,0x3c,0xfc,0x00,0x00,
    0xf0,0xf3,0x00,0x02,0x0f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x60,
    0x1e,0x1e,0xc0,0x00,0xff,0x00,0x03,0x00,0x00,0x60,0x00,0x10,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x68,0x6c,0x00,0x00,0xc0,0xc0,0x00,0x00,
    0x68,0x6c,0x30,0x60,0x08,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0xc0,0x00,0x03,0x1e,0x1e,0xf0,0xf0,0xff,0xff,0xff,0xff,0x0f,0x0f,
    0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x1e,0xfc,0xf0,0x07,0x1f,0x00,0x00,
    0xc0,0xe0,0x03,0x01,0xc0,0xc0,0x07,0x03,0xf8,0xf0,0x03,0x0f,0x00,0x00,0x7c,0x3c,
    0x00,0x00,0xfe,0xf8,0x07,0x03,0xfe,0xf8,0x00,0x00,0xc0,0xe0,0xff,0xe7,0x03,0x07,
    0xc0,0xe0,0x0f,0x07,0xf0,0xe0,0x03,0x07,0x80,0x00,0x1f,0x3f,0x00,0x00,0xf8,0xfc,
    0x07,0x03,0xe7,0xff,0xff,0xff,0x07,0x01,0xff,0xff,0xff,0xff,0xe0,0x80,0xf8,0xf8,
    0x1f,0x1f,0x00,0x00,0x00,0x00,0xf8,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x80,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x01,0xfc,0xfc,0xc0,0xc0,0x3f,0x3f,
    0x00,0x00,0xfc,0xfc,0x03,0x03,0xfe,0xf8,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x7f,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0xe0,0xff,0xff,0xff,0xff,0x3f,0xff,
    0x00,0x00,0xfe,0xfe,0x03,0x03,0xfc,0xf0,0x00,0x00,0x3f,0x3f,0xfc,0xf0,0x3f,0x3f,
    0x00,0x00,0x00,0x00,0xfc,0xfc,0x0f,0x0f,0x00,0x00,0x00,0x00,0xc0,0xc0,0xff,0xff,
    0xfe,0xfc,0xff,0xff,0x0f,0x3f,0x00,0x00,0xff,0xfc,0xcf,0xff,0xff,0xff,0x00,0x00,
    0xff,0xf8,0x07,0x01,0xff,0xf8,0x00,0x00,0x00,0x80,0xff,0xff,0xff,0xff,0x00,0x01,
    0x1f,0x0f,0xf8,0xf0,0x00,0x80,0x00,0x01,0xfe,0xfe,0x1f,0x0f,0xf8,0xf0,0x7f,0x7f,
    0xfc,0xfc,0x3f,0x7f,0x00,0x00,0x00,0x00,0xfc,0xfe,0x3f,0x3f,0xfe,0xfc,0x7f,0x3f,
    0x7f,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x01,0x00,0xff,0xff,0xff,0xff,0x01,0x00,0xff,0xff,0xff,0xff,0x80,0x00,0xf8,0xf8,
    0x1f,0xff,0x00,0x00,0x00,0xff,0xf8,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x80,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0x01,0x03,0xfc,0xfc,0xc0,0xc0,0xff,0xff,
    0xff,0xff,0xff,0xff,0x03,0x03,0x00,0x00,0x00,0x00,0xf8,0xfe,0x03,0x0f,0x00,0x00,
    0x00,0x00,0x00,0x00,0xf8,0xfe,0x03,0x0f,0xf0,0xf0,0xff,0x1f,0xff,0xff,0xff,0xff,
    0x00,0x00,0xff,0xff,0x01,0x01,0xc0,0x00,0x03,0x07,0x1f,0x1f,0xe0,0xe0,0x3f,0x3f,
    0x00,0x00,0x00,0x00,0xfe,0xfe,0x07,0x07,0x00,0x03,0x00,0x00,0xe0,0xe0,0x7f,0x7f,
    0xf0,0xc0,0xff,0xff,0xff,0xff,0x00,0x00,0xf0,0xc0,0xff,0xff,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0xe0,0xff,0xff,0xff,0xff,0x03,0x07,
    0x07,0x03,0xe0,0xc0,0xc0,0xe0,0x03,0x07,0xff,0xff,0x07,0x03,0xe0,0xc0,0xff,0xff,
    0xf8,0xf0,0xff,0xff,0x00,0x01,0x00,0x80,0xff,0xff,0x1f,0x0f,0xf8,0xf0,0x1f,0x0f,
    0x0f,0x03,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x00,0x00,0x08,0x00,0x00,0x00,0x3e,0x14,0x28,0x1e,0x04,0x62,0x2a,0x12,0x00,0x00,
    0x04,0x08,0x20,0x10,0x1c,0x2a,0x08,0x08,0x10,0x10,0x00,0x00,0x00,0x00,0x04,0x02,
    0x26,0x22,0x08,0x08,0x04,0x02,0x20,0x22,0x3e,0x10,0x20,0x22,0x22,0x22,0x04,0x04,
    0x22,0x22,0x20,0x10,0x08,0x00,0x08,0x08,0x04,0x08,0x3e,0x00,0x10,0x08,0x08,0x00,
    0x1a,0x02,0x3e,0x22,0x22,0x22,0x02,0x22,0x22,0x22,0x02,0x02,0x02,0x02,0x32,0x22,
    0x22,0x22,0x08,0x08,0x20,0x22,0x0a,0x12,0x02,0x02,0x22,0x22,0x32,0x22,0x22,0x22,
    0x02,0x02,0x2a,0x12,0x0a,0x12,0x20,0x22,0x08,0x08,0x22,0x22,0x22,0x14,0x2a,0x36,
    0x14,0x22,0x08,0x08,0x04,0x02,0x06,0x06,0x10,0x20,0x30,0x30,0x22,0x00,0x00,0x00,
    0x00,0x00,0x3c,0x22,0x22,0x22,0x02,0x02,0x22,0x22,0x3e,0x02,0x04,0x04,0x22,0x3c,
    0x22,0x22,0x08,0x08,0x10,0x10,0x0e,0x12,0x08,0x08,0x2a,0x2a,0x22,0x22,0x22,0x22,
    0x22,0x1e,0x22,0x3c,0x02,0x02,0x1c,0x20,0x04,0x24,0x22,0x32,0x22,0x14,0x2a,0x2a,
    0x08,0x14,0x22,0x3c,0x08,0x04,0x0c,0x0c,0x08,0x08,0x18,0x18,0x30,0x00,0x3e,0x77,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x90,0x3c,
    0xf0,0x3c,0xd8,0x78,0x20,0x40,0x01,0x00,0x01,0x00,0x80,0xc0,0x1f,0x3f,0x07,0x07,
    0x00,0x00,0x70,0x70,0x00,0x00,0x1e,0x3c,0x00,0x00,0x80,0xc0,0x07,0x03,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0xf8,0xf8,0x00,0x00,0x07,0x07,0x00,0x00,0x0f,0x0f,0x00,0x00,
    0x00,0x00,0x08,0x00,0x00,0x00,0x14,0x00,0x08,0x00,0x60,0x00,0x2c,0x00,0x00,0x00,
    0x10,0x00,0x08,0x00,0x08,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x1c,0x00,0x1c,0x00,0x3e,0x00,0x1c,0x00,0x10,0x00,0x1c,0x00,0x1c,0x00,0x04,0x00,
    0x1c,0x00,0x0e,0x00,0x00,0x00,0x04,0x00,0x10,0x00,0x00,0x00,0x04,0x00,0x08,0x00,
    0x3c,0x00,0x22,0x00,0x1e,0x00,0x1c,0x00,0x1e,0x00,0x3e,0x00,0x02,0x00,0x3c,0x00,
    0x22,0x00,0x1c,0x00,0x1c,0x00,0x22,0x00,0x3e,0x00,0x22,0x00,0x22,0x00,0x1c,0x00,
    0x02,0x00,0x2c,0x00,0x22,0x00,0x1c,0x00,0x08,0x00,0x1c,0x00,0x08,0x00,0x22,0x00,
    0x22,0x00,0x08,0x00,0x3e,0x00,0x3e,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x00,0x7f,
    0x00,0x00,0x3c,0x00,0x1e,0x00,0x3c,0x00,0x3c,0x00,0x3c,0x00,0x04,0x00,0x20,0x1c,
    0x22,0x00,0x1c,0x00,0x12,0x0c,0x22,0x00,0x1c,0x00,0x22,0x00,0x22,0x00,0x1c,0x00,
    0x02,0x02,0x20,0x20,0x02,0x00,0x1e,0x00,0x18,0x00,0x2c,0x00,0x08,0x00,0x36,0x00,
    0x22,0x00,0x20,0x1c,0x3e,0x00,0x38,0x00,0x08,0x08,0x0e,0x00,0x00,0x00,0x63,0x00,
    0x01,0x01,0x03,0x03,0x07,0x07,0x0f,0x0f,0x1f,0x1f,0x3f,0x3f,0x7f,0x7f,0x00,0x00,
    0x00,0x00,0x10,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0xe0,0xf0,0x79,0xf0,0x07,0x07,
    0x00,0x00,0x70,0x70,0x00,0x00,0x78,0xf0,0x00,0x00,0xe0,0xf0,0x01,0x00,0x00,0x00,
    0x3c,0x00,0x24,0x00,0xf8,0x78,0x00,0x00,0x07,0x00,0x04,0x00,0x0f,0x0f,0x00,0x00,
    0xff,0xff,0x00,0x00,0x7f,0x7f,0x00,0x00,0x18,0x3c,0x18,0x00,0x06,0x00,0xff,0xff,
    0x00,0x00,0xff,0xff,0x00,0x00,0xbc,0xbc,0x00,0x00,0xff,0xff,0xf7,0xf7,0x00,0x00,
    0xff,0xff,0x00,0x00,0xfc,0xfc,0x00,0x00,0xff,0xff,0xf3,0xf3,0x00,0x00,0x0f,0x0f,
    0x00,0x00,0x78,0x3c,0x00,0x04,0x00,0x00,0x1e,0x3c,0x00,0x20,0xff,0xff,0x00,0x00,
    0xff,0xff,0x00,0x00,0x3c,0x3c,0x78,0x78,0xfc,0xfc,0xff,0xff,0xf3,0xf3,0x00,0x00,
    0x00,0x00,0xff,0x7e,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,
    0x3c,0x3c,0x00,0x00,0x78,0x78,0x00,0x00,0xff,0xff,0x00,0x00,0xfc,0xfc,0x00,0x00,
    0xf3,0xf3,0x00,0x00,0x0f,0x0f,0x00,0x00,0x00,0xc0,0x00,0xff,0x00,0x03,0x60,0x60,
    0x1e,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x18,0x08,0x04,0x00,0xc0,0x00,0x01,
    0x00,0x00,0x00,0x00,0xc6,0xc6,0x00,0x00,0x68,0x60,0x00,0x00,0xc0,0xc0,0x00,0x00,
    0x68,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0xf0,0xf0,0x0f,0x0f,0x1e,0x1e,0xc0,0x00,0xff,0xe0,0xff,0x01,0x03,0x00,
    0xff,0x00,0x00,0xe0,0x00,0x01,0x00,0x00,0x1e,0x0f,0xc0,0x00,0x7f,0xff,0x00,0x01,
    0xe0,0xf0,0x01,0x00,0xe0,0xe0,0x03,0x01,0xe0,0x80,0x3f,0xff,0x00,0x00,0x3e,0x1e,
    0x00,0x00,0xe0,0x00,0x01,0x00,0xe0,0x00,0x00,0x00,0xf0,0xf8,0xc3,0x81,0x0f,0x1f,
    0xe0,0xf0,0x03,0x01,0xc0,0x80,0x07,0x0f,0x00,0x00,0x7e,0xfc,0x00,0x00,0x7e,0x3f,
    0xff,0x00,0x01,0x00,0x7f,0x00,0x40,0x00,0x7e,0xff,0x00,0x00,0x00,0x00,0xff,0x0f,
    0x00,0x00,0xff,0x00,0x80,0x00,0xbc,0x3c,0x80,0x00,0xff,0x78,0xf7,0x00,0x14,0x00,
    0xff,0x0f,0x80,0x00,0xfc,0x3c,0x00,0x00,0xff,0xc0,0xf3,0xf3,0x00,0x00,0x0f,0x0f,
    0x00,0x00,0x3c,0x78,0x04,0x00,0x00,0x00,0x3c,0x1e,0x20,0x00,0xff,0x00,0x01,0x00,
    0xff,0xf0,0x00,0x00,0x3c,0x3c,0x78,0x78,0xfc,0x3c,0xff,0x00,0xf3,0xf0,0x02,0x00,
    0x00,0x00,0x3c,0x18,0x00,0x18,0x00,0x00,0xff,0x00,0x01,0x00,0xff,0x00,0x80,0x00,
    0x3c,0x00,0x24,0x00,0x78,0x00,0x48,0x00,0xff,0x00,0x81,0x00,0xfc,0x00,0x04,0x00,
    0xf3,0x00,0x12,0x00,0x0f,0x00,0x08,0x00,0xe0,0x60,0xff,0x00,0x07,0x06,0x60,0x60,
    0x1e,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0xc6,0x82,0x48,0xe3,0x61,0x03,0x03,
    0x00,0xc0,0x80,0x40,0xc6,0xc6,0x00,0x48,0x60,0x61,0x01,0x00,0xc0,0xc0,0x00,0x40,
    0x60,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0xf8,0x78,0x1f,0x1e,0x1e,0x1e,0x00,0x00,0xf0,0xf8,0x07,0x1f,0x00,0x00,
    0x00,0x00,0xf0,0xf8,0x07,0x1f,0x00,0x80,0x0f,0x07,0x00,0x00,0xfc,0xf0,0x03,0x07,
    0xf0,0xf8,0x00,0x00,0xf0,0xf0,0x01,0x00,0x00,0x00,0xfe,0xf8,0x03,0x0f,0x1f,0x0f,
    0x00,0x00,0x18,0x7e,0x00,0x00,0x00,0x00,0x18,0x7e,0xfc,0x7e,0x00,0x00,0x3f,0x7e,
    0xf0,0xe0,0x01,0x03,0x80,0xc0,0x0f,0x07,0x00,0x00,0xf8,0xf0,0x81,0xc3,0x1f,0x0f,
    0x00,0x00,0x7e,0x18,0xff,0x1f,0x00,0x00,0xff,0x00,0xff,0xf8,0x00,0x00,0xf8,0xf8,
    0xff,0xff,0x00,0x01,0xff,0xff,0xff,0xff,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
    0xc0,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0x03,0x03,0xfc,0xfc,0xc0,0x80,0xff,0xff,
    0xff,0xff,0xff,0xff,0x03,0x01,0x00,0x00,0x00,0x80,0xff,0xff,0x3f,0xff,0x00,0x00,
    0x00,0x00,0x00,0x80,0xff,0xff,0x3f,0xff,0xf8,0xf8,0x1f,0x0f,0xfc,0xf0,0xff,0xff,
    0x80,0x80,0xff,0xff,0x00,0x00,0x00,0x00,0x0f,0x1f,0x0f,0x0f,0xf0,0xf0,0x3f,0x1f,
    0x80,0x80,0x00,0x00,0xff,0xff,0x03,0x03,0x0f,0x3f,0x00,0x00,0xf0,0xf0,0x3f,0x3f,
    0x00,0x00,0xff,0xfc,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x3f,0x3f,0xc0,0xf0,
    0x03,0x0f,0x00,0x00,0x00,0x00,0x03,0x0f,0xf0,0xf8,0xff,0xff,0xff,0xff,0x0f,0x1f,
    0x01,0x00,0x80,0x00,0xf0,0xf8,0x0f,0x1f,0xff,0xff,0x03,0x07,0xc0,0xe0,0xff,0xff,
    0xe0,0xc0,0xff,0xff,0x03,0x07,0xc0,0xe0,0xff,0xff,0x07,0x03,0xe0,0xc0,0x07,0x03,
    0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x1f,0x1f,0x00,0x00,0x00,0x00,0xf8,0xf8,0x00,0x00,0xf8,0xf8,
    0xff,0xff,0x01,0x07,0xff,0xff,0xff,0xff,0x80,0xe0,0xf8,0xfe,0xff,0xff,0x1f,0x7f,
    0xc0,0xc0,0x3f,0x3f,0x00,0x00,0xfc,0xfc,0x03,0x03,0xfc,0xfc,0x80,0x00,0xff,0xff,
    0xff,0xff,0xff,0xff,0x01,0x00,0x00,0x00,0xc0,0xc0,0xff,0xff,0xff,0xff,0x03,0x0f,
    0x00,0x00,0xc0,0xc0,0xff,0xff,0xff,0xff,0xfc,0xfc,0x07,0x07,0xc0,0x00,0xff,0xff,
    0xc0,0xc0,0x7f,0x7f,0x00,0x00,0x00,0x00,0x1f,0x3f,0x07,0x07,0xf8,0xf8,0x1f,0x1f,
    0x80,0xc0,0x80,0x80,0xff,0xff,0x01,0x01,0xff,0xff,0x00,0x03,0xf8,0xf8,0x1f,0x1f,
    0x00,0x00,0xf0,0xc0,0xff,0xff,0x80,0x83,0x00,0x00,0xff,0xff,0x1f,0x0f,0xfc,0xfe,
    0x3f,0x7f,0x00,0x00,0x00,0x00,0x3f,0x7f,0xfc,0xfe,0x7f,0x3f,0xfe,0xfc,0x3f,0x7f,
    0x00,0x00,0x00,0x00,0xfc,0xfc,0x3f,0x3f,0xfe,0xfe,0x0f,0x1f,0xf0,0xf8,0x7f,0x7f,
    0x80,0x00,0xff,0xff,0x0f,0x1f,0xf0,0xf8,0xff,0xff,0x01,0x00,0x80,0x00,0x01,0x00,
    0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
};
};  // namespace CPU
};  // namespace Cube
